// <assemblyHash>ef828f26</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias mmf;
extern alias mnh;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("Microsoft.Net.Http")]
[assembly: mmf::Microsoft.Moles.Framework.MolesDelegatesType(typeof(global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates))]
[assembly: global::System.Reflection.AssemblyCompany("Microsoft")]
[assembly: global::System.Reflection.AssemblyVersion("0.3.0.0")]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AuthenticationHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAuthenticationHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MAuthenticationHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAuthenticationHeaderValue(mnh::System.Net.Http.Headers.AuthenticationHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string> ParameterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "get_Parameter");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string> SchemeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Scheme", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "get_Scheme");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MAuthenticationHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MAuthenticationHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MAuthenticationHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MAuthenticationHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.Net.Http.Headers.AuthenticationHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, mnh::System.Net.Http.Headers.AuthenticationHeaderValue> ConstructorAuthenticationHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetAuthenticationLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetAuthenticationLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAuthenticationLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), "GetAuthenticationLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ParameterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "get_Parameter");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> SchemeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Scheme", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "get_Scheme");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.AuthenticationHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryGetParametersEndIndex(System.String,System.Int32@,System.Int32@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefRefFunc<string, int, int, bool> TryGetParametersEndIndexStringInt32RefInt32Ref
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryGetParametersEndIndex", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), "TryGetParametersEndIndex", 
                     typeof(string), typeof(int).MakeByRefType(), typeof(int).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.TrySkipFirstBlob(System.String,System.Int32@,System.Int32@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefRefFunc<string, int, int, bool> TrySkipFirstBlobStringInt32RefInt32Ref
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySkipFirstBlob", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue), "TrySkipFirstBlob", 
                     typeof(string), typeof(int).MakeByRefType(), typeof(int).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.ByteArrayContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.ByteArrayContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ByteArrayContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MByteArrayContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.ByteArrayContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MByteArrayContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MByteArrayContent(mnh::System.Net.Http.ByteArrayContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.CreateContentReadStream"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream> CreateContentReadStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), (object)null, "CreateContentReadStream");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.ByteArrayContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MByteArrayContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MByteArrayContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.ByteArrayContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MByteArrayContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.ByteArrayContent, global::System.Net.Http.Moles.MByteArrayContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.ByteArrayContent, byte[]> ConstructorByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), (object)null, ".ctor", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.ByteArrayContent, byte[], int, int> ConstructorByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.ByteArrayContent), (object)null, 
                     ".ctor", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream>(value)), 
                                                                                          typeof(mnh::System.Net.Http.ByteArrayContent), base.Instance, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream, 
                                                                                                                                                    global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                                                                                          typeof(mnh::System.Net.Http.ByteArrayContent), base.Instance, 
                                                                                          "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.ByteArrayContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mnh::System.Net.Http.ByteArrayContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.ByteArrayContent, long, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.ByteArrayContent), base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = CacheControlHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MCacheControlHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.CacheControlHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MCacheControlHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MCacheControlHeaderValue(mnh::System.Net.Http.Headers.CacheControlHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ExtensionsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Extensions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_Extensions");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MaxAgeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_MaxAge");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MaxAgeSetNullableOfTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_MaxAge", typeof(global::System.TimeSpan?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> MaxStaleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxStale", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_MaxStale");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MaxStaleLimitGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxStaleLimit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_MaxStaleLimit");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MaxStaleLimitSetNullableOfTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxStaleLimit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_MaxStaleLimit", typeof(global::System.TimeSpan?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> MaxStaleSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxStale", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_MaxStale", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MinFreshGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MinFresh", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_MinFresh");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> MinFreshSetNullableOfTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MinFresh", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_MinFresh", typeof(global::System.TimeSpan?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> MustRevalidateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MustRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_MustRevalidate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> MustRevalidateSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MustRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_MustRevalidate", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoCacheGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoCache", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_NoCache");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.ICollection<string>> NoCacheHeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoCacheHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_NoCacheHeaders");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoCacheSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoCache", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "set_NoCache", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoStoreGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_NoStore");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoStoreSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "set_NoStore", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoTransformGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoTransform", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_NoTransform");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> NoTransformSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoTransform", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_NoTransform", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> OnlyIfCachedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OnlyIfCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_OnlyIfCached");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> OnlyIfCachedSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OnlyIfCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_OnlyIfCached", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Private"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> PrivateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Private", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_Private");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.ICollection<string>> PrivateHeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_PrivateHeaders");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Private"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> PrivateSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Private", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "set_Private", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> ProxyRevalidateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_ProxyRevalidate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> ProxyRevalidateSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ProxyRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_ProxyRevalidate", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Public"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> PublicGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Public", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_Public");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Public"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool> PublicSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Public", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "set_Public", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> SharedMaxAgeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SharedMaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "get_SharedMaxAge");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?> SharedMaxAgeSetNullableOfTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SharedMaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                         (object)null, "set_SharedMaxAge", typeof(global::System.TimeSpan?));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.AppendValueIfRequired(System.Text.StringBuilder,System.Boolean,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Text.StringBuilder, bool, string> AppendValueIfRequiredStringBuilderBooleanString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AppendValueIfRequired", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), "AppendValueIfRequired", 
                     typeof(global::System.Text.StringBuilder), typeof(bool), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.AppendValueWithSeparatorIfRequired(System.Text.StringBuilder,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Text.StringBuilder, string> AppendValueWithSeparatorIfRequiredStringBuilderString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AppendValueWithSeparatorIfRequired", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     "AppendValueWithSeparatorIfRequired", typeof(global::System.Text.StringBuilder), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.AppendValues(System.Text.StringBuilder,System.Collections.Generic.IEnumerable`1{System.String})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Text.StringBuilder, global::System.Collections.Generic.IEnumerable<string>> AppendValuesStringBuilderIEnumerableOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AppendValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     "AppendValues", typeof(global::System.Text.StringBuilder), typeof(global::System.Collections.Generic.IEnumerable<string>));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MCacheControlHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MCacheControlHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MCacheControlHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.CacheControlHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MCacheControlHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.CheckIsValidToken(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckIsValidTokenString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckIsValidToken", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), "CheckIsValidToken", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor(System.Net.Http.Headers.CacheControlHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue, mnh::System.Net.Http.Headers.CacheControlHeaderValue> ConstructorCacheControlHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ExtensionsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Extensions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_Extensions");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.GetCacheControlLength(System.String,System.Int32,System.Net.Http.Headers.CacheControlHeaderValue,System.Net.Http.Headers.CacheControlHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.CacheControlHeaderValue, mnh::System.Net.Http.Headers.CacheControlHeaderValue, int> GetCacheControlLengthStringInt32CacheControlHeaderValueCacheControlHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetCacheControlLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), "GetCacheControlLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                                                  typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> MaxAgeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_MaxAge");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan?> MaxAgeSetNullableOfTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_MaxAge", typeof(global::System.TimeSpan?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MaxStaleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxStale", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_MaxStale");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> MaxStaleLimitGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxStaleLimit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_MaxStaleLimit");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan?> MaxStaleLimitSetNullableOfTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxStaleLimit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_MaxStaleLimit", typeof(global::System.TimeSpan?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> MaxStaleSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxStale", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_MaxStale", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> MinFreshGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MinFresh", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_MinFresh");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan?> MinFreshSetNullableOfTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MinFresh", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_MinFresh", typeof(global::System.TimeSpan?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MustRevalidateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MustRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_MustRevalidate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> MustRevalidateSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MustRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_MustRevalidate", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> NoCacheGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoCache", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_NoCache");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> NoCacheHeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoCacheHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_NoCacheHeaders");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> NoCacheSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoCache", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_NoCache", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> NoStoreGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_NoStore");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> NoStoreSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_NoStore", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> NoTransformGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NoTransform", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_NoTransform");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> NoTransformSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_NoTransform", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_NoTransform", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> OnlyIfCachedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OnlyIfCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_OnlyIfCached");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> OnlyIfCachedSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OnlyIfCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_OnlyIfCached", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Private"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> PrivateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Private", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_Private");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> PrivateHeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_PrivateHeaders");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Private"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> PrivateSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Private", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_Private", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ProxyRevalidateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_ProxyRevalidate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> ProxyRevalidateSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ProxyRevalidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_ProxyRevalidate", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Public"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> PublicGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Public", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_Public");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.Public"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> PublicSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Public", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_Public", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> SharedMaxAgeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SharedMaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "get_SharedMaxAge");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan?> SharedMaxAgeSetNullableOfTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SharedMaxAge", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "set_SharedMaxAge", typeof(global::System.TimeSpan?));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.CacheControlHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.TrySetCacheControlValues(System.Net.Http.Headers.CacheControlHeaderValue,System.Collections.Generic.List`1{System.Net.Http.Headers.NameValueHeaderValue})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue, global::System.Collections.Generic.List<mnh::System.Net.Http.Headers.NameValueHeaderValue>, bool> TrySetCacheControlValuesCacheControlHeaderValueListOfNameValueHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySetCacheControlValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     "TrySetCacheControlValues", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                                                 typeof(global::System.Collections.Generic.List<mnh::System.Net.Http.Headers.NameValueHeaderValue>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.TrySetOptionalTokenList(System.Net.Http.Headers.NameValueHeaderValue,System.Boolean@,System.Collections.Generic.ICollection`1{System.String}@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefRefFunc<mnh::System.Net.Http.Headers.NameValueHeaderValue, bool, global::System.Collections.Generic.ICollection<string>, bool> TrySetOptionalTokenListNameValueHeaderValueBooleanRefICollectionOfStringRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySetOptionalTokenList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), "TrySetOptionalTokenList", 
                     typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     typeof(bool).MakeByRefType(), typeof(global::System.Collections.Generic.ICollection<string>).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.TrySetTimeSpan(System.Net.Http.Headers.NameValueHeaderValue,System.Nullable`1{System.TimeSpan}@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefFunc<mnh::System.Net.Http.Headers.NameValueHeaderValue, global::System.TimeSpan?, bool> TrySetTimeSpanNameValueHeaderValueNullableOfTimeSpanRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySetTimeSpan", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     "TrySetTimeSpan", typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), typeof(global::System.TimeSpan?).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.TrySetTokenOnlyValue(System.Net.Http.Headers.NameValueHeaderValue,System.Boolean@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefFunc<mnh::System.Net.Http.Headers.NameValueHeaderValue, bool, bool> TrySetTokenOnlyValueNameValueHeaderValueBooleanRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySetTokenOnlyValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue), 
                     "TrySetTokenOnlyValue", typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), typeof(bool).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ContentRangeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MContentRangeHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.ContentRangeHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MContentRangeHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MContentRangeHeaderValue(mnh::System.Net.Http.Headers.ContentRangeHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.From"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?> FromGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_From");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, bool> HasLengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_HasLength");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, bool> HasRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_HasRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?> LengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_Length");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.To"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?> ToGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_To", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_To");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string> UnitGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "get_Unit");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string> UnitSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, "set_Unit", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MContentRangeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MContentRangeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MContentRangeHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MContentRangeHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Net.Http.Headers.ContentRangeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, mnh::System.Net.Http.Headers.ContentRangeHeaderValue> ConstructorContentRangeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long> ConstructorInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, ".ctor", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long, long> ConstructorInt64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, 
                     ".ctor", typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long, long, long> ConstructorInt64Int64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), (object)null, 
                     ".ctor", typeof(long), typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.From"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> FromGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_From");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetContentRangeLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetContentRangeLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetContentRangeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), "GetContentRangeLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HasLengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_HasLength");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HasRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_HasRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> LengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_Length");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.To"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> ToGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_To", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_To");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryCreateContentRange(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, string, int, int, int, int, int, int, object, bool> TryCreateContentRangeStringStringInt32Int32Int32Int32Int32Int32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryCreateContentRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), "TryCreateContentRange", 
                     typeof(string), typeof(string), typeof(int), 
                     typeof(int), typeof(int), typeof(int), typeof(int), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryGetLengthLength(System.String,System.Int32@,System.Int32@)"/>
        /// </summary>
        public static global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates.Ref1Out2Func4<string, int, int, bool> TryGetLengthLengthStringInt32RefInt32Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryGetLengthLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), "TryGetLengthLength", 
                     typeof(string), typeof(int).MakeByRefType(), typeof(int).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryGetRangeLength(System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@)"/>
        /// </summary>
        public static global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates.Ref1Out2Out3Out4Func6<string, int, int, int, int, bool> TryGetRangeLengthStringInt32RefInt32OutInt32OutInt32Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryGetRangeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), "TryGetRangeLength", typeof(string), 
                     typeof(int).MakeByRefType(), typeof(int).MakeByRefType(), typeof(int).MakeByRefType(), typeof(int).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UnitGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "get_Unit");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UnitSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ContentRangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue), base.Instance, "set_Unit", typeof(string));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.DelegatingChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.DelegatingChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = DelegatingChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MDelegatingChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.DelegatingChannel>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MDelegatingChannel(mnh::System.Net.Http.DelegatingChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.DelegatingChannel, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.DelegatingChannel), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.DelegatingChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.DelegatingChannel), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.DelegatingChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.DelegatingChannel), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MDelegatingChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MDelegatingChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.DelegatingChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MDelegatingChannel Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.DelegatingChannel, global::System.Net.Http.Moles.MDelegatingChannel, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.#ctor(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.DelegatingChannel, mnh::System.Net.Http.HttpMessageChannel> ConstructorHttpMessageChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.DelegatingChannel), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpMessageChannel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.DelegatingChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.DelegatingChannel), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.DelegatingChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.DelegatingChannel), base.Instance, 
                     "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.DelegatingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.DelegatingChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.DelegatingChannel), base.Instance, 
                     "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = EntityTagHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MEntityTagHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.EntityTagHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MEntityTagHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MEntityTagHeaderValue(mnh::System.Net.Http.Headers.EntityTagHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, bool> IsWeakGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsWeak", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "get_IsWeak");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string> TagGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Tag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "get_Tag");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.EntityTagHeaderValue.Any"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue> AnyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Any", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), "get_Any");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MEntityTagHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MEntityTagHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MEntityTagHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.EntityTagHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MEntityTagHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.EntityTagHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.EntityTagHeaderValue, mnh::System.Net.Http.Headers.EntityTagHeaderValue> ConstructorEntityTagHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string, bool> ConstructorStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.GetEntityTagLength(System.String,System.Int32,System.Net.Http.Headers.EntityTagHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.EntityTagHeaderValue, int> GetEntityTagLengthStringInt32EntityTagHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEntityTagLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), "GetEntityTagLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsWeakGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsWeak", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "get_IsWeak");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TagGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Tag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "get_Tag");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.EntityTagHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.FormUrlEncodedContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.FormUrlEncodedContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = FormUrlEncodedContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MFormUrlEncodedContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.FormUrlEncodedContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MFormUrlEncodedContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MFormUrlEncodedContent(mnh::System.Net.Http.FormUrlEncodedContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.CreateContentReadStream"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream> CreateContentReadStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), (object)null, "CreateContentReadStream");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.Encode(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.FormUrlEncodedContent, string, string> EncodeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Encode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), (object)null, "Encode", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.FormUrlEncodedContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MFormUrlEncodedContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MFormUrlEncodedContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.FormUrlEncodedContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MFormUrlEncodedContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.FormUrlEncodedContent, global::System.Net.Http.Moles.MFormUrlEncodedContent, global::System.IDisposable>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.KeyValuePair`2{System.String,System.String}})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.FormUrlEncodedContent, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>> ConstructorIEnumerableOfKeyValuePairOfStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.FormUrlEncodedContent), (object)null, 
                                                                                                         ".ctor", typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream>(value)), 
                                                                                          typeof(mnh::System.Net.Http.FormUrlEncodedContent), base.Instance, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.Encode(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> EncodeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Encode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.FormUrlEncodedContent, string, string>(value)), 
                                                                                          typeof(mnh::System.Net.Http.FormUrlEncodedContent), base.Instance, "Encode", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream, 
                                                                                                                                                    global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                                                                                          typeof(mnh::System.Net.Http.FormUrlEncodedContent), base.Instance, 
                                                                                          "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.FormUrlEncodedContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mnh::System.Net.Http.FormUrlEncodedContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.FormUrlEncodedContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.FormUrlEncodedContent, long, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.FormUrlEncodedContent), base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpClient"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpClient))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpClient")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpClient
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpClient>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpClient()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpClient(mnh::System.Net.Http.HttpClient instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.ActualChannel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel> ActualChannelGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActualChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel>
                                                                                                 (value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_ActualChannel");
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.ActualChannel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel> ActualChannelGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActualChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_ActualChannel");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.BaseAddress"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri> BaseAddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_BaseAddress");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.BaseAddress"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, global::System.Uri> BaseAddressSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "set_BaseAddress", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CancelPendingRequests"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> CancelPendingRequests
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CancelPendingRequests", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "CancelPendingRequests");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Channel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel> ChannelGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Channel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_Channel");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Channel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel> ChannelSetHttpMessageChannel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Channel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "set_Channel", typeof(mnh::System.Net.Http.HttpMessageChannel));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckDisposed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> CheckDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "CheckDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckDisposedOrStarted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> CheckDisposedOrStarted
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposedOrStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "CheckDisposedOrStarted");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.DefaultRequestHeaders"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.Headers.HttpRequestHeaders> DefaultRequestHeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultRequestHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_DefaultRequestHeaders");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DeleteAsync(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> DeleteAsyncString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeleteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "DeleteAsync", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> DeleteAsyncUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeleteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "DeleteAsync", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Delete(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpResponseMessage> DeleteString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Delete", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Delete(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> DeleteUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Delete", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Dispose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> Dispose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Dispose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DisposeRequestContent(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage> DisposeRequestContentHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DisposeRequestContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "DisposeRequestContent", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> GetAsyncString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "GetAsync", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.GetAsync(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> GetAsyncUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "GetAsync", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Get(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpResponseMessage> GetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Get", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Get", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Get(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> GetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Get", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "Get", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.InitializeValues(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, global::System.Uri> InitializeValuesUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "InitializeValues", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.LogSendError(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.String,System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, string, global::System.Exception> LogSendErrorHttpRequestMessageCancellationTokenSourceStringException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LogSendError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "LogSendError", 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                         typeof(string), typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, int> MaxResponseContentBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxResponseContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_MaxResponseContentBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, int> MaxResponseContentBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxResponseContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "set_MaxResponseContentBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PostAsyncStringHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PostAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "PostAsync", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PostAsyncUriHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PostAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "PostAsync", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Post(System.String,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PostStringHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Post", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Post", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Post(System.Uri,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PostUriHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Post", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Post", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PrepareRequestMessage(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage> PrepareRequestMessageHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "PrepareRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PutAsyncStringHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PutAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "PutAsync", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PutAsyncUriHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PutAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "PutAsync", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Put(System.String,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PutStringHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Put", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Put", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Put(System.Uri,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PutUriHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Put", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Put", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageHttpCompletionOption
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.HttpCompletionOption));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageHttpCompletionOptionCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         typeof(mnh::System.Net.Http.HttpCompletionOption), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "Send", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageHttpCompletionOption
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.HttpCompletionOption));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageHttpCompletionOptionCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         typeof(mnh::System.Net.Http.HttpCompletionOption), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetOperationStarted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> SetOperationStarted
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOperationStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "SetOperationStarted");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskCanceled(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>> SetTaskCanceledHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskCanceled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, 
                         "SetTaskCanceled", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                                                                                             typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskCompleted(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, mnh::System.Net.Http.HttpResponseMessage> SetTaskCompletedHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskCompleted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "SetTaskCompleted", 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                         typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                         typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskFaulted(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.Exception> SetTaskFaultedHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskFaulted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "SetTaskFaulted", 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                         typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTimeout(System.Threading.CancellationTokenSource)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, global::System.Threading.CancellationTokenSource> SetTimeoutCancellationTokenSource
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                         (object)null, "SetTimeout", typeof(global::System.Threading.CancellationTokenSource));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.StartContentBuffering(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, mnh::System.Net.Http.HttpResponseMessage> StartContentBufferingHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("StartContentBuffering", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "StartContentBuffering", 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                         typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                         typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Timeout"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClient, global::System.TimeSpan> TimeoutGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Timeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "get_Timeout");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Timeout"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, global::System.TimeSpan> TimeoutSetTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Timeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, "set_Timeout", typeof(global::System.TimeSpan));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.BaseAddress"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> BaseAddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_BaseAddress");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.BaseAddress"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> BaseAddressSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, "set_BaseAddress", typeof(global::System.Uri));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpClient.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpClient.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpClient), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpClient Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpClient, global::System.Net.Http.Moles.MHttpClient, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CancelPendingRequests"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CancelPendingRequests
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CancelPendingRequests", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "CancelPendingRequests");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Channel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel> ChannelGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Channel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_Channel");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Channel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMessageChannel> ChannelSetHttpMessageChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Channel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpMessageChannel>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "set_Channel", typeof(mnh::System.Net.Http.HttpMessageChannel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckBaseAddress(System.Uri,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri, string> CheckBaseAddressUriString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckBaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), "CheckBaseAddress", typeof(global::System.Uri), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckDisposed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "CheckDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckDisposedOrStarted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposedOrStarted
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposedOrStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "CheckDisposedOrStarted");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.CheckRequestMessage(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> CheckRequestMessageHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), 
                     "CheckRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.#ctor(System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClient, global::System.Uri> ConstructorUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClient), (object)null, ".ctor", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.DefaultRequestHeaders"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders> DefaultRequestHeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultRequestHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.Headers.HttpRequestHeaders>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_DefaultRequestHeaders");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DeleteAsync(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> DeleteAsyncString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeleteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>
                                                   (value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "DeleteAsync", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> DeleteAsyncUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeleteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, 
                                                                                                      global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "DeleteAsync", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Delete(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpResponseMessage> DeleteString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Delete", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Delete(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> DeleteUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Delete", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Dispose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Dispose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Dispose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.DisposeRequestContent(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> DisposeRequestContentHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DisposeRequestContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage>
                                                                                                 (value)), typeof(mnh::System.Net.Http.HttpClient), 
                                                                                          base.Instance, "DisposeRequestContent", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> GetAsyncString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>
                                                   (value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "GetAsync", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.GetAsync(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> GetAsyncUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, 
                                                                                                      global::System.Uri, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "GetAsync", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Get(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpResponseMessage> GetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Get", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Get", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Get(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> GetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Get", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Get", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.InitializeValues(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> InitializeValuesUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpClient), base.Instance, "InitializeValues", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.LogSendError(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.String,System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, string, global::System.Exception> LogSendErrorHttpRequestMessageCancellationTokenSourceStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LogSendError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                                                                    global::System.Threading.CancellationTokenSource, string, global::System.Exception>(value)), typeof(mnh::System.Net.Http.HttpClient), 
                                                                                          base.Instance, "LogSendError", 
                                                                                          typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                                                                                          typeof(string), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxResponseContentBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxResponseContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_MaxResponseContentBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxResponseContentBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxResponseContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "set_MaxResponseContentBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PostAsyncStringHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PostAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, string, 
                                                                                                      mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "PostAsync", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PostAsyncUriHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PostAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, 
                                                                                                      mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                     "PostAsync", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Post(System.String,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PostStringHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Post", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Post", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Post(System.Uri,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PostUriHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Post", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, 
                                                                                                      mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Post", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PrepareRequestMessage(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> PrepareRequestMessageHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage>
                                                                                                 (value)), typeof(mnh::System.Net.Http.HttpClient), 
                                                                                          base.Instance, "PrepareRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PutAsyncStringHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PutAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, string, 
                                                                                                      mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "PutAsync", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> PutAsyncUriHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PutAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, 
                                                                                                      mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                     "PutAsync", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Put(System.String,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PutStringHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Put", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, string, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Put", typeof(string), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Put(System.Uri,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage> PutUriHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Put", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.Uri, 
                                                                                                      mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Put", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, 
                                                                                                      mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                                                                 global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                                                                                       "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageHttpCompletionOption
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                                                                 mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                                                                                       "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.HttpCompletionOption));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageHttpCompletionOptionCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, 
                                                                                                                                    global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), 
                                                                                                                                                                                                                                                                          typeof(mnh::System.Net.Http.HttpCompletionOption), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Send", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                                                                 global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                                                                                       "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageHttpCompletionOption
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                                                                 mnh::System.Net.Http.HttpCompletionOption, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                                                                                       "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.HttpCompletionOption));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageHttpCompletionOptionCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpCompletionOption, 
                                                                                                                                    global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), 
                                                                                                                                                                                                                                     typeof(mnh::System.Net.Http.HttpCompletionOption), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetOperationStarted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetOperationStarted
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOperationStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SetOperationStarted");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskCanceled(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>> SetTaskCanceledHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskCanceled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, 
                                                                                                                                                                             global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, 
                     "SetTaskCanceled", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                                                                                         typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskCompleted(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, mnh::System.Net.Http.HttpResponseMessage> SetTaskCompletedHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskCompleted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, 
                                                                                                                                                                             global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, 
                                                                                                                                                                             mnh::System.Net.Http.HttpResponseMessage>(value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SetTaskCompleted", 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                     typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTaskFaulted(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.Exception> SetTaskFaultedHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTaskFaulted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, 
                                                                                                                                                                             global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.Exception>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SetTaskFaulted", 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                     typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.SetTimeout(System.Threading.CancellationTokenSource)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.CancellationTokenSource> SetTimeoutCancellationTokenSource
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClient, global::System.Threading.CancellationTokenSource>(value)), 
                     typeof(mnh::System.Net.Http.HttpClient), base.Instance, "SetTimeout", typeof(global::System.Threading.CancellationTokenSource));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClient.StartContentBuffering(System.Net.Http.HttpRequestMessage,System.Threading.CancellationTokenSource,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, mnh::System.Net.Http.HttpResponseMessage> StartContentBufferingHttpRequestMessageCancellationTokenSourceTaskCompletionSourceOfHttpResponseMessageHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("StartContentBuffering", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mnh::System.Net.Http.HttpClient, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationTokenSource, 
                                                                                                                                                                             global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, 
                                                                                                                                                                             mnh::System.Net.Http.HttpResponseMessage>(value)), typeof(mnh::System.Net.Http.HttpClient), base.Instance, "StartContentBuffering", 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationTokenSource), 
                     typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Timeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> TimeoutGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Timeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.TimeSpan>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, "get_Timeout");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClient.Timeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> TimeoutSetTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Timeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClient, global::System.TimeSpan>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClient), base.Instance, "set_Timeout", typeof(global::System.TimeSpan));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpClientChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpClientChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpClientChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpClientChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpClientChannel>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpClientChannel()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpClientChannel(mnh::System.Net.Http.HttpClientChannel instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.AddHeaderValues(System.Net.WebHeaderCollection,System.Int32,System.String,System.Net.Http.Headers.HttpHeaders)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.WebHeaderCollection, int, string, mnh::System.Net.Http.Headers.HttpHeaders> AddHeaderValuesWebHeaderCollectionInt32StringHttpHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHeaderValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), "AddHeaderValues", 
                     typeof(global::System.Net.WebHeaderCollection), typeof(int), typeof(string), typeof(mnh::System.Net.Http.Headers.HttpHeaders));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AllowAutoRedirect"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> AllowAutoRedirectGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AllowAutoRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_AllowAutoRedirect");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AllowAutoRedirect"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> AllowAutoRedirectSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AllowAutoRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "set_AllowAutoRedirect", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AutomaticDecompression"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Net.DecompressionMethods> AutomaticDecompressionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_AutomaticDecompression");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AutomaticDecompression"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.DecompressionMethods> AutomaticDecompressionSetDecompressionMethods
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_AutomaticDecompression", typeof(global::System.Net.DecompressionMethods));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CheckDisposed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel> CheckDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "CheckDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CheckDisposedOrStarted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel> CheckDisposedOrStarted
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposedOrStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "CheckDisposedOrStarted");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.ClientCertificates"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Security.Cryptography.X509Certificates.X509CertificateCollection> ClientCertificatesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ClientCertificates", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_ClientCertificates");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.CookieContainer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Net.CookieContainer> CookieContainerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CookieContainer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_CookieContainer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.CookieContainer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.CookieContainer> CookieContainerSetCookieContainer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CookieContainer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_CookieContainer", typeof(global::System.Net.CookieContainer));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CreateAndPrepareWebRequest(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> CreateAndPrepareWebRequestHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateAndPrepareWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "CreateAndPrepareWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CreateResponseMessage(System.Net.HttpWebResponse,System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebResponse, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> CreateResponseMessageHttpWebResponseHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "CreateResponseMessage", typeof(global::System.Net.HttpWebResponse), typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Credentials"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Net.ICredentials> CredentialsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Credentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_Credentials");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Credentials"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.ICredentials> CredentialsSetICredentials
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Credentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_Credentials", typeof(global::System.Net.ICredentials));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.GetRequestStreamCallback(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.IAsyncResult> GetRequestStreamCallbackIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRequestStreamCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "GetRequestStreamCallback", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.GetResponseCallback(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.IAsyncResult> GetResponseCallbackIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetResponseCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "GetResponseCallback", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.HandleException(System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Threading.CancellationToken,System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.Threading.CancellationToken, global::System.Exception> HandleExceptionTaskCompletionSourceOfHttpResponseMessageCancellationTokenException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "HandleException", typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                         typeof(global::System.Threading.CancellationToken), typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.InitializeWebRequest(System.Net.Http.HttpRequestMessage,System.Net.HttpWebRequest)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> InitializeWebRequestHttpRequestMessageHttpWebRequest
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "InitializeWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Net.HttpWebRequest));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxAutomaticRedirections"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, int> MaxAutomaticRedirectionsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxAutomaticRedirections", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_MaxAutomaticRedirections");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxAutomaticRedirections"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, int> MaxAutomaticRedirectionsSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxAutomaticRedirections", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_MaxAutomaticRedirections", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxRequestContentBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, int> MaxRequestContentBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxRequestContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_MaxRequestContentBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxRequestContentBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, int> MaxRequestContentBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxRequestContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_MaxRequestContentBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.PreAuthenticate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> PreAuthenticateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PreAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_PreAuthenticate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.PreAuthenticate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> PreAuthenticateSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PreAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "set_PreAuthenticate", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.PrepareWebRequestForContentUpload(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> PrepareWebRequestForContentUploadHttpWebRequestHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareWebRequestForContentUpload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "PrepareWebRequestForContentUpload", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Proxy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, global::System.Net.IWebProxy> ProxyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Proxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_Proxy");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Proxy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.IWebProxy> ProxySetIWebProxy
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Proxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "set_Proxy", typeof(global::System.Net.IWebProxy));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetDefaultOptions(System.Net.HttpWebRequest)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest> SetDefaultOptionsHttpWebRequest
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDefaultOptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                         (object)null, "SetDefaultOptions", typeof(global::System.Net.HttpWebRequest));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetOperationStarted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel> SetOperationStarted
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOperationStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "SetOperationStarted");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetServicePointOptions(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> SetServicePointOptionsHttpWebRequestHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetServicePointOptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, 
                         "SetServicePointOptions", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsAutomaticDecompression"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> SupportsAutomaticDecompressionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsAutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_SupportsAutomaticDecompression");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsClientCertificates"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> SupportsClientCertificatesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsClientCertificates", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_SupportsClientCertificates");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsProxy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> SupportsProxyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_SupportsProxy");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsRedirectConfiguration"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> SupportsRedirectConfigurationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsRedirectConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_SupportsRedirectConfiguration");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseCookies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> UseCookiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseCookies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_UseCookies");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseCookies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> UseCookiesSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseCookies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "set_UseCookies", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseDefaultCredentials"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> UseDefaultCredentialsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseDefaultCredentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_UseDefaultCredentials");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseDefaultCredentials"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> UseDefaultCredentialsSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseDefaultCredentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "set_UseDefaultCredentials", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseProxy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpClientChannel, bool> UseProxyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "get_UseProxy");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseProxy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel, bool> UseProxySetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, "set_UseProxy", typeof(bool));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AllowAutoRedirect"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> AllowAutoRedirectGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AllowAutoRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_AllowAutoRedirect");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AllowAutoRedirect"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> AllowAutoRedirectSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AllowAutoRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_AllowAutoRedirect", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.AreEqual(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> AreEqualStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AreEqual", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), "AreEqual", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AutomaticDecompression"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.DecompressionMethods> AutomaticDecompressionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.DecompressionMethods>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_AutomaticDecompression");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.AutomaticDecompression"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.DecompressionMethods> AutomaticDecompressionSetDecompressionMethods
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.DecompressionMethods>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), 
                     base.Instance, "set_AutomaticDecompression", typeof(global::System.Net.DecompressionMethods));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpClientChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpClientChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpClientChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpClientChannel Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpClientChannel, global::System.Net.Http.Moles.MHttpClientChannel, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CheckDisposed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "CheckDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CheckDisposedOrStarted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposedOrStarted
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposedOrStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "CheckDisposedOrStarted");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.ClientCertificates"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Cryptography.X509Certificates.X509CertificateCollection> ClientCertificatesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ClientCertificates", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Security.Cryptography.X509Certificates.X509CertificateCollection>
                                                   (value)), typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_ClientCertificates");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpClientChannel> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.CookieContainer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.CookieContainer> CookieContainerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CookieContainer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.CookieContainer>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_CookieContainer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.CookieContainer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.CookieContainer> CookieContainerSetCookieContainer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CookieContainer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.CookieContainer>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClientChannel), 
                                                                                       base.Instance, "set_CookieContainer", typeof(global::System.Net.CookieContainer));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CreateAndPrepareWebRequest(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> CreateAndPrepareWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateAndPrepareWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), 
                     base.Instance, "CreateAndPrepareWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.CreateResponseMessage(System.Net.HttpWebResponse,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.HttpWebResponse, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> CreateResponseMessageHttpWebResponseHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebResponse, 
                                                                                                                                                    mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                                                                                          "CreateResponseMessage", typeof(global::System.Net.HttpWebResponse), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Credentials"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.ICredentials> CredentialsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Credentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.ICredentials>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_Credentials");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Credentials"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.ICredentials> CredentialsSetICredentials
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Credentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.ICredentials>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_Credentials", typeof(global::System.Net.ICredentials));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.GetRequestStreamCallback(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> GetRequestStreamCallbackIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRequestStreamCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.IAsyncResult>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "GetRequestStreamCallback", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.GetResponseCallback(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> GetResponseCallbackIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetResponseCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.IAsyncResult>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "GetResponseCallback", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.GetValueString(System.Collections.IEnumerable)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string> GetValueStringIEnumerable
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValueString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                     "GetValueString", typeof(global::System.Collections.IEnumerable));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.HandleException(System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.Threading.CancellationToken,System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.Threading.CancellationToken, global::System.Exception> HandleExceptionTaskCompletionSourceOfHttpResponseMessageCancellationTokenException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, 
                                                                                                      global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, 
                                                                                                      global::System.Threading.CancellationToken, global::System.Exception>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "HandleException", typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                     typeof(global::System.Threading.CancellationToken), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.InitializeWebRequest(System.Net.Http.HttpRequestMessage,System.Net.HttpWebRequest)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> InitializeWebRequestHttpRequestMessageHttpWebRequest
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "InitializeWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Net.HttpWebRequest));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxAutomaticRedirections"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxAutomaticRedirectionsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxAutomaticRedirections", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_MaxAutomaticRedirections");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxAutomaticRedirections"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxAutomaticRedirectionsSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxAutomaticRedirections", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_MaxAutomaticRedirections", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxRequestContentBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxRequestContentBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxRequestContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_MaxRequestContentBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.MaxRequestContentBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxRequestContentBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxRequestContentBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_MaxRequestContentBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.OnCancel(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> OnCancelObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCancel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), "OnCancel", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.PreAuthenticate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> PreAuthenticateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PreAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_PreAuthenticate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.PreAuthenticate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> PreAuthenticateSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PreAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_PreAuthenticate", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.PrepareWebRequestForContentUpload(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> PrepareWebRequestForContentUploadHttpWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareWebRequestForContentUpload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "PrepareWebRequestForContentUpload", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Proxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.IWebProxy> ProxyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Proxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.IWebProxy>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_Proxy");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.Proxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.IWebProxy> ProxySetIWebProxy
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Proxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.IWebProxy>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_Proxy", typeof(global::System.Net.IWebProxy));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetConnectionOptions(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> SetConnectionOptionsHttpWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetConnectionOptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                     "SetConnectionOptions", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetContentHeaders(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> SetContentHeadersHttpWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetContentHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                     "SetContentHeaders", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetDefaultOptions(System.Net.HttpWebRequest)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest> SetDefaultOptionsHttpWebRequest
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDefaultOptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest>
                                                                                                 (value)), typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "SetDefaultOptions", typeof(global::System.Net.HttpWebRequest));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetOperationStarted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetOperationStarted
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOperationStarted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "SetOperationStarted");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetRequestHeaders(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> SetRequestHeadersHttpWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetRequestHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpClientChannel), 
                     "SetRequestHeaders", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpClientChannel.SetServicePointOptions(System.Net.HttpWebRequest,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage> SetServicePointOptionsHttpWebRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetServicePointOptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpClientChannel, global::System.Net.HttpWebRequest, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, 
                     "SetServicePointOptions", typeof(global::System.Net.HttpWebRequest), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsAutomaticDecompression"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsAutomaticDecompressionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsAutomaticDecompression", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_SupportsAutomaticDecompression");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsClientCertificates"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsClientCertificatesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsClientCertificates", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_SupportsClientCertificates");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsProxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsProxyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_SupportsProxy");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.SupportsRedirectConfiguration"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsRedirectConfigurationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportsRedirectConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_SupportsRedirectConfiguration");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseCookies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> UseCookiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseCookies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_UseCookies");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseCookies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> UseCookiesSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseCookies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_UseCookies", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseDefaultCredentials"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> UseDefaultCredentialsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseDefaultCredentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_UseDefaultCredentials");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseDefaultCredentials"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> UseDefaultCredentialsSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseDefaultCredentials", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_UseDefaultCredentials", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseProxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> UseProxyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UseProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "get_UseProxy");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpClientChannel.UseProxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> UseProxySetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UseProxy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpClientChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpClientChannel), base.Instance, "set_UseProxy", typeof(bool));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpContent>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpContent(mnh::System.Net.Http.HttpContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CheckDisposed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> CheckDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "CheckDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CheckTaskNotNull(System.Threading.Tasks.Task)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task> CheckTaskNotNullTask
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckTaskNotNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), 
                         (object)null, "CheckTaskNotNull", typeof(global::System.Threading.Tasks.Task));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.ContentReadStream"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.IO.Stream> ContentReadStreamGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "get_ContentReadStream");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, global::System.Threading.Tasks.Task> CopyToAsyncStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyToAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "CopyToAsync", typeof(global::System.IO.Stream));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> CopyToAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyToAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, 
                         "CopyToAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, global::System.IO.Stream> CopyToStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "CopyTo", typeof(global::System.IO.Stream));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, global::System.Net.TransportContext> CopyToStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, 
                         "CopyTo", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.IO.Stream> CreateContentReadStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "CreateContentReadStream");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CreateMemoryStream(System.Int32,System.Exception@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.HttpContent, int, global::System.Exception, global::System.IO.MemoryStream> CreateMemoryStreamInt32ExceptionOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMemoryStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, 
                         "CreateMemoryStream", typeof(int), typeof(global::System.Exception).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.Dispose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> Dispose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "Dispose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.GetComputedOrBufferLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, long?> GetComputedOrBufferLength
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetComputedOrBufferLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "GetComputedOrBufferLength");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.Headers"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.Headers.HttpContentHeaders> HeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "get_Headers");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.IsBuffered"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, bool> IsBufferedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsBuffered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "get_IsBuffered");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBuffer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> LoadIntoBuffer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "LoadIntoBuffer");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBufferAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task> LoadIntoBufferAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBufferAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "LoadIntoBufferAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, int, global::System.Threading.Tasks.Task> LoadIntoBufferAsyncInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBufferAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "LoadIntoBufferAsync", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBuffer(System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, int> LoadIntoBufferInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "LoadIntoBuffer", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.ReadAsByteArray"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, byte[]> ReadAsByteArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsByteArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "ReadAsByteArray");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.ReadAsString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, string> ReadAsString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, "ReadAsString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpContent, global::System.Net.Http.Moles.MHttpContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CheckDisposed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "CheckDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CheckTaskNotNull(System.Threading.Tasks.Task)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.Tasks.Task> CheckTaskNotNullTask
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckTaskNotNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task>(value)
                                                                                            ), typeof(mnh::System.Net.Http.HttpContent), base.Instance, "CheckTaskNotNull", typeof(global::System.Threading.Tasks.Task));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.ContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> ContentReadStreamGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpContent), base.Instance, "get_ContentReadStream");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Threading.Tasks.Task> CopyToAsyncStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyToAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "CopyToAsync", typeof(global::System.IO.Stream));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> CopyToAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyToAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, 
                                                                                                                                                 global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpContent), base.Instance, 
                                                                                       "CopyToAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream> CopyToStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpContent), base.Instance, "CopyTo", typeof(global::System.IO.Stream));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> CopyToStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, 
                     "CopyTo", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CreateCompletedTask"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task> CreateCompletedTask
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateCompletedTask", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), "CreateCompletedTask");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.IO.Stream>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpContent), base.Instance, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.CreateMemoryStream(System.Int32,System.Exception@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<int, global::System.Exception, global::System.IO.MemoryStream> CreateMemoryStreamInt32ExceptionOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMemoryStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpContent, int, global::System.Exception, global::System.IO.MemoryStream>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, 
                     "CreateMemoryStream", typeof(int), typeof(global::System.Exception).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.Dispose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Dispose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "Dispose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.GetComputedOrBufferLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> GetComputedOrBufferLength
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetComputedOrBufferLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, long?>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "GetComputedOrBufferLength");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.GetStreamCopyException(System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, global::System.Exception> GetStreamCopyExceptionException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetStreamCopyException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpContent), "GetStreamCopyException", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.Headers"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders> HeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.Headers.HttpContentHeaders>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "get_Headers");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpContent.IsBuffered"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsBufferedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsBuffered", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "get_IsBuffered");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBuffer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action LoadIntoBuffer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "LoadIntoBuffer");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBufferAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task> LoadIntoBufferAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBufferAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task>(value)
                                                                                         ), typeof(mnh::System.Net.Http.HttpContent), base.Instance, "LoadIntoBufferAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, global::System.Threading.Tasks.Task> LoadIntoBufferAsyncInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBufferAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, int, global::System.Threading.Tasks.Task>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpContent), base.Instance, "LoadIntoBufferAsync", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.LoadIntoBuffer(System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> LoadIntoBufferInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("LoadIntoBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "LoadIntoBuffer", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.ReadAsByteArray"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[]> ReadAsByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsByteArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, byte[]>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "ReadAsByteArray");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpContent.ReadAsString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ReadAsString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpContent, string>(value)), 
                     typeof(mnh::System.Net.Http.HttpContent), base.Instance, "ReadAsString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.HttpContentHeaders"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.HttpContentHeaders))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpContentHeaders")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpContentHeaders
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.HttpContentHeaders>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpContentHeaders()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpContentHeaders(mnh::System.Net.Http.Headers.HttpContentHeaders instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpContentHeaders.AddKnownHeaders(System.Collections.Generic.HashSet`1{System.String})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.HashSet<string>> AddKnownHeadersHashSetOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddKnownHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                     "AddKnownHeaders", typeof(global::System.Collections.Generic.HashSet<string>));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Allow"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>> AllowGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Allow", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_Allow");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>> ContentEncodingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentEncoding");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>> ContentLanguageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLanguage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentLanguage");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, long?> ContentLengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentLength");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, long?> ContentLengthSetNullableOfInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_ContentLength", typeof(long?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Uri> ContentLocationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLocation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentLocation");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Uri> ContentLocationSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentLocation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_ContentLocation", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, byte[]> ContentMD5Get
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentMD5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentMD5");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, byte[]> ContentMD5SetByteArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentMD5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_ContentMD5", typeof(byte).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.ContentRangeHeaderValue> ContentRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.ContentRangeHeaderValue> ContentRangeSetContentRangeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_ContentRange", typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ContentTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_ContentType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ContentTypeSetMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_ContentType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Expires"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?> ExpiresGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Expires", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_Expires");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Expires"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?> ExpiresSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Expires", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_Expires", typeof(global::System.DateTimeOffset?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.LastModified"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?> LastModifiedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LastModified", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), (object)null, "get_LastModified");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.LastModified"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?> LastModifiedSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LastModified", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                         (object)null, "set_LastModified", typeof(global::System.DateTimeOffset?));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Allow"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> AllowGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Allow", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_Allow");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MHttpContentHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MHttpContentHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpContentHeaders Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpContentHeaders, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpContentHeaders Bind(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpContentHeaders, global::System.Collections.Generic.IEnumerable
                                                                                                                                                                    <global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpContentHeaders.#ctor(System.Func`1{System.Nullable`1{System.Int64}})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Func<long?>> ConstructorFuncOfNullableOfInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                     (object)null, ".ctor", typeof(global::System.Func<long?>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> ContentEncodingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentEncoding");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> ContentLanguageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLanguage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentLanguage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> ContentLengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentLength");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long?> ContentLengthSetNullableOfInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "set_ContentLength", typeof(long?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> ContentLocationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentLocation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentLocation");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> ContentLocationSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentLocation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "set_ContentLocation", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[]> ContentMD5Get
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentMD5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, byte[]>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentMD5");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[]> ContentMD5SetByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentMD5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, byte[]>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "set_ContentMD5", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ContentRangeHeaderValue> ContentRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.ContentRangeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ContentRangeHeaderValue> ContentRangeSetContentRangeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.ContentRangeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                     base.Instance, "set_ContentRange", typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ContentTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_ContentType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.ContentType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ContentTypeSetMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), 
                     base.Instance, "set_ContentType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Expires"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> ExpiresGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Expires", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_Expires");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.Expires"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> ExpiresSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Expires", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "set_Expires", typeof(global::System.DateTimeOffset?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.LastModified"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> LastModifiedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LastModified", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "get_LastModified");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpContentHeaders.LastModified"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> LastModifiedSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LastModified", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), base.Instance, "set_LastModified", typeof(global::System.DateTimeOffset?));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpException>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpException(mnh::System.Net.Http.HttpException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.HttpException, 
                                                                  global::System.Net.Http.Moles.MHttpException, global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpException.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpException> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpException), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpException.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpException, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpException), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpException.#ctor(System.String,System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpException, string, global::System.Exception> ConstructorStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpException), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpException.HandleSerialization(System.Object,System.Runtime.Serialization.SafeSerializationEventArgs)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, global::System.Runtime.Serialization.SafeSerializationEventArgs> HandleSerializationObjectSafeSerializationEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleSerialization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpException), 
                     "HandleSerialization", typeof(object), typeof(global::System.Runtime.Serialization.SafeSerializationEventArgs));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.HttpHeaders"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.HttpHeaders))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpHeaders")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpHeaders
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.HttpHeaders>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpHeaders(mnh::System.Net.Http.Headers.HttpHeaders instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddHeaders(System.Net.Http.Headers.HttpHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders> AddHeadersHttpHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, mnh::System.Net.Http.Headers.HttpHeaders>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "AddHeaders", typeof(mnh::System.Net.Http.Headers.HttpHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddParsedValue(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object> AddParsedValueStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "AddParsedValue", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable`1{System.String})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, global::System.Collections.Generic.IEnumerable<string>> AddStringIEnumerableOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, 
                     "Add", typeof(string), typeof(global::System.Collections.Generic.IEnumerable<string>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> AddStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "Add", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddWithoutValidation(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> AddWithoutValidationStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddWithoutValidation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "AddWithoutValidation", typeof(string), typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddHeaders(System.Net.Http.Headers.HttpHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, mnh::System.Net.Http.Headers.HttpHeaders> AddHeadersHttpHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), 
                         (object)null, "AddHeaders", typeof(mnh::System.Net.Http.Headers.HttpHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddParsedValue(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, object> AddParsedValueStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "AddParsedValue", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable`1{System.String})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>> AddStringIEnumerableOfString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "Add", typeof(string), typeof(global::System.Collections.Generic.IEnumerable<string>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, string> AddStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "Add", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AddWithoutValidation(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, string> AddWithoutValidationStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddWithoutValidation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "AddWithoutValidation", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AreEqual(System.Object,System.Object,System.Collections.IEqualityComparer)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, object, object, global::System.Collections.IEqualityComparer, bool> AreEqualObjectObjectIEqualityComparer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AreEqual", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "AreEqual", typeof(object), typeof(object), typeof(global::System.Collections.IEqualityComparer));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.CheckHeaderName(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string> CheckHeaderNameString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckHeaderName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "CheckHeaderName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Clear"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders> Clear
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clear", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "Clear");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.ContainsParsedValue(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, object, bool> ContainsParsedValueStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ContainsParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "ContainsParsedValue", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, bool> ContainsString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Contains", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "Contains", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>> GetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "GetEnumerator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetHeaderStrings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>> GetHeaderStrings
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHeaderStrings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "GetHeaderStrings");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetParsedValues(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, object> GetParsedValuesString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetParsedValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "GetParsedValues", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>> GetValuesString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "GetValues", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.RemoveParsedValue(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, object, bool> RemoveParsedValueStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "RemoveParsedValue", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, string, bool> RemoveString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Remove", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, "Remove", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.SetOrRemoveParsedValue(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, object> SetOrRemoveParsedValueStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOrRemoveParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "SetOrRemoveParsedValue", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.SetParsedValue(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, string, object> SetParsedValueStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "SetParsedValue", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), 
                         (object)null, "System.Collections.IEnumerable.GetEnumerator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable`1{System.String}@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>, bool> TryGetValuesStringIEnumerableOfStringOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryGetValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, 
                         "TryGetValues", typeof(string), typeof(global::System.Collections.Generic.IEnumerable<string>).MakeByRefType());
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.AreEqual(System.Object,System.Object,System.Collections.IEqualityComparer)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, global::System.Collections.IEqualityComparer, bool> AreEqualObjectObjectIEqualityComparer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AreEqual", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, object, object, global::System.Collections.IEqualityComparer, bool>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, 
                     "AreEqual", typeof(object), typeof(object), typeof(global::System.Collections.IEqualityComparer));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MHttpHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MHttpHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.HttpHeaders), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpHeaders Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpHeaders, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpHeaders Bind(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpHeaders, global::System.Collections.Generic.IEnumerable
                                                                                                                                                             <global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.CheckHeaderName(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckHeaderNameString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckHeaderName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "CheckHeaderName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.CheckInvalidNewLine(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckInvalidNewLineString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckInvalidNewLine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), "CheckInvalidNewLine", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Clear"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Clear
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clear", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "Clear");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.CloneStringHeaderInfoValues(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object> CloneStringHeaderInfoValuesObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CloneStringHeaderInfoValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), "CloneStringHeaderInfoValues", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.ContainsInvalidNewLine(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> ContainsInvalidNewLineStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ContainsInvalidNewLine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpHeaders), 
                     "ContainsInvalidNewLine", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.ContainsParsedValue(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object, bool> ContainsParsedValueStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ContainsParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "ContainsParsedValue", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> ContainsString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Contains", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "Contains", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>> GetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic
                                                                                                                                                                                                      .KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetHeaderStrings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>> GetHeaderStrings
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHeaderStrings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, 
                                                                                                      global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "GetHeaderStrings");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetParsedValues(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> GetParsedValuesString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetParsedValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "GetParsedValues", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Collections.Generic.IEnumerable<string>> GetValuesString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "GetValues", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.RemoveParsedValue(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object, bool> RemoveParsedValueStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "RemoveParsedValue", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> RemoveString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Remove", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "Remove", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.SetOrRemoveParsedValue(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object> SetOrRemoveParsedValueStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOrRemoveParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "SetOrRemoveParsedValue", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.SetParsedValue(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object> SetParsedValueStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetParsedValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "SetParsedValue", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.IEnumerator>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, "System.Collections.IEnumerable.GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable`1{System.String}@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, global::System.Collections.Generic.IEnumerable<string>, bool> TryGetValuesStringIEnumerableOfStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryGetValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpHeaders, string, global::System.Collections.Generic.IEnumerable<string>, bool>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), base.Instance, 
                     "TryGetValues", typeof(string), typeof(global::System.Collections.Generic.IEnumerable<string>).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpHeaders.UpdateValueCount``1(System.Object,System.Int32@)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdateValueCount", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
        public static void UpdateValueCountObjectInt32Ref<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.RefAction<object, int> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicStatic
                ((global::System.Delegate)mole, typeof(mnh::System.Net.Http.Headers.HttpHeaders), "UpdateValueCount", 
                 gma, typeof(object), typeof(int).MakeByRefType());
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpMessageChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpMessageChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpMessageChannel>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageChannel(mnh::System.Net.Http.HttpMessageChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMessageChannel> Dispose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMessageChannel), (object)null, "Dispose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMessageChannel, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMessageChannel), (object)null, "Dispose", typeof(bool));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpMessageChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpMessageChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpMessageChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpMessageChannel Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpMessageChannel, global::System.Net.Http.Moles.MHttpMessageChannel, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMessageChannel.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMessageChannel> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMessageChannel), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Dispose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMessageChannel>(value)), 
                     typeof(mnh::System.Net.Http.HttpMessageChannel), base.Instance, "Dispose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMessageChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpMessageChannel), base.Instance, "Dispose", typeof(bool));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpMethod"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpMethod))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMethod")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMethod
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpMethod>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMethod()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMethod(mnh::System.Net.Http.HttpMethod instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, mnh::System.Net.Http.HttpMethod, bool> EqualsHttpMethod
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), 
                         (object)null, "Equals", typeof(mnh::System.Net.Http.HttpMethod));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Method"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, string> MethodGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), (object)null, "get_Method");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpMethod.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpMethod.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpMethod), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpMethod Bind(global::System.IEquatable<mnh::System.Net.Http.HttpMethod> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.HttpMethod, 
                                                                  global::System.Net.Http.Moles.MHttpMethod, global::System.IEquatable<mnh::System.Net.Http.HttpMethod>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMethod, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Delete"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> DeleteGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Delete", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Delete");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, mnh::System.Net.Http.HttpMethod, bool> EqualityOpHttpMethodHttpMethod
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("op_Equality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), 
                     "op_Equality", typeof(mnh::System.Net.Http.HttpMethod), typeof(mnh::System.Net.Http.HttpMethod));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, bool> EqualsHttpMethod
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMethod, mnh::System.Net.Http.HttpMethod, bool>(value)
                                                                                                                ), typeof(mnh::System.Net.Http.HttpMethod), base.Instance, "Equals", typeof(mnh::System.Net.Http.HttpMethod));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMethod, object, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpMethod), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Get"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> GetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Get", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Get");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMethod, int>(value)), 
                     typeof(mnh::System.Net.Http.HttpMethod), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Head"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> HeadGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Head", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Head");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod, mnh::System.Net.Http.HttpMethod, bool> InequalityOpHttpMethodHttpMethod
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("op_Inequality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), 
                     "op_Inequality", typeof(mnh::System.Net.Http.HttpMethod), typeof(mnh::System.Net.Http.HttpMethod));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Method"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MethodGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMethod, string>(value)), 
                     typeof(mnh::System.Net.Http.HttpMethod), base.Instance, "get_Method");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Options"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> OptionsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Options", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Options");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Post"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> PostGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Post", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Post");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Put"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> PutGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Put", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Put");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpMethod.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpMethod, string>(value)), 
                     typeof(mnh::System.Net.Http.HttpMethod), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpMethod.Trace"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> TraceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Trace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpMethod), "get_Trace");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpRequestHeaders")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpRequestHeaders
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.HttpRequestHeaders>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpRequestHeaders()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpRequestHeaders(mnh::System.Net.Http.Headers.HttpRequestHeaders instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptCharsetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptCharset", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_AcceptCharset");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptEncodingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_AcceptEncoding");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Accept"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue>> AcceptGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Accept", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Accept");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptLanguageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptLanguage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_AcceptLanguage");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpRequestHeaders.AddKnownHeaders(System.Collections.Generic.HashSet`1{System.String})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.HashSet<string>> AddKnownHeadersHashSetOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddKnownHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     "AddKnownHeaders", typeof(global::System.Collections.Generic.HashSet<string>));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptCharsetGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptCharset", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_AcceptCharset");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptEncodingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_AcceptEncoding");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Accept"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue>> AcceptGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Accept", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Accept");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>> AcceptLanguageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptLanguage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_AcceptLanguage");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue> AuthorizationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Authorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Authorization");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue> AuthorizationSetAuthenticationHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Authorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_Authorization", typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_CacheControl");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlSetCacheControlHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_CacheControl", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> ConnectionCloseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_ConnectionClose");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> ConnectionCloseSetNullableOfBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_ConnectionClose", typeof(bool?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Connection"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<string>> ConnectionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Connection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Connection");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> DateSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_Date", typeof(global::System.DateTimeOffset?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> ExpectContinueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ExpectContinue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_ExpectContinue");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> ExpectContinueSetNullableOfBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ExpectContinue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_ExpectContinue", typeof(bool?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Expect"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue>> ExpectGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Expect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Expect");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.From"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, string> FromGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_From");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.From"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, string> FromSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "set_From", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Host"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, string> HostGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Host", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Host");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Host"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, string> HostSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Host", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "set_Host", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>> IfMatchGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_IfMatch");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> IfModifiedSinceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfModifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_IfModifiedSince");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> IfModifiedSinceSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfModifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_IfModifiedSince", typeof(global::System.DateTimeOffset?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>> IfNoneMatchGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfNoneMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_IfNoneMatch");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeConditionHeaderValue> IfRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_IfRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeConditionHeaderValue> IfRangeSetRangeConditionHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_IfRange", typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> IfUnmodifiedSinceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfUnmodifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_IfUnmodifiedSince");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?> IfUnmodifiedSinceSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfUnmodifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_IfUnmodifiedSince", typeof(global::System.DateTimeOffset?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, int?> MaxForwardsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxForwards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_MaxForwards");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, int?> MaxForwardsSetNullableOfInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxForwards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "set_MaxForwards", typeof(int?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> PragmaGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Pragma", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Pragma");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue> ProxyAuthorizationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyAuthorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_ProxyAuthorization");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue> ProxyAuthorizationSetAuthenticationHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ProxyAuthorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_ProxyAuthorization", typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Range"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeHeaderValue> RangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Range", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Range");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Range"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeHeaderValue> RangeSetRangeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Range", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_Range", typeof(mnh::System.Net.Http.Headers.RangeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Uri> ReferrerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Referrer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Referrer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Uri> ReferrerSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Referrer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_Referrer", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TE"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue>> TEGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TE", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_TE");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<string>> TrailerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Trailer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Trailer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> TransferEncodingChunkedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_TransferEncodingChunked");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?> TransferEncodingChunkedSetNullableOfBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                         (object)null, "set_TransferEncodingChunked", typeof(bool?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>> TransferEncodingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_TransferEncoding");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>> UpgradeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Upgrade", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Upgrade");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>> UserAgentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UserAgent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_UserAgent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Via"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>> ViaGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Via", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Via");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Warning"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>> WarningGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Warning", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, "get_Warning");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue> AuthorizationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Authorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Authorization");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue> AuthorizationSetAuthenticationHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Authorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     base.Instance, "set_Authorization", typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MHttpRequestHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MHttpRequestHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpRequestHeaders Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpRequestHeaders, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpRequestHeaders Bind(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpRequestHeaders, global::System.Collections.Generic.IEnumerable
                                                                                                                                                                    <global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_CacheControl");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlSetCacheControlHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     base.Instance, "set_CacheControl", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool?> ConnectionCloseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_ConnectionClose");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool?> ConnectionCloseSetNullableOfBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_ConnectionClose", typeof(bool?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Connection"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> ConnectionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Connection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Connection");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpRequestHeaders.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> DateSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_Date", typeof(global::System.DateTimeOffset?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool?> ExpectContinueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ExpectContinue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_ExpectContinue");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool?> ExpectContinueSetNullableOfBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ExpectContinue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_ExpectContinue", typeof(bool?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Expect"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue>> ExpectGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Expect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Expect");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.From"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> FromGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_From");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.From"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> FromSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_From", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Host"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HostGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Host", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Host");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Host"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> HostSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Host", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_Host", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>> IfMatchGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_IfMatch");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> IfModifiedSinceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfModifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_IfModifiedSince");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> IfModifiedSinceSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfModifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_IfModifiedSince", typeof(global::System.DateTimeOffset?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>> IfNoneMatchGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfNoneMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.EntityTagHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_IfNoneMatch");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue> IfRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeConditionHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_IfRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue> IfRangeSetRangeConditionHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeConditionHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     base.Instance, "set_IfRange", typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> IfUnmodifiedSinceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IfUnmodifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_IfUnmodifiedSince");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> IfUnmodifiedSinceSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IfUnmodifiedSince", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_IfUnmodifiedSince", typeof(global::System.DateTimeOffset?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int?> MaxForwardsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxForwards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, int?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_MaxForwards");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int?> MaxForwardsSetNullableOfInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxForwards", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, int?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_MaxForwards", typeof(int?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> PragmaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Pragma", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Pragma");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.AuthenticationHeaderValue> ProxyAuthorizationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyAuthorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_ProxyAuthorization");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.AuthenticationHeaderValue> ProxyAuthorizationSetAuthenticationHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ProxyAuthorization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.AuthenticationHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     base.Instance, "set_ProxyAuthorization", typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Range"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue> RangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Range", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Range");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Range"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeHeaderValue> RangeSetRangeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Range", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.RangeHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), 
                     base.Instance, "set_Range", typeof(mnh::System.Net.Http.Headers.RangeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> ReferrerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Referrer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Referrer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> ReferrerSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Referrer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_Referrer", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TE"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue>> TEGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TE", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_TE");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> TrailerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Trailer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Trailer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool?> TransferEncodingChunkedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_TransferEncodingChunked");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool?> TransferEncodingChunkedSetNullableOfBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "set_TransferEncodingChunked", typeof(bool?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>> TransferEncodingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_TransferEncoding");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>> UpgradeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Upgrade", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Upgrade");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>> UserAgentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UserAgent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_UserAgent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Via"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>> ViaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Via", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Via");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpRequestHeaders.Warning"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>> WarningGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Warning", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpRequestHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), base.Instance, "get_Warning");
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpRequestMessage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpRequestMessage))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpRequestMessage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpRequestMessage
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpRequestMessage>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpRequestMessage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpRequestMessage(mnh::System.Net.Http.HttpRequestMessage instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.CheckDisposed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> CheckDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "CheckDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpContent> ContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_Content");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpContent> ContentSetHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         (object)null, "set_Content", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> Dispose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "Dispose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Headers"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.HttpRequestHeaders> HeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_Headers");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.InitializeValues(System.Net.Http.HttpMethod,System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod, global::System.Uri> InitializeValuesHttpMethodUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, 
                         "InitializeValues", typeof(mnh::System.Net.Http.HttpMethod), typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.MarkAsSent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> MarkAsSent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkAsSent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "MarkAsSent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Method"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod> MethodGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_Method");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Method"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod> MethodSetHttpMethod
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         (object)null, "set_Method", typeof(mnh::System.Net.Http.HttpMethod));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Properties"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IDictionary<string, object>> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.RequestUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri> RequestUriGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_RequestUri");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.RequestUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri> RequestUriSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         (object)null, "set_RequestUri", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Version"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Version> VersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, "get_Version");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Version"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Version> VersionSetVersion
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), 
                         (object)null, "set_Version", typeof(global::System.Version));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpRequestMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpRequestMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpRequestMessage), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpRequestMessage Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpRequestMessage, global::System.Net.Http.Moles.MHttpRequestMessage, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.CheckDisposed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "CheckDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod, string> ConstructorHttpMethodString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, 
                     ".ctor", typeof(mnh::System.Net.Http.HttpMethod), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod, global::System.Uri> ConstructorHttpMethodUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpRequestMessage), (object)null, 
                     ".ctor", typeof(mnh::System.Net.Http.HttpMethod), typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent> ContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpContent>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_Content");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> ContentSetHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpContent>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "set_Content", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Dispose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "Dispose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Headers"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpRequestHeaders> HeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.HttpRequestHeaders>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_Headers");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.InitializeValues(System.Net.Http.HttpMethod,System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMethod, global::System.Uri> InitializeValuesHttpMethodUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod, global::System.Uri>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, 
                     "InitializeValues", typeof(mnh::System.Net.Http.HttpMethod), typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.MarkAsSent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MarkAsSent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarkAsSent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "MarkAsSent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Method"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMethod> MethodGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_Method");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Method"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpMethod> MethodSetHttpMethod
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Method", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpMethod>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "set_Method", typeof(mnh::System.Net.Http.HttpMethod));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IDictionary<string, object>> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IDictionary<string, object>>(value)), 
                     typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.RequestUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> RequestUriGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_RequestUri");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.RequestUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> RequestUriSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "set_RequestUri", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpRequestMessage.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Version"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Version> VersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, global::System.Version>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "get_Version");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpRequestMessage.Version"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Version> VersionSetVersion
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpRequestMessage, global::System.Version>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), base.Instance, "set_Version", typeof(global::System.Version));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpResponseHeaders")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpResponseHeaders
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.HttpResponseHeaders>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpResponseHeaders()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpResponseHeaders(mnh::System.Net.Http.Headers.HttpResponseHeaders instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> AcceptRangesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptRanges", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_AcceptRanges");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpResponseHeaders.AddKnownHeaders(System.Collections.Generic.HashSet`1{System.String})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.HashSet<string>> AddKnownHeadersHashSetOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddKnownHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                     "AddKnownHeaders", typeof(global::System.Collections.Generic.HashSet<string>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Age"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> AgeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.TimeSpan?>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Age");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Age"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan?> AgeSetNullableOfTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.TimeSpan?>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "set_Age", typeof(global::System.TimeSpan?));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>> AcceptRangesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AcceptRanges", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_AcceptRanges");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Age"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.TimeSpan?> AgeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Age");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Age"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.TimeSpan?> AgeSetNullableOfTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Age", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_Age", typeof(global::System.TimeSpan?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_CacheControl");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlSetCacheControlHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_CacheControl", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?> ConnectionCloseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_ConnectionClose");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?> ConnectionCloseSetNullableOfBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_ConnectionClose", typeof(bool?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Connection"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>> ConnectionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Connection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Connection");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.DateTimeOffset?> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.DateTimeOffset?> DateSetNullableOfDateTimeOffset
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_Date", typeof(global::System.DateTimeOffset?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ETag"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.EntityTagHeaderValue> ETagGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ETag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_ETag");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ETag"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.EntityTagHeaderValue> ETagSetEntityTagHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ETag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_ETag", typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Location"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Uri> LocationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Location", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Location");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Location"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Uri> LocationSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Location", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_Location", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> PragmaGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Pragma", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Pragma");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>> ProxyAuthenticateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_ProxyAuthenticate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.RetryConditionHeaderValue> RetryAfterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RetryAfter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_RetryAfter");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.RetryConditionHeaderValue> RetryAfterSetRetryConditionHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RetryAfter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_RetryAfter", typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Server"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>> ServerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Server", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Server");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>> TrailerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Trailer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Trailer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?> TransferEncodingChunkedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_TransferEncodingChunked");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?> TransferEncodingChunkedSetNullableOfBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                         (object)null, "set_TransferEncodingChunked", typeof(bool?));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>> TransferEncodingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_TransferEncoding");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>> UpgradeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Upgrade", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Upgrade");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Vary"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>> VaryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Vary", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Vary");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Via"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>> ViaGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Via", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Via");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Warning"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>> WarningGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Warning", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_Warning");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>> WwwAuthenticateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_WwwAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, "get_WwwAuthenticate");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MHttpResponseHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MHttpResponseHeaders.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpResponseHeaders Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpResponseHeaders, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MHttpResponseHeaders Bind(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                  global::System.Net.Http.Headers.Moles.MHttpResponseHeaders, global::System.Collections.Generic.IEnumerable
                                                                                                                                                                     <global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_CacheControl");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.CacheControlHeaderValue> CacheControlSetCacheControlHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CacheControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.CacheControlHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                     base.Instance, "set_CacheControl", typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool?> ConnectionCloseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_ConnectionClose");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool?> ConnectionCloseSetNullableOfBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConnectionClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "set_ConnectionClose", typeof(bool?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Connection"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> ConnectionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Connection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Connection");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.HttpResponseHeaders.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.DateTimeOffset?> DateSetNullableOfDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "set_Date", typeof(global::System.DateTimeOffset?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ETag"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue> ETagGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ETag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.EntityTagHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_ETag");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ETag"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.EntityTagHeaderValue> ETagSetEntityTagHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ETag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.EntityTagHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                     base.Instance, "set_ETag", typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Location"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> LocationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Location", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Location");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Location"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> LocationSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Location", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Uri>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "set_Location", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> PragmaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Pragma", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Pragma");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>> ProxyAuthenticateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProxyAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_ProxyAuthenticate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue> RetryAfterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RetryAfter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.RetryConditionHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_RetryAfter");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RetryConditionHeaderValue> RetryAfterSetRetryConditionHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RetryAfter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.RetryConditionHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), 
                     base.Instance, "set_RetryAfter", typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Server"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>> ServerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Server", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Server");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> TrailerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Trailer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Trailer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool?> TransferEncodingChunkedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_TransferEncodingChunked");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool?> TransferEncodingChunkedSetNullableOfBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferEncodingChunked", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, bool?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "set_TransferEncodingChunked", typeof(bool?));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>> TransferEncodingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_TransferEncoding");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>> UpgradeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Upgrade", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ProductHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Upgrade");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Vary"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<string>> VaryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Vary", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, global::System.Collections.Generic.ICollection<string>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Vary");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Via"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>> ViaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Via", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.ViaHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Via");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Warning"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>> WarningGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Warning", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.WarningHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_Warning");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>> WwwAuthenticateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_WwwAuthenticate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.HttpResponseHeaders, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.AuthenticationHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), base.Instance, "get_WwwAuthenticate");
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.HttpResponseMessage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.HttpResponseMessage))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpResponseMessage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpResponseMessage
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.HttpResponseMessage>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpResponseMessage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpResponseMessage(mnh::System.Net.Http.HttpResponseMessage instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.CheckDisposed"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> CheckDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "CheckDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.ContainsNewLineCharacter(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, string, bool> ContainsNewLineCharacterString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ContainsNewLineCharacter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), 
                         (object)null, "ContainsNewLineCharacter", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpContent> ContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_Content");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpContent> ContentSetHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), 
                         (object)null, "set_Content", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> Dispose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "Dispose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpResponseMessage> EnsureSuccessStatusCode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureSuccessStatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "EnsureSuccessStatusCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Headers"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.HttpResponseHeaders> HeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_Headers");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> IsSuccessStatusCodeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSuccessStatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_IsSuccessStatusCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.ReasonPhrase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, string> ReasonPhraseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReasonPhrase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_ReasonPhrase");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.ReasonPhrase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, string> ReasonPhraseSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReasonPhrase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "set_ReasonPhrase", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.RequestMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpRequestMessage> RequestMessageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_RequestMessage");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.RequestMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpRequestMessage> RequestMessageSetHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), 
                         (object)null, "set_RequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.HttpStatusCode> StatusCodeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_StatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_StatusCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.HttpStatusCode> StatusCodeSetHttpStatusCode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_StatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), 
                         (object)null, "set_StatusCode", typeof(global::System.Net.HttpStatusCode));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Version"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, global::System.Version> VersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, "get_Version");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Version"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, global::System.Version> VersionSetVersion
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), 
                         (object)null, "set_Version", typeof(global::System.Version));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MHttpResponseMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MHttpResponseMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.HttpResponseMessage), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MHttpResponseMessage Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.Http.Moles.MHttpResponseMessage, global::System.IDisposable>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.CheckDisposed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "CheckDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.HttpStatusCode, string> ConstructorHttpStatusCodeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.HttpResponseMessage), (object)null, 
                     ".ctor", typeof(global::System.Net.HttpStatusCode), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.ContainsNewLineCharacter(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> ContainsNewLineCharacterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ContainsNewLineCharacter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, string, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "ContainsNewLineCharacter", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent> ContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpContent>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_Content");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> ContentSetHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpContent>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "set_Content", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Dispose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "Dispose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage> EnsureSuccessStatusCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureSuccessStatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "EnsureSuccessStatusCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Headers"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.HttpResponseHeaders> HeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.HttpResponseHeaders>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_Headers");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsSuccessStatusCodeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSuccessStatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_IsSuccessStatusCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.ReasonPhrase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ReasonPhraseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReasonPhrase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_ReasonPhrase");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.ReasonPhrase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ReasonPhraseSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReasonPhrase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "set_ReasonPhrase", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.RequestMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage> RequestMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_RequestMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.RequestMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> RequestMessageSetHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "set_RequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.HttpStatusCode> StatusCodeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_StatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.HttpStatusCode>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_StatusCode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.HttpStatusCode> StatusCodeSetHttpStatusCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_StatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, global::System.Net.HttpStatusCode>
                                                                                              (value)), typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "set_StatusCode", typeof(global::System.Net.HttpStatusCode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.HttpResponseMessage.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Version"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Version> VersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, global::System.Version>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "get_Version");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.HttpResponseMessage.Version"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Version> VersionSetVersion
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.HttpResponseMessage, global::System.Version>(value)), 
                                                                                       typeof(mnh::System.Net.Http.HttpResponseMessage), base.Instance, "set_Version", typeof(global::System.Version));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaTypeHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeHeaderValue(mnh::System.Net.Http.Headers.MediaTypeHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> CharSetGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "get_CharSet");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> CharSetSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "set_CharSet", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> MediaTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "get_MediaType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> MediaTypeSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                         (object)null, "set_MediaType", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "get_Parameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MMediaTypeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MMediaTypeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MMediaTypeHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MMediaTypeHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CharSetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "get_CharSet");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CharSetSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "set_CharSet", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.CheckMediaTypeFormat(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> CheckMediaTypeFormatStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckMediaTypeFormat", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                     "CheckMediaTypeFormat", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetMediaTypeExpressionLength(System.String,System.Int32,System.String@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, string, int> GetMediaTypeExpressionLengthStringInt32StringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetMediaTypeExpressionLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), "GetMediaTypeExpressionLength", 
                     typeof(string), typeof(int), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetMediaTypeLength(System.String,System.Int32,System.Func`1{System.Net.Http.Headers.MediaTypeHeaderValue},System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, global::System.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> GetMediaTypeLengthStringInt32FuncOfMediaTypeHeaderValueMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetMediaTypeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), "GetMediaTypeLength", 
                     typeof(string), typeof(int), typeof(global::System.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>), 
                                                  typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "get_MediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> MediaTypeSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "set_MediaType", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "get_Parameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeWithQualityHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaTypeWithQualityHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeWithQualityHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeWithQualityHeaderValue(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, double?> QualityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), (object)null, "get_Quality");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, double?> QualitySetNullableOfDouble
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), 
                         (object)null, "set_Quality", typeof(double?));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), 
                         (object)null, "System.ICloneable.Clone");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MMediaTypeWithQualityHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MMediaTypeWithQualityHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MMediaTypeWithQualityHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MMediaTypeWithQualityHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue> ConstructorMediaTypeWithQualityHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, string, double> ConstructorStringDouble
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(double));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<double?> QualityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, double?>(value)
                                                                                         ), typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), base.Instance, "get_Quality");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<double?> QualitySetNullableOfDouble
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, double?>(value)
                                                                                         ), typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), base.Instance, "set_Quality", typeof(double?));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.MessageProcessingChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.MessageProcessingChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MessageProcessingChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMessageProcessingChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.MessageProcessingChannel>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MMessageProcessingChannel(mnh::System.Net.Http.MessageProcessingChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MessageProcessingChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MessageProcessingChannel), (object)null, 
                         "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MessageProcessingChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MessageProcessingChannel), (object)null, 
                         "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MMessageProcessingChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MMessageProcessingChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.MessageProcessingChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMessageProcessingChannel Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.MessageProcessingChannel, global::System.Net.Http.Moles.MMessageProcessingChannel, global::System.IDisposable>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.#ctor(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MessageProcessingChannel, mnh::System.Net.Http.HttpMessageChannel> ConstructorHttpMessageChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MessageProcessingChannel), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpMessageChannel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.HandleCanceledOperations(System.Threading.CancellationToken,System.Threading.Tasks.TaskCompletionSource`1{System.Net.Http.HttpResponseMessage},System.OperationCanceledException)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.CancellationToken, global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>, global::System.OperationCanceledException> HandleCanceledOperationsCancellationTokenTaskCompletionSourceOfHttpResponseMessageOperationCanceledException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleCanceledOperations", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MessageProcessingChannel), "HandleCanceledOperations", 
                     typeof(global::System.Threading.CancellationToken), 
                     typeof(global::System.Threading.Tasks.TaskCompletionSource<mnh::System.Net.Http.HttpResponseMessage>), 
                     typeof(global::System.OperationCanceledException));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SendAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MessageProcessingChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(value)), 
                     typeof(mnh::System.Net.Http.MessageProcessingChannel), base.Instance, 
                     "SendAsync", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MessageProcessingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Send", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MessageProcessingChannel, mnh::System.Net.Http.HttpRequestMessage, 
                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mnh::System.Net.Http.MessageProcessingChannel), base.Instance, 
                     "Send", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Threading.CancellationToken));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.MultipartContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.MultipartContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MultipartContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMultipartContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.MultipartContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MMultipartContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMultipartContent(mnh::System.Net.Http.MultipartContent instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> AddHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, mnh::System.Net.Http.HttpContent>
                                                                                              (value)), typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "Add", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, mnh::System.Net.Http.HttpContent> AddHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "Add", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.CleanupAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent> CleanupAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CleanupAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, "CleanupAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.GetEnumerator"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartContent, global::System.Collections.Generic.IEnumerator<mnh::System.Net.Http.HttpContent>> GetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, "GetEnumerator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.HandleAsyncException(System.String,System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, string, global::System.Exception> HandleAsyncExceptionStringException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleAsyncException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, 
                         "HandleAsyncException", typeof(string), typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartContent, global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "System.Collections.IEnumerable.GetEnumerator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.MultipartContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteNextContentAsync(System.Threading.Tasks.Task)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task> WriteNextContentAsyncTask
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteNextContentAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "WriteNextContentAsync", typeof(global::System.Threading.Tasks.Task));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteNextContentHeadersAsync(System.Threading.Tasks.Task)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task> WriteNextContentHeadersAsyncTask
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteNextContentHeadersAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "WriteNextContentHeadersAsync", typeof(global::System.Threading.Tasks.Task));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteTerminatingBoundaryAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent> WriteTerminatingBoundaryAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteTerminatingBoundaryAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, "WriteTerminatingBoundaryAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.&lt;WriteTerminatingBoundaryAsync&gt;b__8(System.Threading.Tasks.Task)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task> _WriteTerminatingBoundaryAsyncb__8Task
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<WriteTerminatingBoundaryAsync>b__8", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                         (object)null, "<WriteTerminatingBoundaryAsync>b__8", typeof(global::System.Threading.Tasks.Task));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MMultipartContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MMultipartContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.MultipartContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.MultipartContent, global::System.Net.Http.Moles.MMultipartContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartContent Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.MultipartContent, global::System.Net.Http.Moles.MMultipartContent, global::System.Collections.IEnumerable>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartContent Bind(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpContent> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.MultipartContent, 
                                                                  global::System.Net.Http.Moles.MMultipartContent, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpContent>>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.CleanupAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CleanupAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CleanupAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent>(value)), 
                     typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "CleanupAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartContent, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), (object)null, ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.EncodeStringToStreamAsync(System.IO.Stream,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, string, global::System.Threading.Tasks.Task> EncodeStringToStreamAsyncStreamString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EncodeStringToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                     "EncodeStringToStreamAsync", typeof(global::System.IO.Stream), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.EncodeStringToStream(System.IO.Stream,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, string> EncodeStringToStreamStreamString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EncodeStringToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), 
                     "EncodeStringToStream", typeof(global::System.IO.Stream), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.GetDefaultBoundary"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetDefaultBoundary
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDefaultBoundary", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), "GetDefaultBoundary");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.GetEncodedLength(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int> GetEncodedLengthString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEncodedLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), "GetEncodedLength", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.GetEnumerator"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerator<mnh::System.Net.Http.HttpContent>> GetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartContent, global::System.Collections.Generic.IEnumerator<mnh::System.Net.Http.HttpContent>>
                                                   (value)), typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.HandleAsyncException(System.String,System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, global::System.Exception> HandleAsyncExceptionStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleAsyncException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, string, global::System.Exception>
                                                                                                 (value)), typeof(mnh::System.Net.Http.MultipartContent), base.Instance, 
                                                                                          "HandleAsyncException", typeof(string), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, global::System.IO.Stream, 
                                                                                                                                                    global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                                                                                          typeof(mnh::System.Net.Http.MultipartContent), base.Instance, 
                                                                                          "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mnh::System.Net.Http.MultipartContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, global::System.Collections.IEnumerator>
                                                                                                                       (value)), typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "System.Collections.IEnumerable.GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, long, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.ValidateBoundary(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ValidateBoundaryString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateBoundary", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartContent), "ValidateBoundary", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteNextContentAsync(System.Threading.Tasks.Task)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.Tasks.Task> WriteNextContentAsyncTask
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteNextContentAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task>
                                                                                                 (value)), typeof(mnh::System.Net.Http.MultipartContent), 
                                                                                          base.Instance, "WriteNextContentAsync", typeof(global::System.Threading.Tasks.Task));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteNextContentHeadersAsync(System.Threading.Tasks.Task)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.Tasks.Task> WriteNextContentHeadersAsyncTask
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteNextContentHeadersAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task>
                                                                                                 (value)), typeof(mnh::System.Net.Http.MultipartContent), 
                                                                                          base.Instance, "WriteNextContentHeadersAsync", typeof(global::System.Threading.Tasks.Task));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.WriteTerminatingBoundaryAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action WriteTerminatingBoundaryAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteTerminatingBoundaryAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent>(value)), 
                     typeof(mnh::System.Net.Http.MultipartContent), base.Instance, "WriteTerminatingBoundaryAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartContent.&lt;WriteTerminatingBoundaryAsync&gt;b__8(System.Threading.Tasks.Task)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Threading.Tasks.Task> _WriteTerminatingBoundaryAsyncb__8Task
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<WriteTerminatingBoundaryAsync>b__8", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartContent, global::System.Threading.Tasks.Task>
                                                                                                 (value)), typeof(mnh::System.Net.Http.MultipartContent), 
                                                                                          base.Instance, "<WriteTerminatingBoundaryAsync>b__8", typeof(global::System.Threading.Tasks.Task));
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.MultipartFormDataContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.MultipartFormDataContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MultipartFormDataContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMultipartFormDataContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.MultipartFormDataContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MMultipartFormDataContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMultipartFormDataContent(mnh::System.Net.Http.MultipartFormDataContent instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> AddHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, "Add", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, string> AddHttpContentString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string>(value)), 
                     typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, "Add", typeof(mnh::System.Net.Http.HttpContent), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, string, string> AddHttpContentStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string, string>(value)), 
                     typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, 
                     "Add", typeof(mnh::System.Net.Http.HttpContent), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.AddInternal(System.Net.Http.HttpContent,System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent, string, string> AddInternalHttpContentStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string, string>(value)), 
                     typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, 
                     "AddInternal", typeof(mnh::System.Net.Http.HttpContent), typeof(string), typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent> AddHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), 
                         (object)null, "Add", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string> AddHttpContentString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, 
                         "Add", typeof(mnh::System.Net.Http.HttpContent), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string, string> AddHttpContentStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, 
                         "Add", typeof(mnh::System.Net.Http.HttpContent), typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.AddInternal(System.Net.Http.HttpContent,System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent, mnh::System.Net.Http.HttpContent, string, string> AddInternalHttpContentStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, 
                         "AddInternal", typeof(mnh::System.Net.Http.HttpContent), typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.EncodeAndQuote(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartFormDataContent, string, string> EncodeAndQuoteString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EncodeAndQuote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, "EncodeAndQuote", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Encode(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartFormDataContent, string, string> EncodeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Encode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, "Encode", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.RequiresEncoding(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.MultipartFormDataContent, string, bool> RequiresEncodingString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequiresEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, "RequiresEncoding", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MMultipartFormDataContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MMultipartFormDataContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.MultipartFormDataContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartFormDataContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.MultipartFormDataContent, global::System.Net.Http.Moles.MMultipartFormDataContent, global::System.IDisposable>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartFormDataContent Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.MultipartFormDataContent, 
                                                                  global::System.Net.Http.Moles.MMultipartFormDataContent, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MMultipartFormDataContent Bind(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpContent> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.MultipartFormDataContent, global::System.Net.Http.Moles.MMultipartFormDataContent, 
                                                                   global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpContent>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.MultipartFormDataContent, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.MultipartFormDataContent), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.EncodeAndQuote(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> EncodeAndQuoteString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EncodeAndQuote", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartFormDataContent, string, string>(value)), 
                                                                                          typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, "EncodeAndQuote", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.Encode(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> EncodeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Encode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartFormDataContent, string, string>(value)), 
                                                                                          typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, "Encode", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.MultipartFormDataContent.RequiresEncoding(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> RequiresEncodingString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequiresEncoding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.MultipartFormDataContent, string, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.MultipartFormDataContent), base.Instance, "RequiresEncoding", typeof(string));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.NameValueHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = NameValueHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MNameValueHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.NameValueHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MNameValueHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MNameValueHeaderValue(mnh::System.Net.Http.Headers.NameValueHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue, string> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "get_Value");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueHeaderValue, string> ValueSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, "set_Value", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MNameValueHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MNameValueHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MNameValueHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.NameValueHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MNameValueHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.CheckNameValueFormat(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> CheckNameValueFormatStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckNameValueFormat", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     "CheckNameValueFormat", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.CheckValueFormat(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckValueFormatString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckValueFormat", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "CheckValueFormat", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueHeaderValue, mnh::System.Net.Http.Headers.NameValueHeaderValue> ConstructorNameValueHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.CreateNameValue"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue> CreateNameValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateNameValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "CreateNameValue");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.Find(System.Collections.Generic.ICollection`1{System.Net.Http.Headers.NameValueHeaderValue},System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>, string, mnh::System.Net.Http.Headers.NameValueHeaderValue> FindICollectionOfNameValueHeaderValueString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Find", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     "Find", typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode(System.Collections.Generic.ICollection`1{System.Net.Http.Headers.NameValueHeaderValue})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>, int> GetHashCodeICollectionOfNameValueHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     "GetHashCode", typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetNameValueLength(System.String,System.Int32,System.Func`1{System.Net.Http.Headers.NameValueHeaderValue},System.Net.Http.Headers.NameValueHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, global::System.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue>, mnh::System.Net.Http.Headers.NameValueHeaderValue, int> GetNameValueLengthStringInt32FuncOfNameValueHeaderValueNameValueHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetNameValueLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "GetNameValueLength", 
                     typeof(string), typeof(int), typeof(global::System.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue>), 
                                                  typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetNameValueLength(System.String,System.Int32,System.Net.Http.Headers.NameValueHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.NameValueHeaderValue, int> GetNameValueLengthStringInt32NameValueHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetNameValueLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "GetNameValueLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetNameValueListLength(System.String,System.Int32,System.Char,System.Collections.Generic.ICollection`1{System.Net.Http.Headers.NameValueHeaderValue})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int, char, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>, int> GetNameValueListLengthStringInt32CharICollectionOfNameValueHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetNameValueListLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "GetNameValueListLength", 
                     typeof(string), typeof(int), 
                     typeof(char), typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.GetValueLength(System.String,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int, int> GetValueLengthStringInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValueLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), 
                     "GetValueLength", typeof(string), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.ToString(System.Collections.Generic.ICollection`1{System.Net.Http.Headers.NameValueHeaderValue},System.Char,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>, char, bool, string> ToStringICollectionOfNameValueHeaderValueCharBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "ToString", 
                     typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>), typeof(char), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.ToString(System.Collections.Generic.ICollection`1{System.Net.Http.Headers.NameValueHeaderValue},System.Char,System.Boolean,System.Text.StringBuilder)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>, char, bool, global::System.Text.StringBuilder> ToStringICollectionOfNameValueHeaderValueCharBooleanStringBuilder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), "ToString", 
                     typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>), typeof(char), 
                     typeof(bool), typeof(global::System.Text.StringBuilder));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "get_Value");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueHeaderValue.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ValueSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue), base.Instance, "set_Value", typeof(string));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = NameValueWithParametersHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MNameValueWithParametersHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MNameValueWithParametersHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MNameValueWithParametersHeaderValue(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), 
                         (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), (object)null, "get_Parameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), 
                         (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MNameValueWithParametersHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MNameValueWithParametersHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MNameValueWithParametersHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MNameValueWithParametersHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue> ConstructorNameValueWithParametersHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.CreateNameValue"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.NameValueHeaderValue> CreateNameValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateNameValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), "CreateNameValue");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, object, bool>
                                                                                                                    (value)), typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetNameValueWithParametersLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetNameValueWithParametersLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetNameValueWithParametersLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), "GetNameValueWithParametersLength", 
                                                                                        typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, 
                                                                                                                                                 global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), base.Instance, "get_Parameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, object>
                                                                                                 (value)), typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue, string>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.ProductHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.ProductHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ProductHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MProductHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.ProductHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MProductHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MProductHeaderValue(mnh::System.Net.Http.Headers.ProductHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductHeaderValue.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductHeaderValue.Version"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue, string> VersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, "get_Version");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MProductHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MProductHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MProductHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.ProductHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MProductHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductHeaderValue, mnh::System.Net.Http.Headers.ProductHeaderValue> ConstructorProductHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.ProductHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.GetProductLength(System.String,System.Int32,System.Net.Http.Headers.ProductHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.ProductHeaderValue, int> GetProductLengthStringInt32ProductHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetProductLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), "GetProductLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.ProductHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductHeaderValue.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductHeaderValue.Version"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> VersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductHeaderValue), base.Instance, "get_Version");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ProductInfoHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MProductInfoHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.ProductInfoHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MProductInfoHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MProductInfoHeaderValue(mnh::System.Net.Http.Headers.ProductInfoHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string> CommentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Comment", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "get_Comment");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, mnh::System.Net.Http.Headers.ProductHeaderValue> ProductGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Product", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "get_Product");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MProductInfoHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MProductInfoHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MProductInfoHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MProductInfoHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CommentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Comment", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "get_Comment");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductInfoHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, mnh::System.Net.Http.Headers.ProductHeaderValue> ConstructorProductHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.ProductHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductInfoHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, mnh::System.Net.Http.Headers.ProductInfoHeaderValue> ConstructorProductInfoHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetProductInfoLength(System.String,System.Int32,System.Net.Http.Headers.ProductInfoHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.ProductInfoHeaderValue, int> GetProductInfoLengthStringInt32ProductInfoHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetProductInfoLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), "GetProductInfoLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ProductHeaderValue> ProductGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Product", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, mnh::System.Net.Http.Headers.ProductHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "get_Product");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ProductInfoHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RangeConditionHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRangeConditionHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.RangeConditionHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MRangeConditionHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRangeConditionHeaderValue(mnh::System.Net.Http.Headers.RangeConditionHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, global::System.DateTimeOffset?> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, mnh::System.Net.Http.Headers.EntityTagHeaderValue> EntityTagGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EntityTag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "get_EntityTag");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MRangeConditionHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MRangeConditionHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MRangeConditionHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MRangeConditionHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, global::System.DateTimeOffset> ConstructorDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), 
                     (object)null, ".ctor", typeof(global::System.DateTimeOffset));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, mnh::System.Net.Http.Headers.EntityTagHeaderValue> ConstructorEntityTagHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.RangeConditionHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, mnh::System.Net.Http.Headers.RangeConditionHeaderValue> ConstructorRangeConditionHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.EntityTagHeaderValue> EntityTagGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EntityTag", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, mnh::System.Net.Http.Headers.EntityTagHeaderValue>(value)), 
                     typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "get_EntityTag");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetRangeConditionLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetRangeConditionLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRangeConditionLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), "GetRangeConditionLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeConditionHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.RangeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.RangeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RangeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRangeHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.RangeHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MRangeHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRangeHeaderValue(mnh::System.Net.Http.Headers.RangeHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Ranges"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.RangeItemHeaderValue>> RangesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Ranges", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "get_Ranges");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Unit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeHeaderValue, string> UnitGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "get_Unit");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Unit"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeHeaderValue, string> UnitSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, "set_Unit", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MRangeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MRangeHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MRangeHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.Headers.RangeHeaderValue, global::System.Net.Http.Headers.Moles.MRangeHeaderValue, global::System.ICloneable>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable`1{System.Int64},System.Nullable`1{System.Int64})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeHeaderValue, long?, long?> ConstructorNullableOfInt64NullableOfInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), (object)null, 
                     ".ctor", typeof(long?), typeof(long?));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Net.Http.Headers.RangeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeHeaderValue, mnh::System.Net.Http.Headers.RangeHeaderValue> ConstructorRangeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.RangeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.GetRangeLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetRangeLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRangeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), "GetRangeLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Ranges"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.RangeItemHeaderValue>> RangesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Ranges", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, 
                                                                                                      global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.RangeItemHeaderValue>>(value)), 
                     typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "get_Ranges");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Unit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UnitGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "get_Unit");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeHeaderValue.Unit"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UnitSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Unit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeHeaderValue), base.Instance, "set_Unit", typeof(string));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RangeItemHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRangeItemHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.RangeItemHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MRangeItemHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRangeItemHeaderValue(mnh::System.Net.Http.Headers.RangeItemHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeItemHeaderValue.From"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, long?> FromGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "get_From");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeItemHeaderValue.To"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, long?> ToGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_To", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "get_To");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RangeItemHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MRangeItemHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MRangeItemHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MRangeItemHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.RangeItemHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MRangeItemHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable`1{System.Int64},System.Nullable`1{System.Int64})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeItemHeaderValue, long?, long?> ConstructorNullableOfInt64NullableOfInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), (object)null, 
                     ".ctor", typeof(long?), typeof(long?));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Net.Http.Headers.RangeItemHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RangeItemHeaderValue, mnh::System.Net.Http.Headers.RangeItemHeaderValue> ConstructorRangeItemHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeItemHeaderValue.From"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> FromGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_From", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "get_From");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetRangeItemLength(System.String,System.Int32,System.Net.Http.Headers.RangeItemHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, mnh::System.Net.Http.Headers.RangeItemHeaderValue, int> GetRangeItemLengthStringInt32RangeItemHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRangeItemLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), "GetRangeItemLength", 
                     typeof(string), typeof(int), typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetRangeItemListLength(System.String,System.Int32,System.Collections.Generic.ICollection`1{System.Net.Http.Headers.RangeItemHeaderValue})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.RangeItemHeaderValue>, int> GetRangeItemListLengthStringInt32ICollectionOfRangeItemHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRangeItemListLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), "GetRangeItemListLength", 
                     typeof(string), typeof(int), typeof(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.RangeItemHeaderValue>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RangeItemHeaderValue.To"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> ToGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_To", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, long?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "get_To");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RangeItemHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RetryConditionHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRetryConditionHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.RetryConditionHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MRetryConditionHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRetryConditionHeaderValue(mnh::System.Net.Http.Headers.RetryConditionHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.DateTimeOffset?> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.TimeSpan?> DeltaGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Delta", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "get_Delta");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MRetryConditionHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MRetryConditionHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MRetryConditionHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MRetryConditionHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RetryConditionHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.DateTimeOffset> ConstructorDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), 
                     (object)null, ".ctor", typeof(global::System.DateTimeOffset));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.Net.Http.Headers.RetryConditionHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, mnh::System.Net.Http.Headers.RetryConditionHeaderValue> ConstructorRetryConditionHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.TimeSpan> ConstructorTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), 
                     (object)null, ".ctor", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan?> DeltaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Delta", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, global::System.TimeSpan?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "get_Delta");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetRetryConditionLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetRetryConditionLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRetryConditionLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), "GetRetryConditionLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.RetryConditionHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.StreamContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.StreamContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = StreamContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MStreamContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.StreamContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MStreamContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MStreamContent(mnh::System.Net.Http.StreamContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.CreateContentReadStream"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.StreamContent, global::System.IO.Stream> CreateContentReadStream
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, "CreateContentReadStream");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StreamContent, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.PrepareContent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StreamContent> PrepareContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, "PrepareContent");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.StreamContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StreamContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.StreamContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MStreamContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MStreamContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.StreamContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MStreamContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.StreamContent, global::System.Net.Http.Moles.MStreamContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StreamContent, global::System.IO.Stream> ConstructorStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, ".ctor", typeof(global::System.IO.Stream));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StreamContent, global::System.IO.Stream, int> ConstructorStreamInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StreamContent), (object)null, 
                     ".ctor", typeof(global::System.IO.Stream), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateContentReadStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.StreamContent, global::System.IO.Stream>(value)), 
                                                                                          typeof(mnh::System.Net.Http.StreamContent), base.Instance, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.StreamContent, bool>(value)), 
                     typeof(mnh::System.Net.Http.StreamContent), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.PrepareContent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action PrepareContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.StreamContent>(value)), 
                     typeof(mnh::System.Net.Http.StreamContent), base.Instance, "PrepareContent");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.StreamContent, global::System.IO.Stream, 
                                                                                                                                                    global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                                                                                          typeof(mnh::System.Net.Http.StreamContent), base.Instance, 
                                                                                          "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.StreamContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mnh::System.Net.Http.StreamContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.StreamContent, long, bool>(value)), 
                                                                                          typeof(mnh::System.Net.Http.StreamContent), base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.StringContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.StringContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = StringContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MStringContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.StringContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MStringContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MStringContent(mnh::System.Net.Http.StringContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MStringContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MStringContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.StringContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MStringContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.StringContent, global::System.Net.Http.Moles.MStringContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StringContent.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StringContent, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StringContent), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StringContent, string, global::System.Text.Encoding> ConstructorStringEncoding
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StringContent), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Text.Encoding));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.StringContent, string, global::System.Text.Encoding, string> ConstructorStringEncodingString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StringContent), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Text.Encoding), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.StringContent.GetContentByteArray(System.String,System.Text.Encoding)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Text.Encoding, byte[]> GetContentByteArrayStringEncoding
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetContentByteArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.StringContent), 
                     "GetContentByteArray", typeof(string), typeof(global::System.Text.Encoding));
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = StringWithQualityHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MStringWithQualityHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MStringWithQualityHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MStringWithQualityHeaderValue(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), 
                         (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, double?> QualityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, "get_Quality");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), 
                         (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, "get_Value");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MStringWithQualityHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MStringWithQualityHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MStringWithQualityHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MStringWithQualityHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string, double> ConstructorStringDouble
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(double));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.Net.Http.Headers.StringWithQualityHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, mnh::System.Net.Http.Headers.StringWithQualityHeaderValue> ConstructorStringWithQualityHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, object, bool>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetStringWithQualityLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetStringWithQualityLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetStringWithQualityLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), "GetStringWithQualityLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<double?> QualityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, double?>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "get_Quality");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryReadQuality(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue,System.Int32@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefFunc<string, mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, int, bool> TryReadQualityStringStringWithQualityHeaderValueInt32Ref
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReadQuality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), "TryReadQuality", 
                     typeof(string), typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), typeof(int).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.StringWithQualityHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue), base.Instance, "get_Value");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = TransferCodingHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MTransferCodingHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MTransferCodingHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MTransferCodingHeaderValue(mnh::System.Net.Http.Headers.TransferCodingHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "get_Parameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, string> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, "get_Value");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MTransferCodingHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MTransferCodingHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MTransferCodingHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MTransferCodingHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, mnh::System.Net.Http.Headers.TransferCodingHeaderValue> ConstructorTransferCodingHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetTransferCodingLength(System.String,System.Int32,System.Func`1{System.Net.Http.Headers.TransferCodingHeaderValue},System.Net.Http.Headers.TransferCodingHeaderValue@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, global::System.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>, mnh::System.Net.Http.Headers.TransferCodingHeaderValue, int> GetTransferCodingLengthStringInt32FuncOfTransferCodingHeaderValueTransferCodingHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTransferCodingLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), "GetTransferCodingLength", 
                     typeof(string), typeof(int), typeof(global::System.Func<mnh::System.Net.Http.Headers.TransferCodingHeaderValue>), 
                                                  typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>> ParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Parameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, 
                                                                                                                                                 global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.NameValueHeaderValue>>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "get_Parameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue), base.Instance, "get_Value");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = TransferCodingWithQualityHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MTransferCodingWithQualityHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MTransferCodingWithQualityHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MTransferCodingWithQualityHeaderValue(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, double?> QualityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), (object)null, "get_Quality");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, double?> QualitySetNullableOfDouble
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), 
                         (object)null, "set_Quality", typeof(double?));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), 
                         (object)null, "System.ICloneable.Clone");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MTransferCodingWithQualityHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MTransferCodingWithQualityHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MTransferCodingWithQualityHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MTransferCodingWithQualityHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, string, double> ConstructorStringDouble
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(double));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingWithQualityHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue> ConstructorTransferCodingWithQualityHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<double?> QualityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, double?>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), base.Instance, "get_Quality");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<double?> QualitySetNullableOfDouble
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Quality", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, double?>
                                                                                              (value)), typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), base.Instance, "set_Quality", typeof(double?));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue, object>
                                                                                                 (value)), typeof(mnh::System.Net.Http.Headers.TransferCodingWithQualityHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.ViaHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.ViaHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ViaHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MViaHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.ViaHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MViaHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MViaHeaderValue(mnh::System.Net.Http.Headers.ViaHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.Comment"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, string> CommentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Comment", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "get_Comment");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, string> ProtocolNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProtocolName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "get_ProtocolName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, string> ProtocolVersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProtocolVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "get_ProtocolVersion");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, string> ReceivedByGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReceivedBy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "get_ReceivedBy");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.ViaHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MViaHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MViaHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MViaHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.Headers.ViaHeaderValue, global::System.Net.Http.Headers.Moles.MViaHeaderValue, global::System.ICloneable>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.CheckReceivedBy(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckReceivedByString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckReceivedBy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), "CheckReceivedBy", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.Comment"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CommentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Comment", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "get_Comment");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ViaHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ViaHeaderValue, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ViaHeaderValue, string, string, string> ConstructorStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, 
                     ".ctor", typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ViaHeaderValue, string, string, string, string> ConstructorStringStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), (object)null, ".ctor", 
                     typeof(string), typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.Net.Http.Headers.ViaHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.ViaHeaderValue, mnh::System.Net.Http.Headers.ViaHeaderValue> ConstructorViaHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.ViaHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetProtocolEndIndex(System.String,System.Int32,System.String@,System.String@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<string, int, string, string, int> GetProtocolEndIndexStringInt32StringOutStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetProtocolEndIndex", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), "GetProtocolEndIndex", 
                     typeof(string), typeof(int), typeof(string).MakeByRefType(), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetViaLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetViaLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetViaLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), "GetViaLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ProtocolNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProtocolName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "get_ProtocolName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ProtocolVersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProtocolVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "get_ProtocolVersion");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ReceivedByGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReceivedBy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "get_ReceivedBy");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.ViaHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.ViaHeaderValue), base.Instance, "ToString");
            }
        }
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.Headers.WarningHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.Headers.WarningHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = WarningHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MWarningHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.Headers.WarningHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MWarningHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MWarningHeaderValue(mnh::System.Net.Http.Headers.WarningHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Agent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AgentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Agent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "get_Agent");
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Agent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, string> AgentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Agent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "get_Agent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Code"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, int> CodeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Code", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "get_Code");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Date"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, global::System.DateTimeOffset?> DateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "get_Date");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, object, bool> EqualsObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "Equals", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, int> GetHashCode01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "GetHashCode");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, object> SystemICloneableClone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "System.ICloneable.Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Text"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, string> TextGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Text", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "get_Text");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.WarningHeaderValue, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, "ToString");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Headers.Moles.MWarningHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Headers.Moles.MWarningHeaderValue.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Headers.Moles.MWarningHeaderValue Bind(global::System.ICloneable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mnh::System.Net.Http.Headers.WarningHeaderValue, 
                                                                  global::System.Net.Http.Headers.Moles.MWarningHeaderValue, global::System.ICloneable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.CheckAgent(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckAgentString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckAgent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "CheckAgent", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.CheckCode(System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> CheckCodeInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "CheckCode", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Code"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> CodeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Code", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "get_Code");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.WarningHeaderValue> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.WarningHeaderValue, int, string, string> ConstructorInt32StringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, 
                     ".ctor", typeof(int), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.WarningHeaderValue, int, string, string, global::System.DateTimeOffset> ConstructorInt32StringStringDateTimeOffset
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), (object)null, ".ctor", 
                     typeof(int), typeof(string), typeof(string), typeof(global::System.DateTimeOffset));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Net.Http.Headers.WarningHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.WarningHeaderValue, mnh::System.Net.Http.Headers.WarningHeaderValue> ConstructorWarningHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.WarningHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Date"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.DateTimeOffset?> DateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Date", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, global::System.DateTimeOffset?>(value)), 
                     typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "get_Date");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, object, bool>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "Equals", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, int>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "GetHashCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.GetWarningLength(System.String,System.Int32,System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<string, int, object, int> GetWarningLengthStringInt32ObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetWarningLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "GetWarningLength", 
                     typeof(string), typeof(int), typeof(object).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.System.ICloneable.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> SystemICloneableClone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ICloneable.Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, object>(value)), 
                                                                                          typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "System.ICloneable.Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.Headers.WarningHeaderValue.Text"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Text", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "get_Text");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.Headers.WarningHeaderValue, string>(value)), 
                                                                                       typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.TryReadAgent(System.String,System.Int32,System.Int32@,System.String@)"/>
        /// </summary>
        public static global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates.Ref2Out3Func5<string, int, int, string, bool> TryReadAgentStringInt32Int32RefStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReadAgent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "TryReadAgent", 
                     typeof(string), typeof(int), typeof(int).MakeByRefType(), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.TryReadCode(System.String,System.Int32@,System.Int32@)"/>
        /// </summary>
        public static global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates.Ref1Out2Func4<string, int, int, bool> TryReadCodeStringInt32RefInt32Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReadCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "TryReadCode", 
                     typeof(string), typeof(int).MakeByRefType(), typeof(int).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.TryReadDate(System.String,System.Int32@,System.Nullable`1{System.DateTimeOffset}@)"/>
        /// </summary>
        public static global::Microsoft.Moles.Framework.MicrosoftNetHttpDelegates.Ref1Out2Func4<string, int, global::System.DateTimeOffset?, bool> TryReadDateStringInt32RefNullableOfDateTimeOffsetOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReadDate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.Headers.WarningHeaderValue), "TryReadDate", 
                     typeof(string), typeof(int).MakeByRefType(), typeof(global::System.DateTimeOffset?).MakeByRefType());
            }
        }
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Mole type of <see cref="T:System.Net.Http.WebRequestChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mnh::System.Net.Http.WebRequestChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = WebRequestChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MWebRequestChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mnh::System.Net.Http.WebRequestChannel>
    {
        /// <summary>Initializes a new mole</summary>
        public MWebRequestChannel()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MWebRequestChannel(mnh::System.Net.Http.WebRequestChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AllowPipelining"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, bool> AllowPipeliningGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AllowPipelining", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_AllowPipelining");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AllowPipelining"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, bool> AllowPipeliningSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AllowPipelining", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "set_AllowPipelining", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AuthenticationLevel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Security.AuthenticationLevel> AuthenticationLevelGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AuthenticationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_AuthenticationLevel");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AuthenticationLevel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Security.AuthenticationLevel> AuthenticationLevelSetAuthenticationLevel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AuthenticationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "set_AuthenticationLevel", typeof(global::System.Net.Security.AuthenticationLevel));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.CachePolicy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Cache.RequestCachePolicy> CachePolicyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachePolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_CachePolicy");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.CachePolicy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Cache.RequestCachePolicy> CachePolicySetRequestCachePolicy
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachePolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "set_CachePolicy", typeof(global::System.Net.Cache.RequestCachePolicy));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ImpersonationLevel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, global::System.Security.Principal.TokenImpersonationLevel> ImpersonationLevelGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ImpersonationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_ImpersonationLevel");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ImpersonationLevel"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, global::System.Security.Principal.TokenImpersonationLevel> ImpersonationLevelSetTokenImpersonationLevel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ImpersonationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "set_ImpersonationLevel", typeof(global::System.Security.Principal.TokenImpersonationLevel));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.Net.Http.WebRequestChannel.InitializeWebRequest(System.Net.Http.HttpRequestMessage,System.Net.HttpWebRequest)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> InitializeWebRequestHttpRequestMessageHttpWebRequest
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, 
                         "InitializeWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Net.HttpWebRequest));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.MaxResponseHeadersLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, int> MaxResponseHeadersLengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxResponseHeadersLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_MaxResponseHeadersLength");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.MaxResponseHeadersLength"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, int> MaxResponseHeadersLengthSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxResponseHeadersLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "set_MaxResponseHeadersLength", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ReadWriteTimeout"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, int> ReadWriteTimeoutGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReadWriteTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "get_ReadWriteTimeout");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ReadWriteTimeout"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, int> ReadWriteTimeoutSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReadWriteTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, "set_ReadWriteTimeout", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.UnsafeAuthenticatedConnectionSharing"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.WebRequestChannel, bool> UnsafeAuthenticatedConnectionSharingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UnsafeAuthenticatedConnectionSharing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "get_UnsafeAuthenticatedConnectionSharing");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.UnsafeAuthenticatedConnectionSharing"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel, bool> UnsafeAuthenticatedConnectionSharingSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UnsafeAuthenticatedConnectionSharing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), 
                         (object)null, "set_UnsafeAuthenticatedConnectionSharing", typeof(bool));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AllowPipelining"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> AllowPipeliningGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AllowPipelining", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_AllowPipelining");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AllowPipelining"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> AllowPipeliningSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AllowPipelining", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "set_AllowPipelining", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AuthenticationLevel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.Security.AuthenticationLevel> AuthenticationLevelGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AuthenticationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Security.AuthenticationLevel>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_AuthenticationLevel");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.AuthenticationLevel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.Security.AuthenticationLevel> AuthenticationLevelSetAuthenticationLevel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AuthenticationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Security.AuthenticationLevel>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), 
                     base.Instance, "set_AuthenticationLevel", typeof(global::System.Net.Security.AuthenticationLevel));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Net.Http.Moles.MWebRequestChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Net.Http.Moles.MWebRequestChannel.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mnh::System.Net.Http.WebRequestChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Net.Http.Moles.MWebRequestChannel Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Http.Moles.MWebRequestChannel, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.CachePolicy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Net.Cache.RequestCachePolicy> CachePolicyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachePolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Cache.RequestCachePolicy>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_CachePolicy");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.CachePolicy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Net.Cache.RequestCachePolicy> CachePolicySetRequestCachePolicy
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachePolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Net.Cache.RequestCachePolicy>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "set_CachePolicy", typeof(global::System.Net.Cache.RequestCachePolicy));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.WebRequestChannel.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.WebRequestChannel> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mnh::System.Net.Http.WebRequestChannel), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ImpersonationLevel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Principal.TokenImpersonationLevel> ImpersonationLevelGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ImpersonationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Security.Principal.TokenImpersonationLevel>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_ImpersonationLevel");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ImpersonationLevel"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Principal.TokenImpersonationLevel> ImpersonationLevelSetTokenImpersonationLevel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ImpersonationLevel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, global::System.Security.Principal.TokenImpersonationLevel>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), 
                     base.Instance, "set_ImpersonationLevel", typeof(global::System.Security.Principal.TokenImpersonationLevel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.Net.Http.WebRequestChannel.InitializeWebRequest(System.Net.Http.HttpRequestMessage,System.Net.HttpWebRequest)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest> InitializeWebRequestHttpRequestMessageHttpWebRequest
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeWebRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mnh::System.Net.Http.WebRequestChannel, mnh::System.Net.Http.HttpRequestMessage, global::System.Net.HttpWebRequest>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, 
                     "InitializeWebRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Net.HttpWebRequest));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.MaxResponseHeadersLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxResponseHeadersLengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxResponseHeadersLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_MaxResponseHeadersLength");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.MaxResponseHeadersLength"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxResponseHeadersLengthSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxResponseHeadersLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "set_MaxResponseHeadersLength", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ReadWriteTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> ReadWriteTimeoutGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReadWriteTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_ReadWriteTimeout");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.ReadWriteTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> ReadWriteTimeoutSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReadWriteTimeout", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, int>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "set_ReadWriteTimeout", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.UnsafeAuthenticatedConnectionSharing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> UnsafeAuthenticatedConnectionSharingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UnsafeAuthenticatedConnectionSharing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "get_UnsafeAuthenticatedConnectionSharing");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.Net.Http.WebRequestChannel.UnsafeAuthenticatedConnectionSharing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> UnsafeAuthenticatedConnectionSharingSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UnsafeAuthenticatedConnectionSharing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mnh::System.Net.Http.WebRequestChannel, bool>(value)), 
                     typeof(mnh::System.Net.Http.WebRequestChannel), base.Instance, "set_UnsafeAuthenticatedConnectionSharing", typeof(bool));
            }
        }
    }
}
namespace Microsoft.Moles.Framework
{
    /// <summary>Contains custom delegates used for the stubs and moles of Microsoft.Net.Http</summary>
    [global::System.Diagnostics.DebuggerNonUserCode]
    public static partial class MicrosoftNetHttpDelegates
    {
        public delegate R Ref1Out2Func4<T0,TRef1,TOut2,R>(
            T0 input,
            ref TRef1 current,
            out TOut2 lengthLength
        );

        public delegate R Ref1Out2Out3Out4Func6<T0,TRef1,TOut2,TOut3,TOut4,R>(
            T0 input,
            ref TRef1 current,
            out TOut2 fromLength,
            out TOut3 toStartIndex,
            out TOut4 toLength
        );

        public delegate R Ref2Out3Func5<T0,T1,TRef2,TOut3,R>(
            T0 input,
            T1 startIndex,
            ref TRef2 current,
            out TOut3 agent
        );
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.AuthenticationHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = AuthenticationHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SAuthenticationHeaderValue
      : mnh::System.Net.Http.Headers.AuthenticationHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SAuthenticationHeaderValue(string scheme)
        : base(scheme)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SAuthenticationHeaderValue(string scheme, string parameter)
        : base(scheme, parameter)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SAuthenticationHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SAuthenticationHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SAuthenticationHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SAuthenticationHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.ByteArrayContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.ByteArrayContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ByteArrayContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SByteArrayContent
      : mnh::System.Net.Http.ByteArrayContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SByteArrayContent(byte[] content)
        : base(content)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SByteArrayContent(
            byte[] content,
            int offset,
            int count
        )
        : base(content, offset, count)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SByteArrayContent, global::System.IO.Stream>(this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SByteArrayContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SByteArrayContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SByteArrayContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::System.Net.Http.Moles.SByteArrayContent, global::System.Threading.Tasks.Task>(this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::System.Net.Http.Moles.SByteArrayContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::System.Net.Http.Moles.SByteArrayContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.CacheControlHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = CacheControlHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SCacheControlHeaderValue
      : mnh::System.Net.Http.Headers.CacheControlHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SCacheControlHeaderValue()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SCacheControlHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SCacheControlHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SCacheControlHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SCacheControlHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.ContentRangeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ContentRangeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SContentRangeHeaderValue
      : mnh::System.Net.Http.Headers.ContentRangeHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SContentRangeHeaderValue(long length)
        : base(length)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SContentRangeHeaderValue(long from, long to)
        : base(from, to)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SContentRangeHeaderValue(
            long from,
            long to,
            long length
        )
        : base(from, to, length)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SContentRangeHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SContentRangeHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SContentRangeHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SContentRangeHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.DelegatingChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.DelegatingChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = DelegatingChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SDelegatingChannel
      : mnh::System.Net.Http.DelegatingChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SDelegatingChannel(mnh::System.Net.Http.HttpMessageChannel innerChannel)
        : base(innerChannel)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SDelegatingChannel>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SDelegatingChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage Send(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> sh = this.SendHttpRequestMessageCancellationToken;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              if (this.__callBase)
                return base.Send(request, cancellationToken);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SDelegatingChannel, mnh::System.Net.Http.HttpResponseMessage>(this, "Send");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage> SendAsync(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> sh
               = this.SendAsyncHttpRequestMessageCancellationToken;
            if (sh != (
                      mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, 
                                                                                                                  global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              if (this.__callBase)
                return base.SendAsync(request, cancellationToken);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::System.Net.Http.Moles.SDelegatingChannel, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>
                         (this, "SendAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.EntityTagHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = EntityTagHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SEntityTagHeaderValue
      : mnh::System.Net.Http.Headers.EntityTagHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SEntityTagHeaderValue(string tag)
        : base(tag)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SEntityTagHeaderValue(string tag, bool isWeak)
        : base(tag, isWeak)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SEntityTagHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SEntityTagHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SEntityTagHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SEntityTagHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.FormUrlEncodedContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.FormUrlEncodedContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = FormUrlEncodedContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SFormUrlEncodedContent
      : mnh::System.Net.Http.FormUrlEncodedContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SFormUrlEncodedContent(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>> nameValueCollection)
        : base(nameValueCollection)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SFormUrlEncodedContent, global::System.IO.Stream>(this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SFormUrlEncodedContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SFormUrlEncodedContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SFormUrlEncodedContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SFormUrlEncodedContent, global::System.Threading.Tasks.Task>
                         (this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::System.Net.Http.Moles.SFormUrlEncodedContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::System.Net.Http.Moles.SFormUrlEncodedContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.FormUrlEncodedContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpClient"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpClient))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpClient")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpClient
      : mnh::System.Net.Http.HttpClient
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpClient()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpClient(global::System.Uri baseAddress)
        : base(baseAddress)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpClient(string baseAddress)
        : base(baseAddress)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClient.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpClient>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClient.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpClient</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpClientChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpClientChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpClientChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpClientChannel
      : mnh::System.Net.Http.HttpClientChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpClientChannel()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpClientChannel>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpClientChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage Send(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> sh = this.SendHttpRequestMessageCancellationToken;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              if (this.__callBase)
                return base.Send(request, cancellationToken);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpClientChannel, mnh::System.Net.Http.HttpResponseMessage>(this, "Send");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage> SendAsync(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> sh
               = this.SendAsyncHttpRequestMessageCancellationToken;
            if (sh != (
                      mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, 
                                                                                                                  global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              if (this.__callBase)
                return base.SendAsync(request, cancellationToken);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::System.Net.Http.Moles.SHttpClientChannel, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>
                         (this, "SendAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpClientChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken;

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsAutomaticDecompression"/>
        /// </summary>
        public override bool SupportsAutomaticDecompression
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.SupportsAutomaticDecompressionGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.SupportsAutomaticDecompression;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::System.Net.Http.Moles.SHttpClientChannel, bool>(this, "get_SupportsAutomaticDecompression");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsAutomaticDecompression"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsAutomaticDecompressionGet;

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsClientCertificates"/>
        /// </summary>
        public override bool SupportsClientCertificates
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.SupportsClientCertificatesGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.SupportsClientCertificates;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::System.Net.Http.Moles.SHttpClientChannel, bool>(this, "get_SupportsClientCertificates");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsClientCertificates"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsClientCertificatesGet;

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsProxy"/>
        /// </summary>
        public override bool SupportsProxy
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.SupportsProxyGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.SupportsProxy;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::System.Net.Http.Moles.SHttpClientChannel, bool>(this, "get_SupportsProxy");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsProxy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsProxyGet;

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsRedirectConfiguration"/>
        /// </summary>
        public override bool SupportsRedirectConfiguration
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.SupportsRedirectConfigurationGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.SupportsRedirectConfiguration;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::System.Net.Http.Moles.SHttpClientChannel, bool>(this, "get_SupportsRedirectConfiguration");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.Net.Http.HttpClientChannel.SupportsRedirectConfiguration"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SupportsRedirectConfigurationGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpContent
      : mnh::System.Net.Http.HttpContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpContent()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpContent, global::System.IO.Stream>(this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::System.Net.Http.Moles.SHttpContent>(this, "SerializeToStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpContent, global::System.Threading.Tasks.Task>(this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::System.Net.Http.Moles.SHttpContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::System.Net.Http.Moles.SHttpContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpException))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpException
      : mnh::System.Net.Http.HttpException
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpException()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpException(string message)
        : base(message)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpException(string message, global::System.Exception inner)
        : base(message, inner)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpException</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.HttpHeaders"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.HttpHeaders))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpHeaders")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpHeaders
      : mnh::System.Net.Http.Headers.HttpHeaders
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpHeaders()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpHeaders</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpMessageChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpMessageChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMessageChannel
      : mnh::System.Net.Http.HttpMessageChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageChannel()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpMessageChannel>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpMessageChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage Send(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> sh = this.SendHttpRequestMessageCancellationToken;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpMessageChannel, mnh::System.Net.Http.HttpResponseMessage>(this, "Send");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage> SendAsync(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> sh
               = this.SendAsyncHttpRequestMessageCancellationToken;
            if (sh != (
                      mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, 
                                                                                                                  global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpMessageChannel, 
                                      global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>>(this, "SendAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<mnh::System.Net.Http.HttpResponseMessage>> SendAsyncHttpRequestMessageCancellationToken;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMessageChannel.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> SendHttpRequestMessageCancellationToken;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpMethod"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpMethod))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMethod")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMethod
      : mnh::System.Net.Http.HttpMethod
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMethod(string method)
        : base(method)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpMethod, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpMethod, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SHttpMethod</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpMethod, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpMethod.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpRequestMessage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpRequestMessage))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpRequestMessage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpRequestMessage
      : mnh::System.Net.Http.HttpRequestMessage
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage(mnh::System.Net.Http.HttpMethod method, global::System.Uri requestUri)
        : base(method, requestUri)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage(mnh::System.Net.Http.HttpMethod method, string requestUri)
        : base(method, requestUri)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpRequestMessage>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpRequestMessage</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpRequestMessage.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpRequestMessage, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpRequestMessage.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.HttpResponseMessage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.HttpResponseMessage))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpResponseMessage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpResponseMessage
      : mnh::System.Net.Http.HttpResponseMessage
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(global::System.Net.HttpStatusCode statusCode, string reasonPhrase)
        : base(statusCode, reasonPhrase)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SHttpResponseMessage>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SHttpResponseMessage</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpResponseMessage.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SHttpResponseMessage, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpResponseMessage.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MediaTypeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMediaTypeHeaderValue
      : mnh::System.Net.Http.Headers.MediaTypeHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMediaTypeHeaderValue(mnh::System.Net.Http.Headers.MediaTypeHeaderValue source)
        : base(source)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMediaTypeHeaderValue(string mediaType)
        : base(mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SMediaTypeHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SMediaTypeHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SMediaTypeHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SMediaTypeHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.MessageProcessingChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.MessageProcessingChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MessageProcessingChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMessageProcessingChannel
      : mnh::System.Net.Http.MessageProcessingChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMessageProcessingChannel(mnh::System.Net.Http.HttpMessageChannel innerChannel)
        : base(innerChannel)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SMessageProcessingChannel>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.DelegatingChannel.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SMessageProcessingChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MessageProcessingChannel.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpRequestMessage ProcessRequest(mnh::System.Net.Http.HttpRequestMessage request, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                               global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpRequestMessage> sh
               = this.ProcessRequestHttpRequestMessageCancellationToken;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, 
                                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpRequestMessage>)null)
              return sh.Invoke(request, cancellationToken);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SMessageProcessingChannel, mnh::System.Net.Http.HttpRequestMessage>
                         (this, "ProcessRequest");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MessageProcessingChannel.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpRequestMessage> ProcessRequestHttpRequestMessageCancellationToken;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MessageProcessingChannel.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage ProcessResponse(mnh::System.Net.Http.HttpResponseMessage response, global::System.Threading.CancellationToken cancellationToken)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, 
                                                               global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> sh
               = this.ProcessResponseHttpResponseMessageCancellationToken;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, 
                                                                          global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(response, cancellationToken);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SMessageProcessingChannel, mnh::System.Net.Http.HttpResponseMessage>
                         (this, "ProcessResponse");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MessageProcessingChannel.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, global::System.Threading.CancellationToken, mnh::System.Net.Http.HttpResponseMessage> ProcessResponseHttpResponseMessageCancellationToken;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.MultipartContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.MultipartContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MultipartContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMultipartContent
      : mnh::System.Net.Http.MultipartContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMultipartContent()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMultipartContent(string subtype)
        : base(subtype)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMultipartContent(string subtype, string boundary)
        : base(subtype, boundary)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public override void Add(mnh::System.Net.Http.HttpContent content)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> sh = this.AddHttpContent;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent>)null)
              sh.Invoke(content);
            else 
            {
              if (this.__callBase)
                base.Add(content);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SMultipartContent>(this, "Add");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> AddHttpContent;

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SMultipartContent, global::System.IO.Stream>(this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SMultipartContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SMultipartContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SMultipartContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::System.Net.Http.Moles.SMultipartContent, global::System.Threading.Tasks.Task>(this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::System.Net.Http.Moles.SMultipartContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::System.Net.Http.Moles.SMultipartContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.MultipartFormDataContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.MultipartFormDataContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MultipartFormDataContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMultipartFormDataContent
      : mnh::System.Net.Http.MultipartFormDataContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMultipartFormDataContent()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMultipartFormDataContent(string boundary)
        : base(boundary)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public override void Add(mnh::System.Net.Http.HttpContent content)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> sh = this.AddHttpContent;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent>)null)
              sh.Invoke(content);
            else 
            {
              if (this.__callBase)
                base.Add(content);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SMultipartFormDataContent>(this, "Add");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> AddHttpContent;

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMultipartFormDataContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.NameValueHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.NameValueHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = NameValueHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SNameValueHeaderValue
      : mnh::System.Net.Http.Headers.NameValueHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SNameValueHeaderValue(mnh::System.Net.Http.Headers.NameValueHeaderValue source)
        : base(source)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SNameValueHeaderValue(string name)
        : base(name)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SNameValueHeaderValue(string name, string value)
        : base(name, value)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SNameValueHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Initializes a new instance of type SNameValueHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = NameValueWithParametersHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SNameValueWithParametersHeaderValue
      : mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SNameValueWithParametersHeaderValue(mnh::System.Net.Http.Headers.NameValueWithParametersHeaderValue source)
        : base(source)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SNameValueWithParametersHeaderValue(string name)
        : base(name)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SNameValueWithParametersHeaderValue(string name, string value)
        : base(name, value)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SNameValueWithParametersHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Initializes a new instance of type SNameValueWithParametersHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.ProductHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.ProductHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ProductHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SProductHeaderValue
      : mnh::System.Net.Http.Headers.ProductHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SProductHeaderValue(string name)
        : base(name)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SProductHeaderValue(string name, string version)
        : base(name, version)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SProductHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.ProductInfoHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ProductInfoHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SProductInfoHeaderValue
      : mnh::System.Net.Http.Headers.ProductInfoHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SProductInfoHeaderValue(mnh::System.Net.Http.Headers.ProductHeaderValue product)
        : base(product)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SProductInfoHeaderValue(string comment)
        : base(comment)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SProductInfoHeaderValue(string productName, string productVersion)
        : base(productName, productVersion)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductInfoHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductInfoHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SProductInfoHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SProductInfoHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.RangeConditionHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RangeConditionHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRangeConditionHeaderValue
      : mnh::System.Net.Http.Headers.RangeConditionHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRangeConditionHeaderValue(mnh::System.Net.Http.Headers.EntityTagHeaderValue entityTag)
        : base(entityTag)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SRangeConditionHeaderValue(string entityTag)
        : base(entityTag)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SRangeConditionHeaderValue(global::System.DateTimeOffset date)
        : base(date)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeConditionHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeConditionHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SRangeConditionHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeConditionHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.RangeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.RangeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RangeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRangeHeaderValue
      : mnh::System.Net.Http.Headers.RangeHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRangeHeaderValue()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SRangeHeaderValue(long? from, long? to)
        : base(from, to)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SRangeHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.RangeItemHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RangeItemHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRangeItemHeaderValue
      : mnh::System.Net.Http.Headers.RangeItemHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRangeItemHeaderValue(long? from, long? to)
        : base(from, to)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeItemHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeItemHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SRangeItemHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRangeItemHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.RetryConditionHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RetryConditionHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRetryConditionHeaderValue
      : mnh::System.Net.Http.Headers.RetryConditionHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRetryConditionHeaderValue(global::System.DateTimeOffset date)
        : base(date)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SRetryConditionHeaderValue(global::System.TimeSpan delta)
        : base(delta)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRetryConditionHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRetryConditionHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SRetryConditionHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SRetryConditionHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.StreamContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.StreamContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = StreamContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SStreamContent
      : mnh::System.Net.Http.StreamContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SStreamContent(global::System.IO.Stream content)
        : base(content)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SStreamContent(global::System.IO.Stream content, int bufferSize)
        : base(content, bufferSize)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SStreamContent, global::System.IO.Stream>(this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SStreamContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SStreamContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::System.Net.Http.Moles.SStreamContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Moles.SStreamContent, global::System.Threading.Tasks.Task>(this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::System.Net.Http.Moles.SStreamContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::System.Net.Http.Moles.SStreamContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.StringContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.StringContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = StringContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SStringContent
      : mnh::System.Net.Http.StringContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SStringContent(string content)
        : base(content)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SStringContent(string content, global::System.Text.Encoding encoding)
        : base(content, encoding)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SStringContent(
            string content,
            global::System.Text.Encoding encoding,
            string mediaType
        )
        : base(content, encoding, mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SStringContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.StringWithQualityHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = StringWithQualityHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SStringWithQualityHeaderValue
      : mnh::System.Net.Http.Headers.StringWithQualityHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SStringWithQualityHeaderValue(string value)
        : base(value)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SStringWithQualityHeaderValue(string value, double quality)
        : base(value, quality)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SStringWithQualityHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SStringWithQualityHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SStringWithQualityHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SStringWithQualityHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.TransferCodingHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = TransferCodingHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class STransferCodingHeaderValue
      : mnh::System.Net.Http.Headers.TransferCodingHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public STransferCodingHeaderValue(mnh::System.Net.Http.Headers.TransferCodingHeaderValue source)
        : base(source)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public STransferCodingHeaderValue(string value)
        : base(value)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.STransferCodingHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.STransferCodingHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type STransferCodingHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.STransferCodingHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.ViaHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.ViaHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ViaHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SViaHeaderValue
      : mnh::System.Net.Http.Headers.ViaHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SViaHeaderValue(string protocolVersion, string receivedBy)
        : base(protocolVersion, receivedBy)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SViaHeaderValue(
            string protocolVersion,
            string receivedBy,
            string protocolName
        )
        : base(protocolVersion, receivedBy, protocolName)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SViaHeaderValue(
            string protocolVersion,
            string receivedBy,
            string protocolName,
            string comment
        )
        : base(protocolVersion, receivedBy, protocolName, comment)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SViaHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SViaHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SViaHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SViaHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.ViaHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Headers.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.Headers.WarningHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.Headers.WarningHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = WarningHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SWarningHeaderValue
      : mnh::System.Net.Http.Headers.WarningHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SWarningHeaderValue(
            int code,
            string agent,
            string text
        )
        : base(code, agent, text)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SWarningHeaderValue(
            int code,
            string agent,
            string text,
            global::System.DateTimeOffset date
        )
        : base(code, agent, text, date)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object obj)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(obj);
            else 
            {
              if (this.__callBase)
                return base.Equals(obj);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SWarningHeaderValue, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SWarningHeaderValue, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Initializes a new instance of type SWarningHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::System.Net.Http.Headers.Moles.SWarningHeaderValue, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.Headers.WarningHeaderValue.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace System.Net.Http.Moles
{
    /// <summary>Stub type of <see cref="T:System.Net.Http.WebRequestChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mnh::System.Net.Http.WebRequestChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = WebRequestChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SWebRequestChannel
      : mnh::System.Net.Http.WebRequestChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SWebRequestChannel()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SWebRequestChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
