// <assemblyHash>cf2290a4</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias mash;
extern alias mmf;
extern alias mnh;
extern alias srs;
extern alias ssm;
extern alias ssmw;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("Microsoft.ApplicationServer.Http")]
[assembly: mmf::Microsoft.Moles.Framework.MolesDelegatesType(typeof(global::Microsoft.Moles.Framework.MicrosoftApplicationServerHttpDelegates))]
[assembly: global::System.Reflection.AssemblyCompany("Microsoft")]
[assembly: global::System.Reflection.AssemblyVersion("0.3.0.0")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.ApplicationServer.Http.Moles")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("Microsoft.ApplicationServer.Http.CIT.Unit")]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.ActionOfStreamContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ActionOfStreamContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MActionOfStreamContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MActionOfStreamContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MActionOfStreamContent(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.OnStreamAsObject(System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, object> OnStreamAsObjectObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnStreamAsObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), 
                         (object)null, "OnStreamAsObject", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MActionOfStreamContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MActionOfStreamContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MActionOfStreamContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MActionOfStreamContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.#ctor(System.Action`1{System.IO.Stream})"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, global::System.Action<global::System.IO.Stream>> ConstructorActionOfStream
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), 
                     (object)null, ".ctor", typeof(global::System.Action<global::System.IO.Stream>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.OnStreamAsObject(System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> OnStreamAsObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnStreamAsObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), base.Instance, "OnStreamAsObject", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, global::System.IO.Stream, 
                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), base.Instance, 
                     "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent, long, bool>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent), 
                                                                                          base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ClientContractDescriptionHelper")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MClientContractDescriptionHelper
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MClientContractDescriptionHelper()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MClientContractDescriptionHelper.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MClientContractDescriptionHelper.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper.CreateEmptyOperationDescription(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Description.OperationDescription> CreateEmptyOperationDescriptionOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateEmptyOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), 
                     "CreateEmptyOperationDescription", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper.GetCopyOfOperationDescription(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Description.OperationDescription> GetCopyOfOperationDescriptionOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetCopyOfOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), 
                     "GetCopyOfOperationDescription", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper.GetEquivalentOperationDescription(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Description.OperationDescription> GetEquivalentOperationDescriptionOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEquivalentOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), 
                     "GetEquivalentOperationDescription", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper.&lt;GetEquivalentOperationDescription&gt;b__4(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> _GetEquivalentOperationDescriptionb__4HttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<GetEquivalentOperationDescription>b__4", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), 
                     "<GetEquivalentOperationDescription>b__4", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper.&lt;GetEquivalentOperationDescription&gt;b__5(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> _GetEquivalentOperationDescriptionb__5HttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<GetEquivalentOperationDescription>b__5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.ClientContractDescriptionHelper), 
                     "<GetEquivalentOperationDescription>b__5", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = FormUrlEncodedMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MFormUrlEncodedMediaTypeFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter>
    {
        /// <summary>Initializes a new mole</summary>
        public MFormUrlEncodedMediaTypeFormatter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MFormUrlEncodedMediaTypeFormatter(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, bool> OnCanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), 
                         (object)null, "OnCanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, bool> OnCanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), 
                         (object)null, "OnCanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), (object)null, 
                         "OnReadFromStream", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), 
                         (object)null, "OnWriteToStream", typeof(global::System.Type), typeof(object), 
                                                                                                                                            typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MFormUrlEncodedMediaTypeFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MFormUrlEncodedMediaTypeFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), 
                     base.Instance, "OnCanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), 
                     base.Instance, "OnCanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), base.Instance, 
                     "OnReadFromStream", typeof(global::System.Type), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter), base.Instance, "OnWriteToStream", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HelpPage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHelpPage
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage>
    {
        /// <summary>Initializes a new mole</summary>
        public MHelpPage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHelpPage(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.AddHelpOperations(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Dispatcher.DispatchRuntime)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Dispatcher.DispatchRuntime, ssm::System.ServiceModel.Description.OperationDescription[]> AddHelpOperationsContractDescriptionDispatchRuntime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHelpOperations", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), "AddHelpOperations", 
                                                                                                                         typeof(ssm::System.ServiceModel.Description.ContractDescription), typeof(ssm::System.ServiceModel.Dispatcher.DispatchRuntime));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.ApplyCaching"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage> ApplyCaching
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyCaching", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), (object)null, "ApplyCaching");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.CacheValidationCallback(System.Web.HttpContext,System.Object,System.Web.HttpValidationStatus@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.RefAction<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, global::System.Web.HttpContext, object, global::System.Web.HttpValidationStatus> CacheValidationCallbackHttpContextObjectHttpValidationStatusRef
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValidationCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), (object)null, 
                         "CacheValidationCallback", typeof(global::System.Web.HttpContext), 
                         typeof(object), typeof(global::System.Web.HttpValidationStatus).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.GetHelpPageInvoker(System.Boolean)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, bool, ssm::System.ServiceModel.Dispatcher.IOperationInvoker> GetHelpPageInvokerBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHelpPageInvoker", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), 
                         (object)null, "GetHelpPageInvoker", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.InvokeHelpPage(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, mnh::System.Net.Http.HttpResponseMessage> InvokeHelpPageHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeHelpPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), 
                         (object)null, "InvokeHelpPage", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.InvokeOperationHelpPage(System.String,System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, string, mnh::System.Net.Http.HttpResponseMessage> InvokeOperationHelpPageStringHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeOperationHelpPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), (object)null, 
                         "InvokeOperationHelpPage", typeof(string), typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.ApplyCaching"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action ApplyCaching
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyCaching", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), base.Instance, "ApplyCaching");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHelpPage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHelpPage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.CacheValidationCallback(System.Web.HttpContext,System.Object,System.Web.HttpValidationStatus@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.RefAction<global::System.Web.HttpContext, object, global::System.Web.HttpValidationStatus> CacheValidationCallbackHttpContextObjectHttpValidationStatusRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValidationCallback", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, global::System.Web.HttpContext, 
                                                          object, global::System.Web.HttpValidationStatus>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), base.Instance, 
                     "CacheValidationCallback", typeof(global::System.Web.HttpContext), 
                     typeof(object), typeof(global::System.Web.HttpValidationStatus).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.#ctor(System.Uri,System.String,System.ServiceModel.Description.ContractDescription)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, global::System.Uri, string, ssm::System.ServiceModel.Description.ContractDescription> ConstructorUriStringContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), (object)null, 
                     ".ctor", typeof(global::System.Uri), typeof(string), typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.GetHelpPageInvoker(System.Boolean)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, ssm::System.ServiceModel.Dispatcher.IOperationInvoker> GetHelpPageInvokerBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHelpPageInvoker", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, bool, ssm::System.ServiceModel.Dispatcher.IOperationInvoker>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), base.Instance, "GetHelpPageInvoker", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.GetOperationTemplatePairs"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<ssm::System.UriTemplate, object>>> GetOperationTemplatePairs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetOperationTemplatePairs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), "GetOperationTemplatePairs");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.InvokeHelpPage(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> InvokeHelpPageHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeHelpPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), 
                     base.Instance, "InvokeHelpPage", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage.InvokeOperationHelpPage(System.String,System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, mnh::System.Net.Http.HttpResponseMessage> InvokeOperationHelpPageStringHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeOperationHelpPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage, string, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage), base.Instance, 
                     "InvokeOperationHelpPage", typeof(string), typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HtmlPageBuilder"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HtmlPageBuilder")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHtmlPageBuilder
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder>
    {
        /// <summary>Initializes a new mole</summary>
        public MHtmlPageBuilder()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHtmlPageBuilder(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHtmlPageBuilder.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHtmlPageBuilder.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.CreateBaseDocument(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Xml.Linq.XDocument> CreateBaseDocumentString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBaseDocument", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), "CreateBaseDocument", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.CreateEndpointNotFound(System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Xml.Linq.XDocument> CreateEndpointNotFoundUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateEndpointNotFound", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), 
                     "CreateEndpointNotFound", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.CreateMethodNotAllowedPage(System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Xml.Linq.XDocument> CreateMethodNotAllowedPageUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMethodNotAllowedPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), 
                     "CreateMethodNotAllowedPage", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.CreateServerErrorPage(System.Uri,System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Exception, global::System.Xml.Linq.XDocument> CreateServerErrorPageUriException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateServerErrorPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), 
                     "CreateServerErrorPage", typeof(global::System.Uri), typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HtmlPageBuilder.CreateTransferRedirectPage(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Xml.Linq.XDocument> CreateTransferRedirectPageStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateTransferRedirectPage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder), 
                     "CreateTransferRedirectPage", typeof(string), typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBehavior")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBehavior
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBehavior()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBehavior(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> AddBindingParametersServiceEndpointBindingParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                 ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "AddBindingParameters", 
                                                                                                                                                                                                                                                                                typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> AddBindingParametersServiceEndpointBindingParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "AddBindingParameters", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> ApplyDispatchBehaviorServiceEndpointEndpointDispatcher
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "ApplyDispatchBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, bool> HelpEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "get_HelpEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, bool> HelpEnabledSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "set_HelpEnabled", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnAddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> OnAddBindingParametersServiceEndpointBindingParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "OnAddBindingParameters", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> OnApplyDispatchBehaviorServiceEndpointEndpointDispatcher
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "OnApplyDispatchBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>> OnGetHttpErrorHandlersServiceEndpointIEnumerableOfHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetHttpErrorHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "OnGetHttpErrorHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                   typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetMessageFormatter(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter> OnGetMessageFormatterServiceEndpointHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetMessageFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "OnGetMessageFormatter", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                  typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetOperationSelector(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector> OnGetOperationSelectorServiceEndpointIEnumerableOfHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOperationSelector", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "OnGetOperationSelector", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                   typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnValidate(System.ServiceModel.Description.ServiceEndpoint)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint> OnValidateServiceEndpoint
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "OnValidate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, 
                         "System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "get_TrailingSlashMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint> ValidateServiceEndpoint
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                         (object)null, "Validate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> ApplyDispatchBehaviorServiceEndpointEndpointDispatcher
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                 ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "ApplyDispatchBehavior", 
                                                                                                                                                                                                                                                                          typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpBehavior.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpBehavior.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpBehavior Bind(ssm::System.ServiceModel.Description.IEndpointBehavior target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                  global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpBehavior, ssm::System.ServiceModel.Description.IEndpointBehavior>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.GenerateClientContractDescription(System.ServiceModel.Description.ContractDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ContractDescription> GenerateClientContractDescriptionContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateClientContractDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     "GenerateClientContractDescription", typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HelpEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, bool>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "get_HelpEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> HelpEnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, bool>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "set_HelpEnabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnAddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> OnAddBindingParametersServiceEndpointBindingParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "OnAddBindingParameters", 
                                                                                                                                                                                                                                                                                   typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> OnApplyDispatchBehaviorServiceEndpointEndpointDispatcher
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "OnApplyDispatchBehavior", 
                                                                                                                                                                                                                                                                             typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>> OnGetHttpErrorHandlersServiceEndpointIEnumerableOfHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetHttpErrorHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, 
                     "OnGetHttpErrorHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetMessageFormatter(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter> OnGetMessageFormatterServiceEndpointHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetMessageFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                          mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, 
                     "OnGetMessageFormatter", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                              typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetOperationSelector(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector> OnGetOperationSelectorServiceEndpointIEnumerableOfHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOperationSelector", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                          mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, 
                     "OnGetOperationSelector", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnValidate(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> OnValidateServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     base.Instance, "OnValidate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                                                                                       base.Instance, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, 
                                                                                          "System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", 
                                                                                          typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), base.Instance, "get_TrailingSlashMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     base.Instance, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ValidateEndpoint(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> ValidateEndpointServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     "ValidateEndpoint", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ValidateOperationDescription(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription> ValidateOperationDescriptionOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     "ValidateOperationDescription", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> ValidateServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior), 
                     base.Instance, "Validate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBehaviorElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBehaviorElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBehaviorElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBehaviorElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.BehaviorType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, global::System.Type> BehaviorTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BehaviorType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "get_BehaviorType");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.CreateBehavior"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, object> CreateBehavior
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "CreateBehavior");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, bool> HelpEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "get_HelpEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, bool> HelpEnabledSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "set_HelpEnabled", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.IsSet(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string, bool> IsSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "IsSet", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string> OperationHandlerFactorySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "set_OperationHandlerFactory", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.Properties"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "get_TrailingSlashMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                         (object)null, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBehaviorElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBehaviorElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.BehaviorType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> BehaviorTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BehaviorType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "get_BehaviorType");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.CreateBehavior"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> CreateBehavior
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "CreateBehavior");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.GetHttpOperationHandlerFactory(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> GetHttpOperationHandlerFactoryString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpOperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                     "GetHttpOperationHandlerFactory", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HelpEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "get_HelpEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> HelpEnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "set_HelpEnabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.IsSet(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "IsSet", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> OperationHandlerFactorySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                     base.Instance, "set_OperationHandlerFactory", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, 
                                                                                                                                                    global::System.Configuration.ConfigurationPropertyCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), base.Instance, "get_TrailingSlashMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement), 
                                                                                       base.Instance, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBinding")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBinding
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpBinding>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBinding()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBinding(mash::Microsoft.ApplicationServer.Http.HttpBinding instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.ApplyConfiguration(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, string> ApplyConfigurationString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "ApplyConfiguration", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.CreateBindingElements"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.Channels.BindingElementCollection> CreateBindingElements
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBindingElements", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "CreateBindingElements");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.EnvelopeVersion"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.EnvelopeVersion> EnvelopeVersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EnvelopeVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_EnvelopeVersion");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.GetTransport"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.Channels.TransportBindingElement> GetTransport
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTransport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "GetTransport");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_HostNameComparisonMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.Initialize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding> Initialize
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "Initialize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, long> MaxBufferPoolSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_MaxBufferPoolSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, long> MaxBufferPoolSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_MaxBufferPoolSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, int> MaxBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_MaxBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, int> MaxBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_MaxBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, long> MaxReceivedMessageSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_MaxReceivedMessageSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, long> MaxReceivedMessageSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_MaxReceivedMessageSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_MessageHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, bool> ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Scheme"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, string> SchemeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Scheme", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_Scheme");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Security"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecurityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_Security");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Security"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecuritySetHttpBindingSecurity
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_Security", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.TransferMode> TransferModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, "get_TransferMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                         (object)null, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.ApplyConfiguration(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ApplyConfigurationString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, string>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "ApplyConfiguration", typeof(string));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding Bind(ssm::System.ServiceModel.IDefaultCommunicationTimeouts target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpBinding, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding, ssm::System.ServiceModel.IDefaultCommunicationTimeouts>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding Bind(ssm::System.ServiceModel.Channels.IBindingRuntimePreferences target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpBinding, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpBinding, ssm::System.ServiceModel.Channels.IBindingRuntimePreferences>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor(Microsoft.ApplicationServer.Http.HttpBindingSecurityMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ConstructorHttpBindingSecurityMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                     (object)null, ".ctor", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBinding, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.CreateBindingElements"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElementCollection> CreateBindingElements
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBindingElements", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.Channels.BindingElementCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "CreateBindingElements");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.EnvelopeVersion"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.EnvelopeVersion> EnvelopeVersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EnvelopeVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.EnvelopeVersion>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_EnvelopeVersion");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.GetTransport"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.TransportBindingElement> GetTransport
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTransport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.Channels.TransportBindingElement>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "GetTransport");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_HostNameComparisonMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                     base.Instance, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.Initialize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Initialize
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "Initialize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxBufferPoolSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, long>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_MaxBufferPoolSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxBufferPoolSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, long>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "set_MaxBufferPoolSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_MaxBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "set_MaxBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxReceivedMessageSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, long>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_MaxReceivedMessageSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxReceivedMessageSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, long>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "set_MaxReceivedMessageSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, 
                                                                                                      mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_MessageHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, 
                                                                                                      mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                     base.Instance, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                                                                                          base.Instance, "System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Scheme"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> SchemeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Scheme", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, string>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_Scheme");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Security"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecurityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_Security");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Security"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecuritySetHttpBindingSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                     base.Instance, "set_Security", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.TransferMode> TransferModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), base.Instance, "get_TransferMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBinding, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding), 
                     base.Instance, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingCollectionElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBindingCollectionElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBindingCollectionElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBindingCollectionElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetDefault"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement, ssm::System.ServiceModel.Channels.Binding> GetDefault
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement), 
                         (object)null, "GetDefault");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingCollectionElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingCollectionElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetBindingCollectionElement"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement> GetBindingCollectionElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetBindingCollectionElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement), "GetBindingCollectionElement");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetDefault"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Binding> GetDefault
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement, ssm::System.ServiceModel.Channels.Binding>(value)
                                              ), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement), base.Instance, "GetDefault");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBindingElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBindingElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBindingElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.BindingElementType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, global::System.Type> BindingElementTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BindingElementType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_BindingElementType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_HostNameComparisonMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.Channels.Binding> InitializeFromBinding
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "InitializeFrom", typeof(ssm::System.ServiceModel.Channels.Binding));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long> MaxBufferPoolSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_MaxBufferPoolSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long> MaxBufferPoolSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "set_MaxBufferPoolSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, int> MaxBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_MaxBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, int> MaxBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "set_MaxBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long> MaxReceivedMessageSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_MaxReceivedMessageSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long> MaxReceivedMessageSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "set_MaxReceivedMessageSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.Channels.Binding> OnApplyConfigurationBinding
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "OnApplyConfiguration", typeof(ssm::System.ServiceModel.Channels.Binding));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Properties"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Security"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement> SecurityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_Security");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetPropertyValueIfNotDefaultValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            public static void SetPropertyValueIfNotDefaultValueStringT<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, string, T> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), (object)null, 
                     "SetPropertyValueIfNotDefaultValue", gma, typeof(string), typeof(T));
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.TransferMode> TransferModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "get_TransferMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                         (object)null, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingElement Bind(ssm::System.ServiceModel.Configuration.IBindingConfigurationElement target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, 
                                                                  global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingElement, 
                                                                  ssm::System.ServiceModel.Configuration.IBindingConfigurationElement>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.BindingElementType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> BindingElementTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BindingElementType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_BindingElementType");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.HostNameComparisonMode>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_HostNameComparisonMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.HostNameComparisonMode>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                     base.Instance, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> InitializeFromBinding
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.Channels.Binding>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                     base.Instance, "InitializeFrom", typeof(ssm::System.ServiceModel.Channels.Binding));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxBufferPoolSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_MaxBufferPoolSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxBufferPoolSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                                                                                       base.Instance, "set_MaxBufferPoolSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, int>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_MaxBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, int>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                                                                                       base.Instance, "set_MaxBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxReceivedMessageSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_MaxReceivedMessageSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxReceivedMessageSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, long>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                                                                                       base.Instance, "set_MaxReceivedMessageSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> OnApplyConfigurationBinding
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.Channels.Binding>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                     base.Instance, "OnApplyConfiguration", typeof(ssm::System.ServiceModel.Channels.Binding));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, 
                                                                                                                                                    global::System.Configuration.ConfigurationPropertyCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Security"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement> SecurityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_Security");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetPropertyValueIfNotDefaultValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
        public void SetPropertyValueIfNotDefaultValueStringT<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, T> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, string, T>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, 
                 "SetPropertyValueIfNotDefaultValue", gma, typeof(string), typeof(T));
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.TransferMode> TransferModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), base.Instance, "get_TransferMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement), 
                     base.Instance, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingParameterBehavior")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpBindingParameterBehavior
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBindingParameterBehavior()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBindingParameterBehavior(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), (object)null, 
                         "System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), (object)null, 
                         "System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), (object)null, 
                         "System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint> SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), (object)null, 
                                                                                                                                      "System.ServiceModel.Description.IEndpointBehavior.Validate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingParameterBehavior.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingParameterBehavior.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingParameterBehavior Bind(ssm::System.ServiceModel.Description.IEndpointBehavior target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingParameterBehavior, 
                                                                  ssm::System.ServiceModel.Description.IEndpointBehavior>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.#ctor(System.ServiceModel.Description.ServiceDebugBehavior,System.ServiceModel.Description.DispatcherSynchronizationBehavior)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceDebugBehavior, ssm::System.ServiceModel.Description.DispatcherSynchronizationBehavior> ConstructorServiceDebugBehaviorDispatcherSynchronizationBehavior
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), (object)null, 
                     ".ctor", typeof(ssm::System.ServiceModel.Description.ServiceDebugBehavior), 
                              typeof(ssm::System.ServiceModel.Description.DispatcherSynchronizationBehavior));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), base.Instance, 
                                                                                          "System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters", 
                                                                                          typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), base.Instance, 
                                                                                          "System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior", 
                                                                                          typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), base.Instance, 
                                                                                          "System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior", 
                                                                                          typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.EndpointDispatcher));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IEndpointBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior, ssm::System.ServiceModel.Description.ServiceEndpoint>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior), base.Instance, 
                                                                                                                                                                                                                                         "System.ServiceModel.Description.IEndpointBehavior.Validate", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurity"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingSecurity")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBindingSecurity
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBindingSecurity()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBindingSecurity(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.IsModeSet"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, bool> IsModeSetGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsModeSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), (object)null, "get_IsModeSet");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.IsModeSet"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, bool> IsModeSetSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsModeSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), 
                         (object)null, "set_IsModeSet", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Mode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), (object)null, "get_Mode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Mode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeSetHttpBindingSecurityMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), 
                         (object)null, "set_Mode", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Transport"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, ssm::System.ServiceModel.HttpTransportSecurity> TransportGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), (object)null, "get_Transport");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Transport"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, ssm::System.ServiceModel.HttpTransportSecurity> TransportSetHttpTransportSecurity
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), 
                         (object)null, "set_Transport", typeof(ssm::System.ServiceModel.HttpTransportSecurity));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingSecurity.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingSecurity.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingSecurity.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.IsModeSet"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsModeSetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsModeSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), base.Instance, "get_IsModeSet");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.IsModeSet"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> IsModeSetSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsModeSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), base.Instance, "set_IsModeSet", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Mode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), base.Instance, "get_Mode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Mode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeSetHttpBindingSecurityMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), 
                     base.Instance, "set_Mode", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Transport"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.HttpTransportSecurity> TransportGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, ssm::System.ServiceModel.HttpTransportSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), base.Instance, "get_Transport");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Transport"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.HttpTransportSecurity> TransportSetHttpTransportSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity, ssm::System.ServiceModel.HttpTransportSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity), 
                     base.Instance, "set_Transport", typeof(ssm::System.ServiceModel.HttpTransportSecurity));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingSecurityElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpBindingSecurityElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpBindingSecurityElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpBindingSecurityElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.ApplyConfiguration(Microsoft.ApplicationServer.Http.HttpBindingSecurity)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> ApplyConfigurationHttpBindingSecurity
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "ApplyConfiguration", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.InitializeFrom(Microsoft.ApplicationServer.Http.HttpBindingSecurity)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> InitializeFromHttpBindingSecurity
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "InitializeFrom", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Mode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "get_Mode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Mode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeSetHttpBindingSecurityMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "set_Mode", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Properties"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Transport"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, ssm::System.ServiceModel.Configuration.HttpTransportSecurityElement> TransportGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                         (object)null, "get_Transport");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.ApplyConfiguration(Microsoft.ApplicationServer.Http.HttpBindingSecurity)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> ApplyConfigurationHttpBindingSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                     base.Instance, "ApplyConfiguration", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingSecurityElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpBindingSecurityElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.InitializeFrom(Microsoft.ApplicationServer.Http.HttpBindingSecurity)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> InitializeFromHttpBindingSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                     base.Instance, "InitializeFrom", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Mode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), base.Instance, "get_Mode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Mode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode> ModeSetHttpBindingSecurityMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Mode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), 
                     base.Instance, "set_Mode", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          global::System.Configuration.ConfigurationPropertyCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Transport"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Configuration.HttpTransportSecurityElement> TransportGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Transport", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement, 
                                                          ssm::System.ServiceModel.Configuration.HttpTransportSecurityElement>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement), base.Instance, "get_Transport");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpBindingSecurityModeHelper")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MHttpBindingSecurityModeHelper
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpBindingSecurityModeHelper()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingSecurityModeHelper.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpBindingSecurityModeHelper.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper.IsDefined(Microsoft.ApplicationServer.Http.HttpBindingSecurityMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode, bool> IsDefinedHttpBindingSecurityMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsDefined", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper), 
                     "IsDefined", typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationStrings"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationStrings))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpConfigurationStrings")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MHttpConfigurationStrings
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpConfigurationStrings()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationStrings))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpConfigurationStrings.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpConfigurationStrings.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationStrings), value);
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpContentExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MHttpContentExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpContentExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpContentExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpContentExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsAsync``1(System.Net.Http.HttpContent)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsAsyncHttpContent<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<T>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                 "ReadAsAsync", gma, typeof(mnh::System.Net.Http.HttpContent));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsAsyncHttpContentIEnumerableOfMediaTypeFormatter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, global::System.Threading.Tasks.Task<T>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsAsync", 
                 gma, typeof(mnh::System.Net.Http.HttpContent), 
                      typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsAsync(System.Net.Http.HttpContent,System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Threading.Tasks.Task<object>> ReadAsAsyncHttpContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                     "ReadAsAsync", typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, global::System.Threading.Tasks.Task<object>> ReadAsAsyncHttpContentTypeIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsAsync", 
                     typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type), 
                                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAs``1(System.Net.Http.HttpContent)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsHttpContent<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, T> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                 "ReadAs", gma, typeof(mnh::System.Net.Http.HttpContent));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAs``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsHttpContentIEnumerableOfMediaTypeFormatter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, T> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAs", 
                 gma, typeof(mnh::System.Net.Http.HttpContent), 
                      typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAs(System.Net.Http.HttpContent,System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, object> ReadAsHttpContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                     "ReadAs", typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAs(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, object> ReadAsHttpContentTypeIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAs", 
                     typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type), 
                                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefaultAsync``1(System.Net.Http.HttpContent)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsOrDefaultAsyncHttpContent<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Threading.Tasks.Task<T>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                 "ReadAsOrDefaultAsync", gma, typeof(mnh::System.Net.Http.HttpContent));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefaultAsync``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsOrDefaultAsyncHttpContentIEnumerableOfMediaTypeFormatter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, global::System.Threading.Tasks.Task<T>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsOrDefaultAsync", 
                 gma, typeof(mnh::System.Net.Http.HttpContent), 
                      typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefaultAsync(System.Net.Http.HttpContent,System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Threading.Tasks.Task<object>> ReadAsOrDefaultAsyncHttpContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                     "ReadAsOrDefaultAsync", typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefaultAsync(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, global::System.Threading.Tasks.Task<object>> ReadAsOrDefaultAsyncHttpContentTypeIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsOrDefaultAsync", 
                     typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type), 
                                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefault``1(System.Net.Http.HttpContent)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsOrDefaultHttpContent<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, T> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                 "ReadAsOrDefault", gma, typeof(mnh::System.Net.Http.HttpContent));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefault``1(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
        public static void ReadAsOrDefaultHttpContentIEnumerableOfMediaTypeFormatter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, T> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsOrDefault", 
                 gma, typeof(mnh::System.Net.Http.HttpContent), 
                      typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefault(System.Net.Http.HttpContent,System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, object> ReadAsOrDefaultHttpContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), 
                     "ReadAsOrDefault", typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpContentExtensionMethods.ReadAsOrDefault(System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent, global::System.Type, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, object> ReadAsOrDefaultHttpContentTypeIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpContentExtensionMethods), "ReadAsOrDefault", 
                     typeof(mnh::System.Net.Http.HttpContent), typeof(global::System.Type), 
                                                               typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpEndpoint")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpEndpoint
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpEndpoint()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpEndpoint(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, bool> HelpEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_HelpEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, bool> HelpEnabledSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_HelpEnabled", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_HostNameComparisonMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HttpBehavior"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior> HttpBehaviorGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_HttpBehavior");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HttpBinding"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.HttpBinding> HttpBindingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpBinding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_HttpBinding");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long> MaxBufferPoolSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_MaxBufferPoolSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long> MaxBufferPoolSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_MaxBufferPoolSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, int> MaxBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_MaxBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, int> MaxBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_MaxBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long> MaxReceivedMessageSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_MaxReceivedMessageSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long> MaxReceivedMessageSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_MaxReceivedMessageSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_MessageHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.Security"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecurityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), (object)null, "get_Security");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_TrailingSlashMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.TransferMode> TransferModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "get_TransferMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                         (object)null, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpEndpoint.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpEndpoint.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.Description.ContractDescription> ConstructorContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                     (object)null, ".ctor", typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.EndpointAddress> ConstructorContractDescriptionEndpointAddress
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), (object)null, 
                     ".ctor", typeof(ssm::System.ServiceModel.Description.ContractDescription), typeof(ssm::System.ServiceModel.EndpointAddress));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HelpEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, bool>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_HelpEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> HelpEnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, bool>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "set_HelpEnabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_HostNameComparisonMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                     base.Instance, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HttpBehavior"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior> HttpBehaviorGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_HttpBehavior");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HttpBinding"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBinding> HttpBindingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpBinding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.HttpBinding>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_HttpBinding");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxBufferPoolSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_MaxBufferPoolSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxBufferPoolSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "set_MaxBufferPoolSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_MaxBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "set_MaxBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxReceivedMessageSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_MaxReceivedMessageSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxReceivedMessageSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, long>(value)
                                                                                         ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "set_MaxReceivedMessageSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_MessageHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                                                                                       base.Instance, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                                                                                       base.Instance, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.Security"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity> SecurityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.HttpBindingSecurity>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_Security");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_TrailingSlashMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                     base.Instance, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.TransferMode> TransferModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), base.Instance, "get_TransferMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint), 
                     base.Instance, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpEndpointCollectionElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpEndpointCollectionElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpEndpointCollectionElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpEndpointCollectionElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpEndpointCollectionElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpEndpointCollectionElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement), 
                     (object)null, ".ctor");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpEndpointElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpEndpointElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpEndpointElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpEndpointElement(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint> CreateServiceEndpointContractDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateServiceEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "CreateServiceEndpoint", typeof(ssm::System.ServiceModel.Description.ContractDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.EndpointType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, global::System.Type> EndpointTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EndpointType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_EndpointType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, bool> HelpEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_HelpEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HelpEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, bool> HelpEnabledSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_HelpEnabled", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_HostNameComparisonMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HostNameComparisonMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.InternalOnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Description.ServiceEndpoint> InternalOnApplyConfigurationServiceEndpoint
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalOnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "InternalOnApplyConfiguration", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.IsSet(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string, bool> IsSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "IsSet", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long> MaxBufferPoolSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_MaxBufferPoolSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferPoolSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long> MaxBufferPoolSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_MaxBufferPoolSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, int> MaxBufferSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_MaxBufferSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, int> MaxBufferSizeSetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_MaxBufferSize", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long> MaxReceivedMessageSizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_MaxReceivedMessageSize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxReceivedMessageSize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long> MaxReceivedMessageSizeSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_MaxReceivedMessageSize", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ChannelEndpointElement> OnApplyConfigurationServiceEndpointChannelEndpointElement
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), (object)null, 
                         "OnApplyConfiguration", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Configuration.ChannelEndpointElement));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ServiceEndpointElement> OnApplyConfigurationServiceEndpointServiceEndpointElement
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), (object)null, 
                         "OnApplyConfiguration", 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Configuration.ServiceEndpointElement));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Configuration.ChannelEndpointElement> OnInitializeAndValidateChannelEndpointElement
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnInitializeAndValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "OnInitializeAndValidate", typeof(ssm::System.ServiceModel.Configuration.ChannelEndpointElement));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.Configuration.ServiceEndpointElement> OnInitializeAndValidateServiceEndpointElement
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnInitializeAndValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "OnInitializeAndValidate", typeof(ssm::System.ServiceModel.Configuration.ServiceEndpointElement));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string> OperationHandlerFactorySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_OperationHandlerFactory", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Properties"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Security"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement> SecurityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_Security");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_TrailingSlashMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.TransferMode> TransferModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "get_TransferMode");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TransferMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                         (object)null, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpEndpointElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Configuration.Moles.MHttpEndpointElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint> CreateServiceEndpointContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateServiceEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                          base.Instance, "CreateServiceEndpoint", typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.EndpointType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> EndpointTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EndpointType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_EndpointType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HelpEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_HelpEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HelpEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> HelpEnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "set_HelpEnabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_HostNameComparisonMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HostNameComparisonMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.HostNameComparisonMode> HostNameComparisonModeSetHostNameComparisonMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HostNameComparisonMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.HostNameComparisonMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                     base.Instance, "set_HostNameComparisonMode", typeof(ssm::System.ServiceModel.HostNameComparisonMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.InternalOnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> InternalOnApplyConfigurationServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalOnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                          base.Instance, "InternalOnApplyConfiguration", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.IsSet(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "IsSet", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxBufferPoolSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_MaxBufferPoolSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferPoolSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxBufferPoolSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferPoolSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "set_MaxBufferPoolSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> MaxBufferSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, int>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_MaxBufferSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> MaxBufferSizeSetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxBufferSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, int>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                       base.Instance, "set_MaxBufferSize", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MaxReceivedMessageSizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_MaxReceivedMessageSize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxReceivedMessageSize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> MaxReceivedMessageSizeSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MaxReceivedMessageSize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, long>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                     base.Instance, "set_MaxReceivedMessageSize", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ChannelEndpointElement> OnApplyConfigurationServiceEndpointChannelEndpointElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ChannelEndpointElement>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "OnApplyConfiguration", 
                                                                                                                                                                                                                                                                                    typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Configuration.ChannelEndpointElement));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ServiceEndpointElement> OnApplyConfigurationServiceEndpointServiceEndpointElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnApplyConfiguration", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Configuration.ServiceEndpointElement>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "OnApplyConfiguration", 
                                                                                                                                                                                                                                                                                    typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Configuration.ServiceEndpointElement));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Configuration.ChannelEndpointElement> OnInitializeAndValidateChannelEndpointElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnInitializeAndValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Configuration.ChannelEndpointElement>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                          base.Instance, "OnInitializeAndValidate", typeof(ssm::System.ServiceModel.Configuration.ChannelEndpointElement));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Configuration.ServiceEndpointElement> OnInitializeAndValidateServiceEndpointElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnInitializeAndValidate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    ssm::System.ServiceModel.Configuration.ServiceEndpointElement>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                          base.Instance, "OnInitializeAndValidate", typeof(ssm::System.ServiceModel.Configuration.ServiceEndpointElement));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> OperationHandlerFactorySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                     base.Instance, "set_OperationHandlerFactory", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                    global::System.Configuration.ConfigurationPropertyCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Security"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement> SecurityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Security", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_Security");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_TrailingSlashMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeSetTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                                                                                       base.Instance, "set_TrailingSlashMode", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.TransferMode> TransferModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), base.Instance, "get_TransferMode");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TransferMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.TransferMode> TransferModeSetTransferMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TransferMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement, ssm::System.ServiceModel.TransferMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement), 
                     base.Instance, "set_TransferMode", typeof(ssm::System.ServiceModel.TransferMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpErrorHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpErrorHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpErrorHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.HandleError(System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, global::System.Exception, bool> HandleErrorException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), 
                         (object)null, "HandleError", typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.ProvideResponse(System.Exception)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> ProvideResponseException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ProvideResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), 
                         (object)null, "ProvideResponse", typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefAction<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, global::System.Exception, ssm::System.ServiceModel.Channels.MessageVersion, ssm::System.ServiceModel.Channels.Message> SystemServiceModelDispatcherIErrorHandlerProvideFaultExceptionMessageVersionMessageRef
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), (object)null, 
                         "System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault", typeof(global::System.Exception), 
                         typeof(ssm::System.ServiceModel.Channels.MessageVersion), typeof(ssm::System.ServiceModel.Channels.Message).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpErrorHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpErrorHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpErrorHandler Bind(ssm::System.ServiceModel.Dispatcher.IErrorHandler target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpErrorHandler, ssm::System.ServiceModel.Dispatcher.IErrorHandler>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.HandleError(System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, bool> HandleErrorException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HandleError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, global::System.Exception, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), 
                     base.Instance, "HandleError", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.ProvideResponse(System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> ProvideResponseException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ProvideResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, 
                                                                                                                                                 global::System.Exception, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), 
                                                                                       base.Instance, "ProvideResponse", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.RefAction<global::System.Exception, ssm::System.ServiceModel.Channels.MessageVersion, ssm::System.ServiceModel.Channels.Message> SystemServiceModelDispatcherIErrorHandlerProvideFaultExceptionMessageVersionMessageRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler, global::System.Exception, 
                                                          ssm::System.ServiceModel.Channels.MessageVersion, ssm::System.ServiceModel.Channels.Message>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler), base.Instance, 
                     "System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault", typeof(global::System.Exception), 
                     typeof(ssm::System.ServiceModel.Channels.MessageVersion), typeof(ssm::System.ServiceModel.Channels.Message).MakeByRefType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpHeaderExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MHttpHeaderExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpHeaderExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpHeaderExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpHeaderExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods.CopyTo(System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpContentHeaders, mnh::System.Net.Http.Headers.HttpContentHeaders> CopyToHttpContentHeadersHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods), 
                     "CopyTo", typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods.CopyTo(System.Net.Http.Headers.HttpRequestHeaders,System.Net.Http.Headers.HttpRequestHeaders)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpRequestHeaders, mnh::System.Net.Http.Headers.HttpRequestHeaders> CopyToHttpRequestHeadersHttpRequestHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods), 
                     "CopyTo", typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders), typeof(mnh::System.Net.Http.Headers.HttpRequestHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods.CopyTo(System.Net.Http.Headers.HttpResponseHeaders,System.Net.Http.Headers.HttpResponseHeaders)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpResponseHeaders, mnh::System.Net.Http.Headers.HttpResponseHeaders> CopyToHttpResponseHeadersHttpResponseHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpHeaderExtensionMethods), 
                     "CopyTo", typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders), typeof(mnh::System.Net.Http.Headers.HttpResponseHeaders));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpInstanceProvider")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpInstanceProvider
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpInstanceProvider(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, object> GetInstanceInstanceContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), 
                         (object)null, "GetInstance", typeof(ssm::System.ServiceModel.InstanceContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, mnh::System.Net.Http.HttpRequestMessage, object> GetInstanceInstanceContextHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), (object)null, 
                         "GetInstance", typeof(ssm::System.ServiceModel.InstanceContext), typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, object> ReleaseInstanceInstanceContextObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReleaseInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), (object)null, 
                         "ReleaseInstance", typeof(ssm::System.ServiceModel.InstanceContext), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, ssm::System.ServiceModel.Channels.Message, object> SystemServiceModelDispatcherIInstanceProviderGetInstanceInstanceContextMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), (object)null, 
                         "System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance", 
                         typeof(ssm::System.ServiceModel.InstanceContext), typeof(ssm::System.ServiceModel.Channels.Message));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpInstanceProvider.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpInstanceProvider.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpInstanceProvider Bind(ssm::System.ServiceModel.Dispatcher.IInstanceProvider target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpInstanceProvider, 
                                                                  ssm::System.ServiceModel.Dispatcher.IInstanceProvider>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, object> GetInstanceInstanceContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, object>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), 
                     base.Instance, "GetInstance", typeof(ssm::System.ServiceModel.InstanceContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, mnh::System.Net.Http.HttpRequestMessage, object> GetInstanceInstanceContextHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, 
                                                          mnh::System.Net.Http.HttpRequestMessage, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), base.Instance, 
                     "GetInstance", typeof(ssm::System.ServiceModel.InstanceContext), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.InstanceContext, object> ReleaseInstanceInstanceContextObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReleaseInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, object>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), base.Instance, 
                     "ReleaseInstance", typeof(ssm::System.ServiceModel.InstanceContext), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, ssm::System.ServiceModel.Channels.Message, object> SystemServiceModelDispatcherIInstanceProviderGetInstanceInstanceContextMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider, ssm::System.ServiceModel.InstanceContext, 
                                                          ssm::System.ServiceModel.Channels.Message, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider), base.Instance, 
                     "System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance", 
                     typeof(ssm::System.ServiceModel.InstanceContext), typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessage
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessage(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.EnsureNotDisposed"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage> EnsureNotDisposed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureNotDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "EnsureNotDisposed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpContentLength"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, long?> GetHttpContentLength
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "GetHttpContentLength");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpRequestMessage(System.Boolean)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool, mnh::System.Net.Http.HttpRequestMessage> GetHttpRequestMessageBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "GetHttpRequestMessage", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpResponseMessage(System.Boolean)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool, mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessageBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "GetHttpResponseMessage", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Headers"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageHeaders> HeadersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_Headers");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsEmpty"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool> IsEmptyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsEmpty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_IsEmpty");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsFault"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool> IsFaultGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsFault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_IsFault");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsRequest"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool> IsRequestGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_IsRequest");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsRequest"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool> IsRequestSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "set_IsRequest", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnBodyToString(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnBodyToStringXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBodyToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnBodyToString", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnClose"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage> OnClose
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "OnClose");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnCreateBufferedCopy(System.Int32)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, int, ssm::System.ServiceModel.Channels.MessageBuffer> OnCreateBufferedCopyInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateBufferedCopy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnCreateBufferedCopy", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnGetBodyAttribute(System.String,System.String)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, string, string, string> OnGetBodyAttributeStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetBodyAttribute", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, 
                         "OnGetBodyAttribute", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnGetReaderAtBodyContents"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryReader> OnGetReaderAtBodyContents
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetReaderAtBodyContents", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnGetReaderAtBodyContents");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnWriteBodyContentsXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteBodyContents", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnWriteBodyContents", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteMessage(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnWriteMessageXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnWriteMessage", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartBody(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnWriteStartBodyXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartBody", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnWriteStartBody", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnWriteStartEnvelopeXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartEnvelope", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnWriteStartEnvelope", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter> OnWriteStartHeadersXmlDictionaryWriter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                         (object)null, "OnWriteStartHeaders", typeof(srs::System.Xml.XmlDictionaryWriter));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Properties"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageProperties> PropertiesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_Properties");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Version"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageVersion> VersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), (object)null, "get_Version");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessage.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessage Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessage, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.#ctor(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, mnh::System.Net.Http.HttpRequestMessage> ConstructorHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.#ctor(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, mnh::System.Net.Http.HttpResponseMessage> ConstructorHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.EnsureNotDisposed"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action EnsureNotDisposed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureNotDisposed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "EnsureNotDisposed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpContentLength"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long?> GetHttpContentLength
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, long?>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "GetHttpContentLength");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpRequestMessage(System.Boolean)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, mnh::System.Net.Http.HttpRequestMessage> GetHttpRequestMessageBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "GetHttpRequestMessage", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetHttpResponseMessage(System.Boolean)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessageBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "GetHttpResponseMessage", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.GetNotSupportedException"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.NotSupportedException> GetNotSupportedException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetNotSupportedException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), "GetNotSupportedException");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Headers"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageHeaders> HeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Headers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageHeaders>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_Headers");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsEmpty"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsEmptyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsEmpty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_IsEmpty");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsFault"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsFaultGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsFault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_IsFault");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsRequest"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_IsRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.IsRequest"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> IsRequestSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "set_IsRequest", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnBodyToString(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnBodyToStringXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBodyToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnBodyToString", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnClose"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClose
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnClose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "OnClose");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnCreateBufferedCopy(System.Int32)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, ssm::System.ServiceModel.Channels.MessageBuffer> OnCreateBufferedCopyInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateBufferedCopy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, int, ssm::System.ServiceModel.Channels.MessageBuffer>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "OnCreateBufferedCopy", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnGetBodyAttribute(System.String,System.String)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string> OnGetBodyAttributeStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetBodyAttribute", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, string, string, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, 
                     "OnGetBodyAttribute", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnGetReaderAtBodyContents"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<srs::System.Xml.XmlDictionaryReader> OnGetReaderAtBodyContents
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetReaderAtBodyContents", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryReader>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "OnGetReaderAtBodyContents");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnWriteBodyContentsXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteBodyContents", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnWriteBodyContents", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteMessage(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnWriteMessageXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnWriteMessage", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartBody(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnWriteStartBodyXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartBody", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnWriteStartBody", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnWriteStartEnvelopeXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartEnvelope", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnWriteStartEnvelope", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessage.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Xml.XmlDictionaryWriter> OnWriteStartHeadersXmlDictionaryWriter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteStartHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, srs::System.Xml.XmlDictionaryWriter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), 
                     base.Instance, "OnWriteStartHeaders", typeof(srs::System.Xml.XmlDictionaryWriter));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Properties"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageProperties> PropertiesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Properties", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageProperties>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_Properties");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessage.Version"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion> VersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Version", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage, ssm::System.ServiceModel.Channels.MessageVersion>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessage), base.Instance, "get_Version");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageEncoderFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageEncoderFactory
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageEncoderFactory()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageEncoderFactory(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.CreateSessionEncoder"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageEncoder> CreateSessionEncoder
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateSessionEncoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), 
                         (object)null, "CreateSessionEncoder");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.Encoder"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageEncoder> EncoderGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Encoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), 
                         (object)null, "get_Encoder");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.MessageVersion"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), 
                         (object)null, "get_MessageVersion");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncoderFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncoderFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.CreateSessionEncoder"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> CreateSessionEncoder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateSessionEncoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageEncoder>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), base.Instance, "CreateSessionEncoder");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.Encoder"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> EncoderGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Encoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageEncoder>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), base.Instance, "get_Encoder");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.MessageVersion"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory, ssm::System.ServiceModel.Channels.MessageVersion>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory), base.Instance, "get_MessageVersion");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageEncodingBindingElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageEncodingBindingElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageEncodingBindingElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageEncodingBindingElement(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void BuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), (object)null, 
                     "BuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void BuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> mole)
                where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), (object)null, 
                     "BuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void CanBuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), (object)null, 
                     "CanBuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void CanBuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
                where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), (object)null, 
                     "CanBuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.BindingElement> Clone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                         (object)null, "Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CreateMessageEncoderFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.MessageEncoderFactory> CreateMessageEncoderFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMessageEncoderFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                         (object)null, "CreateMessageEncoderFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                         (object)null, "get_MessageVersion");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionSetMessageVersion
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                         (object)null, "set_MessageVersion", typeof(ssm::System.ServiceModel.Channels.MessageVersion));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void BuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, 
                 "BuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void BuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> mole)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, 
                 "BuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void CanBuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, bool>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, 
                 "CanBuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void CanBuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, bool>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, 
                 "CanBuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElement> Clone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                          ssm::System.ServiceModel.Channels.BindingElement>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, "Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CreateMessageEncoderFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoderFactory> CreateMessageEncoderFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMessageEncoderFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                          ssm::System.ServiceModel.Channels.MessageEncoderFactory>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, "CreateMessageEncoderFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.IsChannelShapeSupported``1"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsChannelShapeSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
        public static void IsChannelShapeSupported<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                 "IsChannelShapeSupported", gma);
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                          ssm::System.ServiceModel.Channels.MessageVersion>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), base.Instance, "get_MessageVersion");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionSetMessageVersion
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement, 
                                                          ssm::System.ServiceModel.Channels.MessageVersion>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement), 
                     base.Instance, "set_MessageVersion", typeof(ssm::System.ServiceModel.Channels.MessageVersion));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageEncodingChannelListener")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageEncodingChannelListener
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageEncodingChannelListener()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageEncodingChannelListener(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnAcceptChannel(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "OnAcceptChannel", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), (object)null, 
                                                                                              "OnBeginAcceptChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), (object)null, 
                                                                                              "OnBeginWaitForChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "OnEndAcceptChannel", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "OnEndWaitForChannel", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnOpening"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener> OnOpening
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "OnOpening");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnWaitForChannel(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, bool> OnWaitForChannelTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "OnWaitForChannel", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.WrapInnerChannel(System.ServiceModel.Channels.IReplyChannel)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel> WrapInnerChannelIReplyChannel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapInnerChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                         (object)null, "WrapInnerChannel", typeof(ssm::System.ServiceModel.Channels.IReplyChannel));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener Bind(ssm::System.ServiceModel.ICommunicationObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener, 
                                                                  ssm::System.ServiceModel.ICommunicationObject>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener Bind(ssm::System.ServiceModel.IDefaultCommunicationTimeouts target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener, 
                                                                  ssm::System.ServiceModel.IDefaultCommunicationTimeouts>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener Bind(ssm::System.ServiceModel.Channels.IChannelListener target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener, 
                                                                  ssm::System.ServiceModel.Channels.IChannelListener>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener Bind(ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingChannelListener, 
                                                                  ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.Channels.IChannelListener`1{System.ServiceModel.Channels.IReplyChannel})"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, ssm::System.ServiceModel.Channels.Binding, ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>> ConstructorBindingIChannelListenerOfIReplyChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), (object)null, 
                                                                                       ".ctor", typeof(ssm::System.ServiceModel.Channels.Binding), 
                                                                                                typeof(ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                          global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                     base.Instance, "OnAcceptChannel", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), base.Instance, 
                     "OnBeginAcceptChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), base.Instance, 
                     "OnBeginWaitForChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                          global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                     base.Instance, "OnEndAcceptChannel", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.IAsyncResult, bool>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                     base.Instance, "OnEndWaitForChannel", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnOpening"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), base.Instance, "OnOpening");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> OnWaitForChannelTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, global::System.TimeSpan, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                     base.Instance, "OnWaitForChannel", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.WrapInnerChannel(System.ServiceModel.Channels.IReplyChannel)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel> WrapInnerChannelIReplyChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapInnerChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener, 
                                                          ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener), 
                     base.Instance, "WrapInnerChannel", typeof(ssm::System.ServiceModel.Channels.IReplyChannel));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageEncodingReplyChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageEncodingReplyChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageEncodingReplyChannel()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageEncodingReplyChannel(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "BeginReceiveRequest", typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "BeginReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginTryReceiveRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "BeginTryReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWaitForRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "BeginWaitForRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndReceiveRequest(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext> EndReceiveRequestIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "EndReceiveRequest", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext, bool> EndTryReceiveRequestIAsyncResultRequestContextOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "EndTryReceiveRequest", typeof(global::System.IAsyncResult), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndWaitForRequest(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.IAsyncResult, bool> EndWaitForRequestIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "EndWaitForRequest", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.LocalAddress"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, ssm::System.ServiceModel.EndpointAddress> LocalAddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "get_LocalAddress");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.ReceiveRequest"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequest
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "ReceiveRequest");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.ReceiveRequest(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequestTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "ReceiveRequest", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext, bool> TryReceiveRequestTimeSpanRequestContextOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                         "TryReceiveRequest", typeof(global::System.TimeSpan), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.WaitForRequest(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, bool> WaitForRequestTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                         (object)null, "WaitForRequest", typeof(global::System.TimeSpan));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.AsyncCallback, 
                                                          object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "BeginReceiveRequest", typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "BeginReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginTryReceiveRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "BeginTryReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWaitForRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "BeginWaitForRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel Bind(ssm::System.ServiceModel.ICommunicationObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel, 
                                                                  ssm::System.ServiceModel.ICommunicationObject>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel Bind(ssm::System.ServiceModel.IDefaultCommunicationTimeouts target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel, 
                                                                  ssm::System.ServiceModel.IDefaultCommunicationTimeouts>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel Bind(ssm::System.ServiceModel.Channels.IChannel target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel, 
                                                                  ssm::System.ServiceModel.Channels.IChannel>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel Bind(ssm::System.ServiceModel.Channels.IReplyChannel target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingReplyChannel, 
                                                                  ssm::System.ServiceModel.Channels.IReplyChannel>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.Channels.IReplyChannel)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, ssm::System.ServiceModel.Channels.ChannelManagerBase, ssm::System.ServiceModel.Channels.IReplyChannel> ConstructorChannelManagerBaseIReplyChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), (object)null, 
                     ".ctor", typeof(ssm::System.ServiceModel.Channels.ChannelManagerBase), typeof(ssm::System.ServiceModel.Channels.IReplyChannel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndReceiveRequest(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext> EndReceiveRequestIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                          global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                     base.Instance, "EndReceiveRequest", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext, bool> EndTryReceiveRequestIAsyncResultRequestContextOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.IAsyncResult, 
                                                          ssm::System.ServiceModel.Channels.RequestContext, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "EndTryReceiveRequest", typeof(global::System.IAsyncResult), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.EndWaitForRequest(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> EndWaitForRequestIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.IAsyncResult, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                     base.Instance, "EndWaitForRequest", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.LocalAddress"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.EndpointAddress> LocalAddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, ssm::System.ServiceModel.EndpointAddress>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, "get_LocalAddress");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.ReceiveRequest"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequest
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                          ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, "ReceiveRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.ReceiveRequest(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequestTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, 
                                                          global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                     base.Instance, "ReceiveRequest", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext, bool> TryReceiveRequestTimeSpanRequestContextOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, 
                                                          ssm::System.ServiceModel.Channels.RequestContext, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), base.Instance, 
                     "TryReceiveRequest", typeof(global::System.TimeSpan), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.WaitForRequest(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> WaitForRequestTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel, global::System.TimeSpan, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                     base.Instance, "WaitForRequest", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel.WrapRequestContext(System.ServiceModel.Channels.RequestContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.RequestContext, ssm::System.ServiceModel.Channels.RequestContext> WrapRequestContextRequestContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapRequestContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel), 
                     "WrapRequestContext", typeof(ssm::System.ServiceModel.Channels.RequestContext));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageEncodingRequestContext")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageEncodingRequestContext
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageEncodingRequestContext()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageEncodingRequestContext(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Abort"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action Abort
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Abort", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, "Abort");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.AddHeaderToHttpRequestMessageAndHandleExceptions(System.Net.Http.HttpRequestMessage,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, string, string> AddHeaderToHttpRequestMessageAndHandleExceptionsHttpRequestMessageStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHeaderToHttpRequestMessageAndHandleExceptions", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                                                     "AddHeaderToHttpRequestMessageAndHandleExceptions", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.AddHeaderToHttpRequestMessage(System.Net.Http.HttpRequestMessage,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, string, string> AddHeaderToHttpRequestMessageHttpRequestMessageStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddHeaderToHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), "AddHeaderToHttpRequestMessage", 
                                                                                        typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string), typeof(string));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Abort"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext> Abort
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Abort", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "Abort");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), (object)null, 
                         "BeginReply", typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "BeginReply", typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.TimeSpan), 
                                                                                                                                                      typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext> Close
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Close", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "Close");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, global::System.TimeSpan> CloseTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Close", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "Close", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.EndReply(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, global::System.IAsyncResult> EndReplyIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "EndReply", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message> ReplyMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "Reply", typeof(ssm::System.ServiceModel.Channels.Message));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan> ReplyMessageTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), (object)null, 
                         "Reply", typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.RequestMessage"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message> RequestMessageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                         (object)null, "get_RequestMessage");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message, 
                                                                                                   global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, 
                     "BeginReply", typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, 
                                                          ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, "BeginReply", 
                     typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.TimeSpan), 
                     typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingRequestContext.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingRequestContext.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingRequestContext Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageEncodingRequestContext, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action Close
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Close", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, "Close");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> CloseTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Close", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, global::System.TimeSpan>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     base.Instance, "Close", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.ConfigureRequestMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, ssm::System.ServiceModel.Channels.Message> ConfigureRequestMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ConfigureRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     "ConfigureRequestMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.ConfigureResponseMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, ssm::System.ServiceModel.Channels.Message> ConfigureResponseMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ConfigureResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     "ConfigureResponseMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.#ctor(System.ServiceModel.Channels.RequestContext)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.RequestContext> ConstructorRequestContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     (object)null, ".ctor", typeof(ssm::System.ServiceModel.Channels.RequestContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.CopyHeadersToNameValueCollection(System.Net.Http.Headers.HttpHeaders,System.Collections.Specialized.NameValueCollection)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.HttpHeaders, global::System.Collections.Specialized.NameValueCollection> CopyHeadersToNameValueCollectionHttpHeadersNameValueCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyHeadersToNameValueCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     "CopyHeadersToNameValueCollection", 
                     typeof(mnh::System.Net.Http.Headers.HttpHeaders), typeof(global::System.Collections.Specialized.NameValueCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.EndReply(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndReplyIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     base.Instance, "EndReply", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message> ReplyMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message>(value)
                                              ), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), 
                     base.Instance, "Reply", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan> ReplyMessageTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Reply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, 
                                                          ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, 
                     "Reply", typeof(ssm::System.ServiceModel.Channels.Message), typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.RequestMessage"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message> RequestMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext, ssm::System.ServiceModel.Channels.Message>(value)
                                              ), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext), base.Instance, "get_RequestMessage");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MHttpMessageExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpMessageExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ExtractHttpRequestMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, mnh::System.Net.Http.HttpRequestMessage> ExtractHttpRequestMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExtractHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ExtractHttpRequestMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ExtractHttpResponseMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, mnh::System.Net.Http.HttpResponseMessage> ExtractHttpResponseMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExtractHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ExtractHttpResponseMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.GetHttpRequestMessageProperty(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, ssm::System.ServiceModel.Channels.HttpRequestMessageProperty> GetHttpRequestMessagePropertyMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestMessageProperty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "GetHttpRequestMessageProperty", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, mnh::System.Net.Http.HttpRequestMessage> ToHttpRequestMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ToHttpRequestMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, mnh::System.Net.Http.HttpResponseMessage> ToHttpResponseMessageMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ToHttpResponseMessage", typeof(ssm::System.ServiceModel.Channels.Message));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, ssm::System.ServiceModel.Channels.Message> ToMessageHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ToMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, ssm::System.ServiceModel.Channels.Message> ToMessageHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods), 
                     "ToMessage", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageFormatter(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.DeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, mnh::System.Net.Http.HttpRequestMessage, object[]> DeserializeRequestHttpRequestMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), (object)null, 
                         "DeserializeRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.SerializeReply(System.Object[],System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, object[], object, mnh::System.Net.Http.HttpResponseMessage> SerializeReplyObjectArrayObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), (object)null, 
                         "SerializeReply", typeof(object).MakeArrayType(), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, ssm::System.ServiceModel.Channels.Message, object[]> SystemServiceModelDispatcherIDispatchMessageFormatterDeserializeRequestMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), (object)null, 
                         "System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest", 
                         typeof(ssm::System.ServiceModel.Channels.Message), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, ssm::System.ServiceModel.Channels.MessageVersion, object[], object, ssm::System.ServiceModel.Channels.Message> SystemServiceModelDispatcherIDispatchMessageFormatterSerializeReplyMessageVersionObjectArrayObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), (object)null, 
                         "System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply", typeof(ssm::System.ServiceModel.Channels.MessageVersion), 
                         typeof(object).MakeArrayType(), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageFormatter Bind(ssm::System.ServiceModel.Dispatcher.IDispatchMessageFormatter target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageFormatter, 
                                                                  ssm::System.ServiceModel.Dispatcher.IDispatchMessageFormatter>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.DeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]> DeserializeRequestHttpRequestMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, mnh::System.Net.Http.HttpRequestMessage, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), base.Instance, 
                     "DeserializeRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.SerializeReply(System.Object[],System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object, mnh::System.Net.Http.HttpResponseMessage> SerializeReplyObjectArrayObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, object[], 
                                                          object, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), base.Instance, 
                     "SerializeReply", typeof(object).MakeArrayType(), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message, object[]> SystemServiceModelDispatcherIDispatchMessageFormatterDeserializeRequestMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, ssm::System.ServiceModel.Channels.Message, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), base.Instance, 
                     "System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest", 
                     typeof(ssm::System.ServiceModel.Channels.Message), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion, object[], object, ssm::System.ServiceModel.Channels.Message> SystemServiceModelDispatcherIDispatchMessageFormatterSerializeReplyMessageVersionObjectArrayObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter, ssm::System.ServiceModel.Channels.MessageVersion, 
                                                                                                   object[], object, ssm::System.ServiceModel.Channels.Message>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter), base.Instance, 
                     "System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply", typeof(ssm::System.ServiceModel.Channels.MessageVersion), 
                     typeof(object).MakeArrayType(), typeof(object));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageHandlerBindingElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageHandlerBindingElement
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageHandlerBindingElement()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageHandlerBindingElement(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void BuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), (object)null, 
                     "BuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void BuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> mole)
                where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), (object)null, 
                     "BuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void CanBuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), (object)null, 
                     "CanBuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void CanBuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
                where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(TChannel);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), (object)null, 
                     "CanBuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingElement> Clone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                         (object)null, "Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetProperty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void GetPropertyBindingContext<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, ssm::System.ServiceModel.Channels.BindingContext, T> mole)
                where T : class
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), (object)null, 
                     "GetProperty", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                         (object)null, "get_MessageHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                         (object)null, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerBindingElement.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void BuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, 
                 "BuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void BuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> mole)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, 
                 "BuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void CanBuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, bool>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, 
                 "CanBuildChannelFactory", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanBuildChannelListener", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void CanBuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> mole)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, bool>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, 
                 "CanBuildChannelListener", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElement> Clone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                          ssm::System.ServiceModel.Channels.BindingElement>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, "Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement> ConstructorHttpMessageHandlerBindingElement
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                     (object)null, ".ctor", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetProperty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void GetPropertyBindingContext<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, T> mole)
            where T : class
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                      ssm::System.ServiceModel.Channels.BindingContext, T>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, 
                 "GetProperty", gma, typeof(ssm::System.ServiceModel.Channels.BindingContext));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.IsChannelShapeSupported``1"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsChannelShapeSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
        public static void IsChannelShapeSupported<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(TChannel);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicStatic
                ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                 "IsChannelShapeSupported", gma);
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                          mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), base.Instance, "get_MessageHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement, 
                                                          mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement), 
                     base.Instance, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageHandlerChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageHandlerChannel
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageHandlerChannel()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageHandlerChannel(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.AsynchronousSendEnabled"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, bool> AsynchronousSendEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AsynchronousSendEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "get_AsynchronousSendEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "BeginReceiveRequest", typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "BeginReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginTryReceiveRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "BeginTryReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWaitForRequestTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "BeginWaitForRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.Cleanup"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel> Cleanup
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Cleanup", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "Cleanup");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndReceiveRequest(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext> EndReceiveRequestIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "EndReceiveRequest", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext, bool> EndTryReceiveRequestIAsyncResultRequestContextOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "EndTryReceiveRequest", typeof(global::System.IAsyncResult), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndWaitForRequest(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.IAsyncResult, bool> EndWaitForRequestIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "EndWaitForRequest", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.IncludeExceptionDetailInFaults"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, bool> IncludeExceptionDetailInFaultsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IncludeExceptionDetailInFaults", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "get_IncludeExceptionDetailInFaults");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.LocalAddress"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, ssm::System.ServiceModel.EndpointAddress> LocalAddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "get_LocalAddress");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnAbort"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel> OnAbort
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAbort", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "OnAbort");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnClosed"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel> OnClosed
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnClosed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "OnClosed");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnOpened"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel> OnOpened
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpened", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "OnOpened");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequest
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "ReceiveRequest");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequestTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "ReceiveRequest", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext, bool> TryReceiveRequestTimeSpanRequestContextOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), (object)null, 
                         "TryReceiveRequest", typeof(global::System.TimeSpan), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.WaitForRequest(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, bool> WaitForRequestTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                         (object)null, "WaitForRequest", typeof(global::System.TimeSpan));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.AsynchronousSendEnabled"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> AsynchronousSendEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AsynchronousSendEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "get_AsynchronousSendEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.AsyncCallback, 
                                                          object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "BeginReceiveRequest", typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReceiveRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "BeginReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginTryReceiveRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "BeginTryReceiveRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWaitForRequestTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "BeginWaitForRequest", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel Bind(ssm::System.ServiceModel.ICommunicationObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel, ssm::System.ServiceModel.ICommunicationObject>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel Bind(ssm::System.ServiceModel.IDefaultCommunicationTimeouts target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel, 
                                                                  ssm::System.ServiceModel.IDefaultCommunicationTimeouts>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel Bind(ssm::System.ServiceModel.Channels.IChannel target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel, ssm::System.ServiceModel.Channels.IChannel>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel Bind(ssm::System.ServiceModel.Channels.IReplyChannel target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannel, ssm::System.ServiceModel.Channels.IReplyChannel>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.Cleanup"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action Cleanup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Cleanup", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "Cleanup");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.Channels.IReplyChannel,Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory,System.Boolean,System.Boolean)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, ssm::System.ServiceModel.Channels.ChannelManagerBase, ssm::System.ServiceModel.Channels.IReplyChannel, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, bool, bool> ConstructorChannelManagerBaseIReplyChannelHttpMessageHandlerFactoryBooleanBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                     (object)null, ".ctor", 
                     typeof(ssm::System.ServiceModel.Channels.ChannelManagerBase), typeof(ssm::System.ServiceModel.Channels.IReplyChannel), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), typeof(bool), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndReceiveRequest(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext> EndReceiveRequestIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                                                                                                 global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                                                                                       base.Instance, "EndReceiveRequest", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.RequestContext, bool> EndTryReceiveRequestIAsyncResultRequestContextOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndTryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.IAsyncResult, 
                                                          ssm::System.ServiceModel.Channels.RequestContext, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "EndTryReceiveRequest", typeof(global::System.IAsyncResult), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndWaitForRequest(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> EndWaitForRequestIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.IAsyncResult, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                     base.Instance, "EndWaitForRequest", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.IncludeExceptionDetailInFaults"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IncludeExceptionDetailInFaultsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IncludeExceptionDetailInFaults", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "get_IncludeExceptionDetailInFaults");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.LocalAddress"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.EndpointAddress> LocalAddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, ssm::System.ServiceModel.EndpointAddress>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "get_LocalAddress");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnAbort"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnAbort
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAbort", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "OnAbort");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnClosed"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosed
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnClosed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "OnClosed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnOpened"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpened
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpened", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "OnOpened");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequest
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, "ReceiveRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext> ReceiveRequestTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, 
                                                                                                                                                 global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                                                                                       base.Instance, "ReceiveRequest", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.RequestPropertyKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> RequestPropertyKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestPropertyKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), "get_RequestPropertyKey");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.TimeSpan, ssm::System.ServiceModel.Channels.RequestContext, bool> TryReceiveRequestTimeSpanRequestContextOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, 
                                                          ssm::System.ServiceModel.Channels.RequestContext, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), base.Instance, 
                     "TryReceiveRequest", typeof(global::System.TimeSpan), typeof(ssm::System.ServiceModel.Channels.RequestContext).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.WaitForRequest(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> WaitForRequestTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WaitForRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel, global::System.TimeSpan, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel), 
                     base.Instance, "WaitForRequest", typeof(global::System.TimeSpan));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageHandlerChannelListener")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpMessageHandlerChannelListener
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageHandlerChannelListener()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageHandlerChannelListener(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnAcceptChannel(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "OnAcceptChannel", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), (object)null, 
                         "OnBeginAcceptChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), (object)null, 
                         "OnBeginWaitForChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "OnEndAcceptChannel", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "OnEndWaitForChannel", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnOpening"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener> OnOpening
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "OnOpening");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnWaitForChannel(System.TimeSpan)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, bool> OnWaitForChannelTimeSpan
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "OnWaitForChannel", typeof(global::System.TimeSpan));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.WrapInnerChannel(System.ServiceModel.Channels.IReplyChannel)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel> WrapInnerChannelIReplyChannel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapInnerChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                         (object)null, "WrapInnerChannel", typeof(ssm::System.ServiceModel.Channels.IReplyChannel));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener Bind(ssm::System.ServiceModel.ICommunicationObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener, 
                                                                  ssm::System.ServiceModel.ICommunicationObject>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener Bind(ssm::System.ServiceModel.IDefaultCommunicationTimeouts target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener, 
                                                                  ssm::System.ServiceModel.IDefaultCommunicationTimeouts>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener Bind(ssm::System.ServiceModel.Channels.IChannelListener target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener, 
                                                                  ssm::System.ServiceModel.Channels.IChannelListener>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener Bind(ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                                  global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerChannelListener, 
                                                                  ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.Channels.IChannelListener`1{System.ServiceModel.Channels.IReplyChannel},Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory,System.Boolean,System.Boolean)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, ssm::System.ServiceModel.Channels.Binding, ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, bool, bool> ConstructorBindingIChannelListenerOfIReplyChannelHttpMessageHandlerFactoryBooleanBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     (object)null, ".ctor", typeof(ssm::System.ServiceModel.Channels.Binding), 
                                                                                                                                                  typeof(ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel>), 
                                                                                                                                                  typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), typeof(bool), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                          global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     base.Instance, "OnAcceptChannel", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), base.Instance, 
                     "OnBeginAcceptChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnBeginWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), base.Instance, 
                     "OnBeginWaitForChannel", typeof(global::System.TimeSpan), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndAcceptChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                          global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     base.Instance, "OnEndAcceptChannel", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnEndWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.IAsyncResult, bool>(value)
                                              ), typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     base.Instance, "OnEndWaitForChannel", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnOpening"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), base.Instance, "OnOpening");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> OnWaitForChannelTimeSpan
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWaitForChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, global::System.TimeSpan, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     base.Instance, "OnWaitForChannel", typeof(global::System.TimeSpan));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.WrapInnerChannel(System.ServiceModel.Channels.IReplyChannel)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel> WrapInnerChannelIReplyChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapInnerChannel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener, 
                                                          ssm::System.ServiceModel.Channels.IReplyChannel, ssm::System.ServiceModel.Channels.IReplyChannel>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener), 
                     base.Instance, "WrapInnerChannel", typeof(ssm::System.ServiceModel.Channels.IReplyChannel));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageHandlerFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageHandlerFactory
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpMessageHandlerFactory()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageHandlerFactory(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.Create(System.Net.Http.HttpMessageChannel)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> CreateHttpMessageChannel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Create", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                         (object)null, "Create", typeof(mnh::System.Net.Http.HttpMessageChannel));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.HttpMessageHandlers"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, global::System.Collections.ObjectModel.ReadOnlyCollection<global::System.Type>> HttpMessageHandlersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpMessageHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                         (object)null, "get_HttpMessageHandlers");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.OnCreate(System.Net.Http.HttpMessageChannel)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> OnCreateHttpMessageChannel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                         (object)null, "OnCreate", typeof(mnh::System.Net.Http.HttpMessageChannel));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Channels.Moles.MHttpMessageHandlerFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.#ctor(System.Type[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, global::System.Type[]> ConstructorTypeArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                     (object)null, ".ctor", typeof(global::System.Type).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.Create(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> CreateHttpMessageChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Create", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, 
                                                                                                                                                 mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                                                                                       base.Instance, "Create", typeof(mnh::System.Net.Http.HttpMessageChannel));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.HttpMessageHandlers"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.ReadOnlyCollection<global::System.Type>> HttpMessageHandlersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpMessageHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, 
                                                                                                                                                 global::System.Collections.ObjectModel.ReadOnlyCollection<global::System.Type>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), base.Instance, "get_HttpMessageHandlers");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.OnCreate(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> OnCreateHttpMessageChannel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory, 
                                                                                                                                                    mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory), 
                                                                                          base.Instance, "OnCreate", typeof(mnh::System.Net.Http.HttpMessageChannel));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpMessageInspector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpMessageInspector
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpMessageInspector(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.AfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, object> AfterReceiveRequestHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AfterReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector, mnh::System.Net.Http.HttpRequestMessage, object>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), 
                     base.Instance, "AfterReceiveRequest", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.AfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector, mnh::System.Net.Http.HttpRequestMessage, object> AfterReceiveRequestHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AfterReceiveRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), 
                         (object)null, "AfterReceiveRequest", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.BeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector, mnh::System.Net.Http.HttpResponseMessage, object> BeforeSendReplyHttpResponseMessageObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeforeSendReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), (object)null, 
                         "BeforeSendReply", typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(object));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.BeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, object> BeforeSendReplyHttpResponseMessageObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeforeSendReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector, mnh::System.Net.Http.HttpResponseMessage, object>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), base.Instance, 
                     "BeforeSendReply", typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageInspector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageInspector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageInspector Bind(ssm::System.ServiceModel.Dispatcher.IDispatchMessageInspector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpMessageInspector, 
                                                                  ssm::System.ServiceModel.Dispatcher.IDispatchMessageInspector>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector), (object)null, ".ctor");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationDescription")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationDescription
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpOperationDescription()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationDescription(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Attributes"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<global::System.Attribute>> AttributesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Attributes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_Attributes");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Behaviors"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.Collections.Generic.KeyedByTypeCollection<ssm::System.ServiceModel.Description.IOperationBehavior>> BehaviorsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Behaviors", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_Behaviors");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.DeclaringContract"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.ServiceModel.Description.ContractDescription> DeclaringContractGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DeclaringContract", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_DeclaringContract");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.DeclaringContract"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.ServiceModel.Description.ContractDescription> DeclaringContractSetContractDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DeclaringContract", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "set_DeclaringContract", typeof(ssm::System.ServiceModel.Description.ContractDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.InputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> InputParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_InputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.IsSynchronized"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, bool> IsSynchronizedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronized", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_IsSynchronized");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.KnownTypes"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<global::System.Type>> KnownTypesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_KnownTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_KnownTypes");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> NameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "set_Name", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.OutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OutputParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_OutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ReturnValue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ReturnValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReturnValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "get_ReturnValue");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ReturnValue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ReturnValueSetHttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReturnValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "set_ReturnValue", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ToOperationDescription"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.ServiceModel.Description.OperationDescription> ToOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                         (object)null, "ToOperationDescription");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Attributes"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.Collection<global::System.Attribute>> AttributesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Attributes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 global::System.Collections.ObjectModel.Collection<global::System.Attribute>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_Attributes");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationDescription.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationDescription.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Behaviors"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.Collections.Generic.KeyedByTypeCollection<ssm::System.ServiceModel.Description.IOperationBehavior>> BehaviorsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Behaviors", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 ssm::System.Collections.Generic.KeyedByTypeCollection<ssm::System.ServiceModel.Description.IOperationBehavior>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_Behaviors");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.ServiceModel.Description.OperationDescription> ConstructorOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                     (object)null, ".ctor", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string, ssm::System.ServiceModel.Description.ContractDescription> ConstructorStringContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), (object)null, 
                     ".ctor", typeof(string), typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.CreateMessageDescriptionIfNecessary(System.ServiceModel.Description.OperationDescription,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription, int> CreateMessageDescriptionIfNecessaryOperationDescriptionInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMessageDescriptionIfNecessary", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                     "CreateMessageDescriptionIfNecessary", typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.DeclaringContract"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ContractDescription> DeclaringContractGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DeclaringContract", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 ssm::System.ServiceModel.Description.ContractDescription>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_DeclaringContract");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.DeclaringContract"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ContractDescription> DeclaringContractSetContractDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DeclaringContract", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 ssm::System.ServiceModel.Description.ContractDescription>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                                                                                       base.Instance, "set_DeclaringContract", typeof(ssm::System.ServiceModel.Description.ContractDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.EnsureWrapperNamespace(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Description.MessageDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Description.MessageDescription> EnsureWrapperNamespaceOperationDescriptionMessageDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureWrapperNamespace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                     "EnsureWrapperNamespace", 
                     typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Description.MessageDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.InputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> InputParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_InputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.IsSynchronized"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsSynchronizedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronized", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_IsSynchronized");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.KnownTypes"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.Collection<global::System.Type>> KnownTypesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_KnownTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 global::System.Collections.ObjectModel.Collection<global::System.Type>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_KnownTypes");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "set_Name", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.OutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OutputParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_OutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ReturnValue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ReturnValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ReturnValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "get_ReturnValue");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ReturnValue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ReturnValueSetHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ReturnValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                                                                                       base.Instance, "set_ReturnValue", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ToOperationDescription"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.OperationDescription> ToOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                                                                                                 ssm::System.ServiceModel.Description.OperationDescription>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), base.Instance, "ToOperationDescription");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationDescriptionExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MHttpOperationDescriptionExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpOperationDescriptionExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationDescriptionExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationDescriptionExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.EnsureOneOneWebAttribute(System.ServiceModel.Web.WebGetAttribute,System.ServiceModel.Web.WebInvokeAttribute,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssmw::System.ServiceModel.Web.WebGetAttribute, ssmw::System.ServiceModel.Web.WebInvokeAttribute, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> EnsureOneOneWebAttributeWebGetAttributeWebInvokeAttributeHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnsureOneOneWebAttribute", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), "EnsureOneOneWebAttribute", 
                                                                                        typeof(ssmw::System.ServiceModel.Web.WebGetAttribute), typeof(ssmw::System.ServiceModel.Web.WebInvokeAttribute), 
                                                                                                                                               typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetDescription(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> GetDescriptionHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetDescription", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetHttpMethod(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mnh::System.Net.Http.HttpMethod> GetHttpMethodHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetHttpMethod", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetUriTemplate(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, ssm::System.UriTemplate> GetUriTemplateHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetUriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetUriTemplate", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetUriTemplateStringOrDefault(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> GetUriTemplateStringOrDefaultHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetUriTemplateStringOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetUriTemplateStringOrDefault", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetWebMethod(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> GetWebMethodHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetWebMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetWebMethod", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetWebUriTemplate(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> GetWebUriTemplateHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetWebUriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "GetWebUriTemplate", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.MakeDefaultGetUriTemplateString(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string> MakeDefaultGetUriTemplateStringHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MakeDefaultGetUriTemplateString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "MakeDefaultGetUriTemplateString", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.ToHttpOperationDescription(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.OperationDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> ToHttpOperationDescriptionOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToHttpOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods), 
                     "ToHttpOperationDescription", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.GetValidatedHttpParameters(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpParameter},System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>, string, global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> GetValidatedHttpParametersIEnumerableOfHttpParameterString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValidatedHttpParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), (object)null, 
                         "GetValidatedHttpParameters", 
                         typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>), 
                         typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]> HandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "Handle", typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.InputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> InputParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "get_InputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OperationName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string> OperationNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "get_OperationName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OperationName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string> OperationNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "set_OperationName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OutputParametersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "get_OutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ValidateAndConvertInput(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]> ValidateAndConvertInputObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateAndConvertInput", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "ValidateAndConvertInput", typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ValidateOutput(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]> ValidateOutputObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateOutput", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                         (object)null, "ValidateOutput", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.GetValidatedHttpParameters(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpParameter},System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>, string, global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> GetValidatedHttpParametersIEnumerableOfHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValidatedHttpParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>, string, 
                                                                                                                                                                                                                                                                      global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "GetValidatedHttpParameters", 
                                                                                                                                                                                                                                                                                                                                                                                                              typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>), 
                                                                                                                                                                                                                                                                                                                                                                                                              typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> HandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "Handle", typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.InputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> InputParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, 
                                                                                                                                                 global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "get_InputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OperationName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> OperationNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "get_OperationName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OperationName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> OperationNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "set_OperationName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OutputParametersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, 
                                                                                                                                                 global::System.Collections.ObjectModel.ReadOnlyCollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "get_OutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ValidateAndConvertInput(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> ValidateAndConvertInputObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateAndConvertInput", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                     base.Instance, "ValidateAndConvertInput", typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ValidateOutput(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> ValidateOutputObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateOutput", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                     base.Instance, "ValidateOutput", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`2")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler01<T,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler01(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler01<T, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler01<T, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`3")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler02<T1,T2,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler02(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler02<T1, T2, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler02<T1, T2, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`4")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler03<T1,T2,T3,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler03(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler03<T1, T2, T3, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler03<T1, T2, T3, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`5")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler04<T1,T2,T3,T4,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler04(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler04<T1, T2, T3, T4, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler04<T1, T2, T3, T4, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`6")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler05<T1,T2,T3,T4,T5,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler05(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler05<T1, T2, T3, T4, T5, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler05<T1, T2, T3, T4, T5, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>, object[], object[]>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`7")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler06<T1,T2,T3,T4,T5,T6,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler06(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler06<T1, T2, T3, T4, T5, T6, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler06<T1, T2, T3, T4, T5, T6, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`8")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler07<T1,T2,T3,T4,T5,T6,T7,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler07(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler07<T1, T2, T3, T4, T5, T6, T7, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler07<T1, T2, T3, T4, T5, T6, T7, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>, 
                                                          object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`9")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler08<T1,T2,T3,T4,T5,T6,T7,T8,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler08(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler08<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler08<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, 
                                                          object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`10")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler09<T1,T2,T3,T4,T5,T6,T7,T8,T9,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler09(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler09<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler09<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, 
                                                          object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`11")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler10<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler10(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>.Behavior
              = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>.Behavior
              = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, 
                                                                                                   global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, 
                                                                                                   global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, 
                                                                                                   object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`12")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler11<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler11(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                                                                                              (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                                                                                              (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                              typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                                                                                              (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>
              .Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationHandler11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>
              .Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                     value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                                                                                          (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`13")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler12<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler12(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof
                                                                                                                                  (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                  ), (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof
                                                                                                                                  (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                  ), (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof
                                                                                                                                  (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                  ), (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof
                                                                              (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                              ), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof
                                                                                                                              (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                              ), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), typeof
                                                                                                                                                                                                                                     (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                                                                                                                     ), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), typeof
                                                                                                                                                                                                                                     (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                                                                                                                     ), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, object[], object[]>(value)), typeof
                                                                                                                                                                                                                                  (mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
                                                                                                                                                                                                                                  ), base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`14")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler13<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler13(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                         .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`15")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler14<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler14(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                         .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`16")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler15<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler15(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                         .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandler`17")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandler16<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TOutput>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandler16(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                        .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                      .MHttpOperationHandler16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                         .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                     base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                     base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher
                                                                                                              .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher
                                    .HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationHandlerFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationHandlerFactory
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpOperationHandlerFactory()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationHandlerFactory(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> CreateRequestHandlersServiceEndpointHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateRequestHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), (object)null, 
                         "CreateRequestHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                  typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> CreateResponseHandlersServiceEndpointHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateResponseHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), (object)null, 
                         "CreateResponseHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                   typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                         (object)null, "get_Formatters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                         (object)null, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateRequestHandlersServiceEndpointHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateRequestHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), (object)null, 
                         "OnCreateRequestHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                    typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateResponseHandlersServiceEndpointHttpOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateResponseHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), (object)null, 
                         "OnCreateResponseHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationHandlerFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpOperationHandlerFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), (object)null, 
                                                                                                                                             ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> CreateRequestHandlersServiceEndpointHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateRequestHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                          global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), base.Instance, 
                     "CreateRequestHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                              typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> CreateResponseHandlersServiceEndpointHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateResponseHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                          global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), base.Instance, 
                     "CreateResponseHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                               typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.DetermineXmlFormat(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, bool> DetermineXmlFormatHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DetermineXmlFormat", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "DetermineXmlFormat", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), base.Instance, "get_Formatters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     base.Instance, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.GetRequestContentHandler(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription,System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, string[], mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> GetRequestContentHandlerHttpOperationDescriptionStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRequestContentHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "GetRequestContentHandler", 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.IsPossibleRequestContentParameter(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> IsPossibleRequestContentParameterHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsPossibleRequestContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "IsPossibleRequestContentParameter", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.IsPossibleResponseContentParameter(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> IsPossibleResponseContentParameterHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsPossibleResponseContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "IsPossibleResponseContentParameter", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.IsValidContentType(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> IsValidContentTypeHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsValidContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "IsValidContentType", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateRequestHandlersServiceEndpointHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateRequestHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                          global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), base.Instance, 
                     "OnCreateRequestHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateResponseHandlersServiceEndpointHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCreateResponseHandlers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory, 
                                                          ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                          global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), base.Instance, 
                     "OnCreateResponseHandlers", typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), 
                                                 typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.SetSerializerForJsonFormatter(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription,System.Type,System.String,Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Type, string, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> SetSerializerForJsonFormatterHttpOperationDescriptionTypeStringMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializerForJsonFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), "SetSerializerForJsonFormatter", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), typeof(global::System.Type), 
                                                                                        typeof(string), typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.SetSerializerForXmlFormatter(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription,System.Type,Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Type, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> SetSerializerForXmlFormatterHttpOperationDescriptionTypeMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializerForXmlFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), "SetSerializerForXmlFormatter", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                                                                                        typeof(global::System.Type), typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.SetXmlAndJsonSerializers(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription,Microsoft.ApplicationServer.Http.Description.HttpParameter,Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> SetXmlAndJsonSerializersHttpOperationDescriptionHttpParameterMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetXmlAndJsonSerializers", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), "SetXmlAndJsonSerializers", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription), 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.ThrowExceptionForMulitpleRequestContentParameters(System.Collections.Generic.List`1{Microsoft.ApplicationServer.Http.Description.HttpParameter},System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.List<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>, string> ThrowExceptionForMulitpleRequestContentParametersListOfHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowExceptionForMulitpleRequestContentParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "ThrowExceptionForMulitpleRequestContentParameters", 
                     typeof(global::System.Collections.Generic.List<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.ThrowExceptionForMulitpleResponseContentParameters(System.Collections.Generic.List`1{Microsoft.ApplicationServer.Http.Description.HttpParameter},Microsoft.ApplicationServer.Http.Description.HttpParameter,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.List<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> ThrowExceptionForMulitpleResponseContentParametersListOfHttpParameterHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowExceptionForMulitpleResponseContentParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                                                     "ThrowExceptionForMulitpleResponseContentParameters", 
                     typeof(global::System.Collections.Generic.List<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.ThrowExceptionForUnknownRequestContentParameter(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ThrowExceptionForUnknownRequestContentParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowExceptionForUnknownRequestContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "ThrowExceptionForUnknownRequestContentParameter", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.ValidateRequestContentParameter(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> ValidateRequestContentParameterHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateRequestContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), 
                     "ValidateRequestContentParameter", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.ValidateResponseContentParameter(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.Boolean,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool, string> ValidateResponseContentParameterHttpParameterBooleanString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateResponseContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory), "ValidateResponseContentParameter", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(bool), typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpOperationSelector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpOperationSelector
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpOperationSelector(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.SelectOperation(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector, mnh::System.Net.Http.HttpRequestMessage, string> SelectOperationHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), 
                         (object)null, "SelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.RefFunc<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector, ssm::System.ServiceModel.Channels.Message, string> SystemServiceModelDispatcherIDispatchOperationSelectorSelectOperationMessageRef
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), 
                         (object)null, "System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation", 
                                       typeof(ssm::System.ServiceModel.Channels.Message).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationSelector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationSelector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationSelector Bind(ssm::System.ServiceModel.Dispatcher.IDispatchOperationSelector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpOperationSelector, 
                                                                  ssm::System.ServiceModel.Dispatcher.IDispatchOperationSelector>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.SelectOperation(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string> SelectOperationHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector, mnh::System.Net.Http.HttpRequestMessage, string>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), 
                     base.Instance, "SelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.RefFunc<ssm::System.ServiceModel.Channels.Message, string> SystemServiceModelDispatcherIDispatchOperationSelectorSelectOperationMessageRef
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector, ssm::System.ServiceModel.Channels.Message, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector), 
                     base.Instance, "System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation", 
                                    typeof(ssm::System.ServiceModel.Channels.Message).MakeByRefType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpParameter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpParameter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpParameter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpParameter(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.Clone"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> Clone
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), (object)null, "Clone");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter``1"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAssignableFromParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void IsAssignableFromParameter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                     (object)null, "IsAssignableFromParameter", gma);
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Type, bool> IsAssignableFromParameterType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAssignableFromParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "IsAssignableFromParameter", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsContentParameter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> IsContentParameterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "get_IsContentParameter");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsContentParameter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> IsContentParameterSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "set_IsContentParameter", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.MessagePartDescription"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, ssm::System.ServiceModel.Description.MessagePartDescription> MessagePartDescriptionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessagePartDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "get_MessagePartDescription");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Namespace"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> NamespaceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Namespace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), (object)null, "get_Namespace");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.SynchronizeToMessagePartDescription(System.ServiceModel.Description.MessageDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, ssm::System.ServiceModel.Description.MessageDescription> SynchronizeToMessagePartDescriptionMessageDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SynchronizeToMessagePartDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "SynchronizeToMessagePartDescription", typeof(ssm::System.ServiceModel.Description.MessageDescription));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Type"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Type> TypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), (object)null, "get_Type");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ValueConverter"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter> ValueConverterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ValueConverter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                         (object)null, "get_ValueConverter");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> Clone
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clone", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "Clone");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.#ctor(System.ServiceModel.Description.MessagePartDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, ssm::System.ServiceModel.Description.MessagePartDescription> ConstructorMessagePartDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                     (object)null, ".ctor", typeof(ssm::System.ServiceModel.Description.MessagePartDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.#ctor(System.String,System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string, global::System.Type> ConstructorStringType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter``1"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAssignableFromParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void IsAssignableFromParameter<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool>(mole)
                                                                                            ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "IsAssignableFromParameter", gma);
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsAssignableFromParameterType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAssignableFromParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                     base.Instance, "IsAssignableFromParameter", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsContentParameter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsContentParameterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool>(value)
                                                                                                                ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_IsContentParameter");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsContentParameter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> IsContentParameterSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_IsContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool>(value)
                                                                                                                ), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "set_IsContentParameter", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.MessagePartDescription"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescription> MessagePartDescriptionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessagePartDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, 
                                                                                                                                                    ssm::System.ServiceModel.Description.MessagePartDescription>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_MessagePartDescription");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Namespace"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NamespaceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Namespace", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_Namespace");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestContent"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> RequestContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_RequestContent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestHeaders"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> RequestHeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_RequestHeaders");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> RequestMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_RequestMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMethod"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> RequestMethodGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_RequestMethod");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestUri"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> RequestUriGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_RequestUri");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseContent"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ResponseContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ResponseContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_ResponseContent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseHeaders"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ResponseHeadersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ResponseHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_ResponseHeaders");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ResponseMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_ResponseMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseStatusCode"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ResponseStatusCodeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ResponseStatusCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), "get_ResponseStatusCode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.SynchronizeToMessagePartDescription(System.ServiceModel.Description.MessageDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.MessageDescription> SynchronizeToMessagePartDescriptionMessageDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SynchronizeToMessagePartDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, ssm::System.ServiceModel.Description.MessageDescription>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                     base.Instance, "SynchronizeToMessagePartDescription", typeof(ssm::System.ServiceModel.Description.MessageDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Type"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> TypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_Type");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ValueConverter"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter> ValueConverterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ValueConverter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), base.Instance, "get_ValueConverter");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpParameterCollection")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpParameterCollection
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpParameterCollection()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpParameterCollection(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Add(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> AddHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                       base.Instance, "Add", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Add(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> AddHttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Add", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "Add", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Clear"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection> Clear
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clear", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "Clear");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Contains(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> ContainsHttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Contains", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "Contains", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.CopyTo(Microsoft.ApplicationServer.Http.Description.HttpParameter[],System.Int32)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter[], int> CopyToHttpParameterArrayInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), (object)null, 
                         "CopyTo", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter).MakeArrayType(), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Count"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int> CountGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Count", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_Count");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetEnumerator"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, global::System.Collections.Generic.IEnumerator<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> GetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "GetEnumerator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetOrCreateMessagePartDescriptionCollection"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, ssm::System.ServiceModel.Description.MessagePartDescriptionCollection> GetOrCreateMessagePartDescriptionCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetOrCreateMessagePartDescriptionCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "GetOrCreateMessagePartDescriptionCollection");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IndexOf(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, int> IndexOfHttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IndexOf", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "IndexOf", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Insert(System.Int32,Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> InsertInt32HttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Insert", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), (object)null, 
                         "Insert", typeof(int), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsReadOnly"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, bool> IsReadOnlyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsReadOnly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_IsReadOnly");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsSynchronized"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, bool> IsSynchronizedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronized", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_IsSynchronized");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Item(System.Int32)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ItemGetInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Item", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_Item", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Item(System.Int32)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ItemSetInt32HttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Item", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), (object)null, 
                         "set_Item", typeof(int), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessageDescription"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, ssm::System.ServiceModel.Description.MessageDescription> MessageDescriptionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_MessageDescription");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, ssm::System.ServiceModel.Description.MessagePartDescriptionCollection> MessagePartDescriptionCollectionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessagePartDescriptionCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "get_MessagePartDescriptionCollection");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.RemoveAt(System.Int32)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int> RemoveAtInt32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveAt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "RemoveAt", typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Remove(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> RemoveHttpParameter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Remove", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "Remove", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.System.Collections.IEnumerable.GetEnumerator"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                         (object)null, "System.Collections.IEnumerable.GetEnumerator");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection Bind(global::System.Collections.Generic.ICollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection, 
                                                                  global::System.Collections.Generic.ICollection<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection Bind(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection, 
                                                                  global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection Bind(global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterCollection, 
                                                                  global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Clear"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action Clear
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Clear", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "Clear");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpParameter})"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> ConstructorIEnumerableOfHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), (object)null, 
                                                                                                                                         ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor(System.ServiceModel.Description.OperationDescription,System.Boolean)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, ssm::System.ServiceModel.Description.OperationDescription, bool> ConstructorOperationDescriptionBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), (object)null, 
                     ".ctor", typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Contains(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> ContainsHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Contains", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                       base.Instance, "Contains", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.CopyTo(Microsoft.ApplicationServer.Http.Description.HttpParameter[],System.Int32)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter[], int> CopyToHttpParameterArrayInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CopyTo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter[], int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, 
                                                                                       "CopyTo", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter).MakeArrayType(), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Count"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> CountGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Count", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "get_Count");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetEnumerator"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerator<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> GetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 global::System.Collections.Generic.IEnumerator<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetOrCreateMessagePartDescriptionCollection"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescriptionCollection> GetOrCreateMessagePartDescriptionCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetOrCreateMessagePartDescriptionCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                    ssm::System.ServiceModel.Description.MessagePartDescriptionCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                          base.Instance, "GetOrCreateMessagePartDescriptionCollection");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IndexOf(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, int> IndexOfHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IndexOf", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                       base.Instance, "IndexOf", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Insert(System.Int32,Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> InsertInt32HttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Insert", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, 
                                                                                       "Insert", typeof(int), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsReadOnly"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsReadOnlyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsReadOnly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "get_IsReadOnly");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsSynchronized"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsSynchronizedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronized", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "get_IsSynchronized");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Item(System.Int32)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ItemGetInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Item", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "get_Item", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Item(System.Int32)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ItemSetInt32HttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Item", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 int, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, 
                                                                                       "set_Item", typeof(int), typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessageDescription"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessageDescription> MessageDescriptionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                    ssm::System.ServiceModel.Description.MessageDescription>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "get_MessageDescription");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescriptionCollection> MessagePartDescriptionCollectionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessagePartDescriptionCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                    ssm::System.ServiceModel.Description.MessagePartDescriptionCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                          base.Instance, "get_MessagePartDescriptionCollection");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.RemoveAt(System.Int32)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int> RemoveAtInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveAt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, int>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), base.Instance, "RemoveAt", typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Remove(Microsoft.ApplicationServer.Http.Description.HttpParameter)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool> RemoveHttpParameter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Remove", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                                                                                       base.Instance, "Remove", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.System.Collections.IEnumerable.GetEnumerator"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerator> SystemCollectionsIEnumerableGetEnumerator
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.Collections.IEnumerable.GetEnumerator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection, global::System.Collections.IEnumerator>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                     base.Instance, "System.Collections.IEnumerable.GetEnumerator");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.ToArray(System.ServiceModel.Description.MessagePartDescriptionCollection)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescriptionCollection, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter[]> ToArrayMessagePartDescriptionCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                     "ToArray", typeof(ssm::System.ServiceModel.Description.MessagePartDescriptionCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.&lt;ToArray&gt;b__0(System.ServiceModel.Description.MessagePartDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> _ToArrayb__0MessagePartDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ToArray>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection), 
                     "<ToArray>b__0", typeof(ssm::System.ServiceModel.Description.MessagePartDescription));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpParameterExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MHttpParameterExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpParameterExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods.ToHttpParameter(System.ServiceModel.Description.MessagePartDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.MessagePartDescription, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> ToHttpParameterMessagePartDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToHttpParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods), 
                     "ToHttpParameter", typeof(ssm::System.ServiceModel.Description.MessagePartDescription));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpParameterValueConverter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpParameterValueConverter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpParameterValueConverter(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromString"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, bool> CanConvertFromStringGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                         (object)null, "get_CanConvertFromString");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromString"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, bool> CanConvertFromStringSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CanConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                         (object)null, "set_CanConvertFromString", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.ConvertFromString(System.String)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, string, object> ConvertFromStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                         (object)null, "ConvertFromString", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Type"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, global::System.Type> TypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                         (object)null, "get_Type");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Type"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, global::System.Type> TypeSetType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                         (object)null, "set_Type", typeof(global::System.Type));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterValueConverter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Description.Moles.MHttpParameterValueConverter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromString"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanConvertFromStringGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), base.Instance, "get_CanConvertFromString");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromString"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> CanConvertFromStringSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CanConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                     base.Instance, "set_CanConvertFromString", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.#ctor(System.Type)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, global::System.Type> ConstructorType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                     (object)null, ".ctor", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.ConvertFromString(System.String)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> ConvertFromStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ConvertFromString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, string, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                     base.Instance, "ConvertFromString", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.GetValueConverter(System.Type)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter> GetValueConverterType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetValueConverter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                     "GetValueConverter", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Type"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> TypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), base.Instance, "get_Type");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Type"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type> TypeSetType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter), 
                     base.Instance, "set_Type", typeof(global::System.Type));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpRequestMessage`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<>))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpRequestMessage`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpRequestMessage<T>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpRequestMessage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpRequestMessage(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), (object)null, "get_Content");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentSetObjectContentOfT
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), 
                         (object)null, "set_Content", typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpRequestMessage<T>.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpRequestMessage<T>.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpRequestMessage<T> Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpRequestMessage<T>, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.#ctor(`1)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, T> ConstructorT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), (object)null, ".ctor", typeof(T));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.#ctor(`1,System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, T, mnh::System.Net.Http.HttpMethod, global::System.Uri, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTHttpMethodUriIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), (object)null, ".ctor", 
                     typeof(T), typeof(mnh::System.Net.Http.HttpMethod), typeof(global::System.Uri), 
                                                                         typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.#ctor(`1,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, T, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), (object)null, 
                     ".ctor", typeof(T), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), base.Instance, "get_Content");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpRequestMessage`1.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentSetObjectContentOfT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>), 
                     base.Instance, "set_Content", typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpResponseErrorHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MHttpResponseErrorHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpResponseErrorHandler()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpResponseErrorHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.CreateHtmlResponse(System.Exception)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> CreateHtmlResponseException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateHtmlResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                         (object)null, "CreateHtmlResponse", typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.OnHandleError(System.Exception)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, global::System.Exception, bool> OnHandleErrorException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandleError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                         (object)null, "OnHandleError", typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.OnProvideResponse(System.Exception)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> OnProvideResponseException
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnProvideResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                         (object)null, "OnProvideResponse", typeof(global::System.Exception));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.PrepareHttpResponse(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, mnh::System.Net.Http.HttpResponseMessage> PrepareHttpResponseHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareHttpResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                         (object)null, "PrepareHttpResponse", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseErrorHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseErrorHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseErrorHandler Bind(ssm::System.ServiceModel.Dispatcher.IErrorHandler target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseErrorHandler, 
                                                                  ssm::System.ServiceModel.Dispatcher.IErrorHandler>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter},System.Uri,System.Boolean)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>, global::System.Uri, bool> ConstructorIEnumerableOfMediaTypeFormatterUriBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), (object)null, 
                     ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>), 
                     typeof(global::System.Uri), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.CreateHtmlResponse(System.Exception)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> CreateHtmlResponseException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateHtmlResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, 
                                                                                                                                                    global::System.Exception, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                                                                                          base.Instance, "CreateHtmlResponse", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.OnHandleError(System.Exception)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, bool> OnHandleErrorException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandleError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, global::System.Exception, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                     base.Instance, "OnHandleError", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.OnProvideResponse(System.Exception)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> OnProvideResponseException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnProvideResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, 
                                                                                                                                                    global::System.Exception, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                                                                                          base.Instance, "OnProvideResponse", typeof(global::System.Exception));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.PrepareHttpResponse(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> PrepareHttpResponseHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareHttpResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler, mnh::System.Net.Http.HttpResponseMessage>(value)
                                              ), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler), 
                     base.Instance, "PrepareHttpResponse", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpResponseException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpResponseException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpResponseException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpResponseException(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.Response"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, mnh::System.Net.Http.HttpResponseMessage> ResponseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Response", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), 
                         (object)null, "get_Response");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.Response"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, mnh::System.Net.Http.HttpResponseMessage> ResponseSetHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Response", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), 
                         (object)null, "set_Response", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseException.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseException.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MHttpResponseException, 
                                                                  global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, mnh::System.Net.Http.HttpResponseMessage> ConstructorHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.Net.HttpStatusCode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, global::System.Net.HttpStatusCode> ConstructorHttpStatusCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), 
                     (object)null, ".ctor", typeof(global::System.Net.HttpStatusCode));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.Response"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage> ResponseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Response", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), base.Instance, "get_Response");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.Response"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> ResponseSetHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Response", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException), 
                     base.Instance, "set_Response", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpResponseMessage`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<>))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpResponseMessage`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpResponseMessage<T>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpResponseMessage()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpResponseMessage(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), (object)null, "get_Content");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.Content"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentSetObjectContentOfT
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), 
                         (object)null, "set_Content", typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpResponseMessage<T>.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpResponseMessage<T>.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpResponseMessage<T> Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpResponseMessage<T>, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.#ctor(System.Net.HttpStatusCode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, global::System.Net.HttpStatusCode> ConstructorHttpStatusCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), 
                     (object)null, ".ctor", typeof(global::System.Net.HttpStatusCode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.#ctor(`1)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, T> ConstructorT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), (object)null, ".ctor", typeof(T));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.#ctor(`1,System.Net.HttpStatusCode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, T, global::System.Net.HttpStatusCode> ConstructorTHttpStatusCode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), (object)null, 
                     ".ctor", typeof(T), typeof(global::System.Net.HttpStatusCode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.#ctor(`1,System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, T, global::System.Net.HttpStatusCode, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTHttpStatusCodeIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), (object)null, 
                     ".ctor", typeof(T), typeof(global::System.Net.HttpStatusCode), 
                                         typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.#ctor(`1,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, T, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), (object)null, 
                     ".ctor", typeof(T), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), base.Instance, "get_Content");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpResponseMessage`1.Content"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>> ContentSetObjectContentOfT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Content", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>, mash::Microsoft.ApplicationServer.Http.ObjectContent<T>>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>), 
                     base.Instance, "set_Content", typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpServiceHost")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpServiceHost
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.HttpServiceHost>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpServiceHost()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpServiceHost(mash::Microsoft.ApplicationServer.Http.HttpServiceHost instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddDefaultEndpoints"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>> AddDefaultEndpoints
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddDefaultEndpoints", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                 global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), base.Instance, "AddDefaultEndpoints");
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddDefaultEndpoints"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>> AddDefaultEndpoints
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddDefaultEndpoints", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, "AddDefaultEndpoints");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.GenerateDefaultServiceEndpoint(System.Uri)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, global::System.Uri, ssm::System.ServiceModel.Description.ServiceEndpoint> GenerateDefaultServiceEndpointUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateDefaultServiceEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                         (object)null, "GenerateDefaultServiceEndpoint", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                         (object)null, "get_MessageHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                         (object)null, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.OnOpening"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost> OnOpening
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, "OnOpening");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                         (object)null, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost Bind(ssm::System.ServiceModel.ICommunicationObject target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost, ssm::System.ServiceModel.ICommunicationObject>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost Bind(ssm::System.ServiceModel.IExtensibleObject<ssm::System.ServiceModel.ServiceHostBase> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost, 
                                                                            ssm::System.ServiceModel.IExtensibleObject<ssm::System.ServiceModel.ServiceHostBase>>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MHttpServiceHost, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, object, string[]> ConstructorObjectStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, 
                     ".ctor", typeof(object), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,System.Uri[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, object, global::System.Uri[]> ConstructorObjectUriArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, 
                     ".ctor", typeof(object), typeof(global::System.Uri).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, global::System.Type, string[]> ConstructorTypeStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,System.Uri[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, global::System.Type, global::System.Uri[]> ConstructorTypeUriArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(global::System.Uri).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.CreateUriBaseAddresses(System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[], global::System.Uri[]> CreateUriBaseAddressesStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateUriBaseAddresses", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                     "CreateUriBaseAddresses", typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.DisableServiceDebugAndMetadataBehaviors(System.ServiceModel.Description.ServiceDescription)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceDescription> DisableServiceDebugAndMetadataBehaviorsServiceDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DisableServiceDebugAndMetadataBehaviors", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                     "DisableServiceDebugAndMetadataBehaviors", typeof(ssm::System.ServiceModel.Description.ServiceDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.GenerateDefaultServiceEndpoint(System.Uri)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, ssm::System.ServiceModel.Description.ServiceEndpoint> GenerateDefaultServiceEndpointUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateDefaultServiceEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                    global::System.Uri, ssm::System.ServiceModel.Description.ServiceEndpoint>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                                                                                          base.Instance, "GenerateDefaultServiceEndpoint", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), base.Instance, "get_MessageHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                                                                                       base.Instance, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnOpening", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), base.Instance, "OnOpening");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.HttpServiceHost.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.HttpServiceHost, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                                                                                       base.Instance, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.ValidateBaseAddresses(System.Uri[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri[], global::System.Uri[]> ValidateBaseAddressesUriArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateBaseAddresses", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost), 
                     "ValidateBaseAddresses", typeof(global::System.Uri).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Activation.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpServiceHostFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MHttpServiceHostFactory
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory>
    {
        /// <summary>Initializes a new mole</summary>
        public MHttpServiceHostFactory()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MHttpServiceHostFactory(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, global::System.Type, global::System.Uri[], ssm::System.ServiceModel.ServiceHost> CreateServiceHostTypeUriArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateServiceHost", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), (object)null, 
                         "CreateServiceHost", typeof(global::System.Type), typeof(global::System.Uri).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                         (object)null, "get_MessageHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.MessageHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                         (object)null, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                         (object)null, "get_OperationHandlerFactory");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.OperationHandlerFactory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                         (object)null, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Activation.Moles.MHttpServiceHostFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Activation.Moles.MHttpServiceHostFactory.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Uri[], ssm::System.ServiceModel.ServiceHost> CreateServiceHostTypeUriArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateServiceHost", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, global::System.Type, 
                                                          global::System.Uri[], ssm::System.ServiceModel.ServiceHost>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), base.Instance, 
                     "CreateServiceHost", typeof(global::System.Type), typeof(global::System.Uri).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), base.Instance, "get_MessageHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.MessageHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory> MessageHandlerFactorySetHttpMessageHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MessageHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                                                                                       base.Instance, "set_MessageHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), base.Instance, "get_OperationHandlerFactory");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.OperationHandlerFactory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory> OperationHandlerFactorySetHttpOperationHandlerFactory
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_OperationHandlerFactory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory), 
                                                                                       base.Instance, "set_OperationHandlerFactory", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.HttpTypeHelper"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = HttpTypeHelper")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MHttpTypeHelper
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MHttpTypeHelper()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpTypeHelper.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MHttpTypeHelper.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpContentInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpContentInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpContentInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpContentInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpRequestInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpRequestInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpRequestInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpRequestOrContentInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpRequestOrContentInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestOrContentInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpRequestOrContentInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpResponseInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpResponseInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpResponseInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.GetHttpResponseOrContentInnerTypeOrNull(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> GetHttpResponseOrContentInnerTypeOrNullType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseOrContentInnerTypeOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "GetHttpResponseOrContentInnerTypeOrNull", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpContentGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpContentGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpContentGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpContentGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpContent(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpContent", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpRequestGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpRequestGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpRequestGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpRequestGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpRequestOrContentGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpRequestOrContentGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpRequestOrContentGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpRequestOrContentGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpRequestOrContent(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpRequestOrContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpRequestOrContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpRequestOrContent", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpRequest(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpRequestType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpRequest", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpResponseGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpResponseGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpResponseGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpResponseGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpResponseOrContentGenericTypeDefinition(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpResponseOrContentGenericTypeDefinitionType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpResponseOrContentGenericTypeDefinition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpResponseOrContentGenericTypeDefinition", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpResponseOrContent(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpResponseOrContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpResponseOrContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpResponseOrContent", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttpResponse(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpResponseType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttpResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "IsHttpResponse", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.IsHttp(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsHttpType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsHttp", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), "IsHttp", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.MakeHttpRequestMessageOf(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> MakeHttpRequestMessageOfType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MakeHttpRequestMessageOf", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "MakeHttpRequestMessageOf", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.MakeHttpResponseMessageOf(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> MakeHttpResponseMessageOfType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MakeHttpResponseMessageOf", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "MakeHttpResponseMessageOf", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.HttpTypeHelper.MakeObjectContentOf(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type> MakeObjectContentOfType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MakeObjectContentOf", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.HttpTypeHelper), 
                     "MakeObjectContentOf", typeof(global::System.Type));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = JsonMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MJsonMediaTypeFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter>
    {
        /// <summary>Initializes a new mole</summary>
        public MJsonMediaTypeFormatter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MJsonMediaTypeFormatter(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.CreateDefaultSerializer(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> CreateDefaultSerializerType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "CreateDefaultSerializer", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.GetSerializerForType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> GetSerializerForTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetSerializerForType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "GetSerializerForType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool> OnCanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "OnCanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool> OnCanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "OnCanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), (object)null, 
                         "OnReadFromStream", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), (object)null, "OnWriteToStream", 
                         typeof(global::System.Type), typeof(object), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.RemoveSerializer(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool> RemoveSerializerType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "RemoveSerializer", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.Json.DataContractJsonSerializer)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void SetSerializerDataContractJsonSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), (object)null, 
                     "SetSerializer", gma, typeof(srs::System.Runtime.Serialization.Json.DataContractJsonSerializer));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializer)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> SetSerializerTypeDataContractJsonSerializer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), (object)null, 
                         "SetSerializer", typeof(global::System.Type), typeof(srs::System.Runtime.Serialization.Json.DataContractJsonSerializer));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.&lt;OnCanReadType&gt;b__a(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> _OnCanReadTypeb__aType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanReadType>b__a", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "<OnCanReadType>b__a", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.&lt;OnCanWriteType&gt;b__b(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> _OnCanWriteTypeb__bType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanWriteType>b__b", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                         (object)null, "<OnCanWriteType>b__b", typeof(global::System.Type));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MJsonMediaTypeFormatter.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MJsonMediaTypeFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.CreateDefaultSerializer(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> CreateDefaultSerializerType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                    global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                                                                                          base.Instance, "CreateDefaultSerializer", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.DefaultMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> DefaultMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), "get_DefaultMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.GetSerializerForType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> GetSerializerForTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetSerializerForType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                    global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                                                                                          base.Instance, "GetSerializerForType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.IsKnownUnserializableType(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> IsKnownUnserializableTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsKnownUnserializableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                     "IsKnownUnserializableType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, "OnCanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, "OnCanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, "OnReadFromStream", typeof(global::System.Type), 
                                                                                                                                                           typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, "OnWriteToStream", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.RemoveSerializer(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> RemoveSerializerType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, "RemoveSerializer", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.Json.DataContractJsonSerializer)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void SetSerializerDataContractJsonSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                    srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(mole)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, 
                                                                                          "SetSerializer", gma, typeof(srs::System.Runtime.Serialization.Json.DataContractJsonSerializer));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializer)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> SetSerializerTypeDataContractJsonSerializer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                 global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), base.Instance, 
                                                                                       "SetSerializer", typeof(global::System.Type), typeof(srs::System.Runtime.Serialization.Json.DataContractJsonSerializer));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.&lt;OnCanReadType&gt;b__a(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> _OnCanReadTypeb__aType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanReadType>b__a", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                    global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                                                                                          base.Instance, "<OnCanReadType>b__a", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.&lt;OnCanWriteType&gt;b__b(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> _OnCanWriteTypeb__bType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanWriteType>b__b", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter, 
                                                                                                                                                    global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                                                                                          base.Instance, "<OnCanWriteType>b__b", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.&lt;SetSerializer&gt;b__8(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializer)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer, srs::System.Runtime.Serialization.Json.DataContractJsonSerializer> _SetSerializerb__8TypeDataContractJsonSerializer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<SetSerializer>b__8", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter), 
                     "<SetSerializer>b__8", typeof(global::System.Type), typeof(srs::System.Runtime.Serialization.Json.DataContractJsonSerializer));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = JsonValueMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MJsonValueMediaTypeFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter>
    {
        /// <summary>Initializes a new mole</summary>
        public MJsonValueMediaTypeFormatter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MJsonValueMediaTypeFormatter(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, bool> OnCanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), 
                         (object)null, "OnCanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, bool> OnCanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), 
                         (object)null, "OnCanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), (object)null, 
                         "OnReadFromStream", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), 
                         (object)null, "OnWriteToStream", typeof(global::System.Type), typeof(object), 
                                                                                                                                       typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MJsonValueMediaTypeFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MJsonValueMediaTypeFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), base.Instance, "OnCanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), 
                     base.Instance, "OnCanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), base.Instance, 
                     "OnReadFromStream", typeof(global::System.Type), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter), base.Instance, "OnWriteToStream", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaRangeMapping"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaRangeMapping")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaRangeMapping
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaRangeMapping()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaRangeMapping(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.Initialize(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> InitializeMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                         (object)null, "Initialize", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaRangeMapping.MediaRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), (object)null, "get_MediaRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaRangeMapping.MediaRange"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaRangeSetMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                         (object)null, "set_MediaRange", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaRangeMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaRangeMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorMediaTypeHeaderValueMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), (object)null, 
                     ".ctor", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.Initialize(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> InitializeMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                     base.Instance, "Initialize", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaRangeMapping.MediaRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), base.Instance, "get_MediaRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaRangeMapping.MediaRange"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaRangeSetMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                     base.Instance, "set_MediaRange", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaRangeMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaRangeMapping, mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaRangeMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeConstants"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeConstants")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MMediaTypeConstants
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeConstants>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeConstants()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeConstants(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeConstants.ApplicationJsonMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ApplicationJsonMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationJsonMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), "get_ApplicationJsonMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeConstants.ApplicationXmlMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ApplicationXmlMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationXmlMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), "get_ApplicationXmlMediaType");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeConstants.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeConstants.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeConstants.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeConstants> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeConstants.HtmlMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> HtmlMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), "get_HtmlMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeConstants.TextJsonMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> TextJsonMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TextJsonMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), "get_TextJsonMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeConstants.TextXmlMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> TextXmlMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TextXmlMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants), "get_TextXmlMediaType");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaTypeFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeFormatter(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpContent, bool> CanReadAsTypeHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpRequestMessage, bool> CanReadAsTypeHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpResponseMessage, bool> CanReadAsTypeHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool> CanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "CanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpContent,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpContentMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanWriteAs", typeof(global::System.Type), 
                         typeof(mnh::System.Net.Http.HttpContent), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpRequestMessageMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanWriteAs", typeof(global::System.Type), 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpResponseMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpResponseMessageMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "CanWriteAs", typeof(global::System.Type), 
                         typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool> CanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "CanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeMappings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>> MediaTypeMappingsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaTypeMappings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "get_MediaTypeMappings");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeMappings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>> MediaTypeMappingsSetCollectionOfMediaTypeMapping
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaTypeMappings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "set_MediaTypeMappings", 
                                       typeof(global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool> OnCanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "OnCanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool> OnCanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "OnCanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "OnReadFromStreamAsync", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, "OnWriteToStreamAsync", 
                         typeof(global::System.Type), typeof(object), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> ReadFromStreamAsyncTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadFromStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "ReadFromStreamAsync", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> ReadFromStreamTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "ReadFromStream", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.SupportedMediaTypes"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>> SupportedMediaTypesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportedMediaTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                         (object)null, "get_SupportedMediaTypes");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.SupportedMediaTypes"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>> SupportedMediaTypesSetCollectionOfMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SupportedMediaTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                                                                                                                            "set_SupportedMediaTypes", typeof(global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchMediaTypeMapping(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchMediaTypeMappingHttpRequestMessageMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchMediaTypeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "TryMatchMediaTypeMapping", 
                         typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchMediaTypeMapping(System.Net.Http.HttpResponseMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchMediaTypeMappingHttpResponseMessageMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchMediaTypeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "TryMatchMediaTypeMapping", 
                         typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchSupportedMediaType(System.Collections.Generic.IEnumerable`1{System.Net.Http.Headers.MediaTypeHeaderValue},System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchSupportedMediaTypeIEnumerableOfMediaTypeHeaderValueMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchSupportedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "TryMatchSupportedMediaType", 
                         typeof(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>), 
                         typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchSupportedMediaType(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchSupportedMediaTypeMediaTypeHeaderValueMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchSupportedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, 
                         "TryMatchSupportedMediaType", 
                         typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> WriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, "WriteToStreamAsync", 
                         typeof(global::System.Type), typeof(object), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> WriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, "WriteToStream", 
                         typeof(global::System.Type), typeof(object), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, mnh::System.Net.Http.HttpContent, bool> CanReadAsTypeHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, mnh::System.Net.Http.HttpContent, bool>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, 
                     "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, mnh::System.Net.Http.HttpRequestMessage, bool> CanReadAsTypeHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, 
                     "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadAs(System.Type,System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, mnh::System.Net.Http.HttpResponseMessage, bool> CanReadAsTypeHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, 
                     "CanReadAs", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> CanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "CanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpContent,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.Type, mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpContentMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          mnh::System.Net.Http.HttpContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "CanWriteAs", typeof(global::System.Type), 
                                                                                                                                                                typeof(mnh::System.Net.Http.HttpContent), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.Type, mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpRequestMessageMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "CanWriteAs", typeof(global::System.Type), 
                                                                                                                                                                       typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteAs(System.Type,System.Net.Http.HttpResponseMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.Type, mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> CanWriteAsTypeHttpResponseMessageMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "CanWriteAs", typeof(global::System.Type), 
                                                                                                                                                                        typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.CanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> CanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "CanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection"/>
        /// .</summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection))]
        [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeHeaderValueCollection")]
        internal partial class MMediaTypeHeaderValueCollection
          : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection>
        {
            /// <summary>Initializes a new mole</summary>
            public MMediaTypeHeaderValueCollection()
            : base()
            {
            }

            /// <summary>Initializes a new mole for the given instance</summary>
            public MMediaTypeHeaderValueCollection(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection instance)
            : base(instance)
            {
            }

            /// <summary>Define moles for all instances members</summary>
            public static partial class AllInstances
            {
                /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.InsertItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
                /// </summary>
                internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> InsertItemInt32MediaTypeHeaderValue
                {
                    [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InsertItem", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                    set
                    {
                        mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                                  typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), (object)null, 
                                                                                                  "InsertItem", typeof(int), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                    }
                }

                /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.SetItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
                /// </summary>
                internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> SetItemInt32MediaTypeHeaderValue
                {
                    [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetItem", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                    set
                    {
                        mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, 
                                                                                                  typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), (object)null, 
                                                                                                  "SetItem", typeof(int), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                    }
                }
            }

            /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
            public static void BehaveAsCurrent()
            {
                global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection.Behavior =
                  mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
            }

            /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
            public static void BehaveAsNotImplemented()
            {
                global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection.Behavior =
                  mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
            }

            /// <summary>Assigns the behavior for all methods of the moled type</summary>
            public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
            {
                set
                {
                    mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                        (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), value);
                }
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.ICollection target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.ICollection>(this, target);
                return this;
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.IEnumerable target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.IEnumerable>(this, target);
                return this;
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.IList target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.IList>(this, target);
                return this;
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.Generic.ICollection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(this, target);
                return this;
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(this, target);
                return this;
            }

            /// <summary>Binds the members of the interface to the mole.</summary>
            public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection Bind(global::System.Collections.Generic.IList<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> target)
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
                  .Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                        global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatter.MMediaTypeHeaderValueCollection, 
                        global::System.Collections.Generic.IList<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(this, target);
                return this;
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.#ctor"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection> Constructor
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), 
                         (object)null, ".ctor");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.InsertItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> InsertItemInt32MediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InsertItem", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                     .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                                                              int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                         typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), base.Instance, 
                         "InsertItem", typeof(int), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.SetItem(System.Int32,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> SetItemInt32MediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetItem", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                     .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection, 
                                                              int, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                         typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), base.Instance, 
                         "SetItem", typeof(int), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection.ValidateMediaType(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ValidateMediaTypeMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValidateMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeHeaderValueCollection), 
                         "ValidateMediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeMappings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>> MediaTypeMappingsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaTypeMappings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, 
                                                                                                                                                 global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "get_MediaTypeMappings");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.MediaTypeMappings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>> MediaTypeMappingsSetCollectionOfMediaTypeMapping
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaTypeMappings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, 
                                                                                                                                                    global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "set_MediaTypeMappings", 
                                                                                                                                                                                                                                                                                          typeof(global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "OnCanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "OnCanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, 
                     "OnReadFromStreamAsync", typeof(global::System.Type), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "OnWriteToStreamAsync", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> ReadFromStreamAsyncTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadFromStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "ReadFromStreamAsync", typeof(global::System.Type), 
                                                                                                                                                                                             typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.ReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> ReadFromStreamTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "ReadFromStream", typeof(global::System.Type), 
                                                                                                                                                        typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.SupportedMediaTypes"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>> SupportedMediaTypesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SupportedMediaTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, 
                                                                                                                                                 global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "get_SupportedMediaTypes");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatter.SupportedMediaTypes"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>> SupportedMediaTypesSetCollectionOfMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SupportedMediaTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, 
                                                                                                                                                    global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, 
                                                                                                                                                                                                                                                                     "set_SupportedMediaTypes", typeof(global::System.Collections.ObjectModel.Collection<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchMediaTypeMapping(System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchMediaTypeMappingHttpRequestMessageMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchMediaTypeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.HttpRequestMessage, 
                                                          mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "TryMatchMediaTypeMapping", 
                                                                                                                                                                           typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchMediaTypeMapping(System.Net.Http.HttpResponseMessage,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.HttpResponseMessage, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchMediaTypeMappingHttpResponseMessageMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchMediaTypeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.HttpResponseMessage, 
                                                          mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "TryMatchMediaTypeMapping", 
                                                                                                                                                                            typeof(mnh::System.Net.Http.HttpResponseMessage), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchSupportedMediaType(System.Collections.Generic.IEnumerable`1{System.Net.Http.Headers.MediaTypeHeaderValue},System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchSupportedMediaTypeIEnumerableOfMediaTypeHeaderValueMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchSupportedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>, 
                                                                                                                                                    mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "TryMatchSupportedMediaType", 
                                                                                                                                                                                                                                                                    typeof(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>), 
                                                                                                                                                                                                                                                                    typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.TryMatchSupportedMediaType(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> TryMatchSupportedMediaTypeMediaTypeHeaderValueMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryMatchSupportedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, 
                                                          mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "TryMatchSupportedMediaType", 
                                                                                                                                                                                     typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> WriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "WriteToStreamAsync", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.WriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> WriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), base.Instance, "WriteToStream", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.&lt;CanWriteAs&gt;b__0(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> _CanWriteAsb__0MediaTypeWithQualityHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<CanWriteAs>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                     "<CanWriteAs>b__0", typeof(mnh::System.Net.Http.Headers.MediaTypeWithQualityHeaderValue));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeFormatterCollection")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaTypeFormatterCollection
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeFormatterCollection()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeFormatterCollection(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.JsonFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter> JsonFormatterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_JsonFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), 
                         (object)null, "get_JsonFormatter");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.ReplaceAllWith(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ReplaceAllWithIEnumerableOfMediaTypeFormatter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReplaceAllWith", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), (object)null, 
                                                                                                                                      "ReplaceAllWith", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.XmlFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter> XmlFormatterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), 
                         (object)null, "get_XmlFormatter");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.ICollection target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, global::System.Collections.ICollection>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.IEnumerable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, global::System.Collections.IEnumerable>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.IList target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, global::System.Collections.IList>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.Generic.ICollection<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, 
                                                                  global::System.Collections.Generic.ICollection<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, 
                                                                  global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>>(this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection Bind(global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterCollection, 
                                                                  global::System.Collections.Generic.IList<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), (object)null, 
                                                                                                                                  ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.JsonFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter> JsonFormatterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_JsonFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), base.Instance, "get_JsonFormatter");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.ReplaceAllWith(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ReplaceAllWithIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReplaceAllWith", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), base.Instance, 
                                                                                                                                                                                                                                                                          "ReplaceAllWith", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection.XmlFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter> XmlFormatterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection), base.Instance, "get_XmlFormatter");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeFormatterExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MMediaTypeFormatterExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MMediaTypeFormatterExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods))
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddMediaRangeMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> AddMediaRangeMappingMediaTypeFormatterMediaTypeHeaderValueMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddMediaRangeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddMediaRangeMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                                                                                     typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddMediaRangeMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, string, string> AddMediaRangeMappingMediaTypeFormatterStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddMediaRangeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddMediaRangeMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddQueryStringMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, string, string, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> AddQueryStringMappingMediaTypeFormatterStringStringMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddQueryStringMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddQueryStringMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), typeof(string), 
                                                                                     typeof(string), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddQueryStringMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, string, string, string> AddQueryStringMappingMediaTypeFormatterStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddQueryStringMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddQueryStringMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddUriPathExtensionMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, string, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> AddUriPathExtensionMappingMediaTypeFormatterStringMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddUriPathExtensionMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddUriPathExtensionMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), 
                                                                                     typeof(string), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods.AddUriPathExtensionMapping(Microsoft.ApplicationServer.Http.MediaTypeFormatter,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter, string, string> AddUriPathExtensionMappingMediaTypeFormatterStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddUriPathExtensionMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), "AddUriPathExtensionMapping", 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter), typeof(string), typeof(string));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeFormatterExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterExtensionMethods), value);
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeHeaderValueComparer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MMediaTypeHeaderValueComparer
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeHeaderValueComparer()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeHeaderValueComparer(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer.Compare(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> CompareMediaTypeHeaderValueMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Compare", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), (object)null, 
                         "Compare", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueComparer.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueComparer.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueComparer Bind(global::System.Collections.Generic.IComparer<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueComparer, 
                                                                  global::System.Collections.Generic.IComparer<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer.CompareBasedOnQualityFactor(Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue,Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, int> CompareBasedOnQualityFactorParsedMediaTypeHeaderValueParsedMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CompareBasedOnQualityFactor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), 
                     "CompareBasedOnQualityFactor", typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                                                    typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer.Compare(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> CompareMediaTypeHeaderValueMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Compare", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, 
                                                          mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), base.Instance, 
                     "Compare", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer.Comparer"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer> ComparerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Comparer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), "get_Comparer");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueComparer), (object)null, ".ctor");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeHeaderValueEqualityComparer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MMediaTypeHeaderValueEqualityComparer
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer>
    {
        /// <summary>Initializes a new mole</summary>
        public MMediaTypeHeaderValueEqualityComparer()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeHeaderValueEqualityComparer(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), (object)null, 
                         "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.Boolean)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValueBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), (object)null, 
                         "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                         typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.String)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValueString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), (object)null, 
                         "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                         typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.GetHashCode(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> GetHashCodeMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), 
                         (object)null, "GetHashCode", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueEqualityComparer.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueEqualityComparer.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueEqualityComparer Bind(global::System.Collections.Generic.IEqualityComparer<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueEqualityComparer, 
                                                                  global::System.Collections.Generic.IEqualityComparer<mnh::System.Net.Http.Headers.MediaTypeHeaderValue>>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), 
                     (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.EqualityComparer"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer> EqualityComparerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EqualityComparer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), "get_EqualityComparer");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, 
                                                                                                                                                 mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), base.Instance, 
                                                                                       "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.Boolean)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValueBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, 
                                                                                                                                                 mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), base.Instance, 
                                                                                       "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.Equals(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue,System.String)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string, bool> EqualsMediaTypeHeaderValueMediaTypeHeaderValueString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Equals", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, 
                                                                                                                                                 mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, string, bool>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), base.Instance, 
                                                                                       "Equals", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                                                                                       typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer.GetHashCode(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int> GetHashCodeMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHashCode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer, 
                                                                                                                                                 mnh::System.Net.Http.Headers.MediaTypeHeaderValue, int>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueEqualityComparer), 
                                                                                       base.Instance, "GetHashCode", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeHeaderValueExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MMediaTypeHeaderValueExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MMediaTypeHeaderValueExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeHeaderValueExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods.IsMediaRange(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> IsMediaRangeMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods), 
                     "IsMediaRange", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods.IsWithinMediaRange(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, bool> IsWithinMediaRangeMediaTypeHeaderValueMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsWithinMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeHeaderValueExtensionMethods), 
                     "IsWithinMediaRange", 
                     typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeMapping"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = MediaTypeMapping")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MMediaTypeMapping
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping>
    {
        /// <summary>Initializes a new mole for the given instance</summary>
        public MMediaTypeMapping(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeMapping.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), (object)null, "get_MediaType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeMapping.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                         (object)null, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.SupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.HttpRequestMessage, bool> SupportsMediaTypeHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                         (object)null, "SupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.SupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.HttpResponseMessage, bool> SupportsMediaTypeHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                         (object)null, "SupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MMediaTypeMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeMapping.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), base.Instance, "get_MediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.MediaTypeMapping.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                     base.Instance, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.SupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> SupportsMediaTypeHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                     base.Instance, "SupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.SupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> SupportsMediaTypeHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.MediaTypeMapping, mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping), 
                     base.Instance, "SupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.ObjectContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ObjectContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MObjectContent
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.ObjectContent>
    {
        /// <summary>Initializes a new mole</summary>
        public MObjectContent()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MObjectContent(mash::Microsoft.ApplicationServer.Http.ObjectContent instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.CacheValueAndDisposeWrappedHttpContent(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> CacheValueAndDisposeWrappedHttpContentObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValueAndDisposeWrappedHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "CacheValueAndDisposeWrappedHttpContent", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> DefaultFormatterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_DefaultFormatter");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> DefaultFormatterSetMediaTypeFormatter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DefaultFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_DefaultFormatter", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultValue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> DefaultValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_DefaultValue");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.DetermineWriteSerializerAndContentType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent> DetermineWriteSerializerAndContentType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DetermineWriteSerializerAndContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "DetermineWriteSerializerAndContentType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_Formatters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpContent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent> HttpContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_HttpContent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpContent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent> HttpContentSetHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_HttpContent", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpRequestMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpRequestMessage> HttpRequestMessageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_HttpRequestMessage");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpRequestMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpRequestMessage> HttpRequestMessageSetHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_HttpRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpResponseMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpResponseMessage> HttpResponseMessageGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_HttpResponseMessage");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpResponseMessage"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpResponseMessage> HttpResponseMessageSetHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_HttpResponseMessage", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.IsValueCached"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool> IsValueCachedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsValueCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_IsValueCached");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_MediaType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAs"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> ReadAs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "ReadAs");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>> ReadAsAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "ReadAsAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsAsyncInternal(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, global::System.Threading.Tasks.Task<object>> ReadAsAsyncInternalBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "ReadAsAsyncInternal", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsInternal(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, object> ReadAsInternalBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "ReadAsInternal", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsOrDefault"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> ReadAsOrDefault
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "ReadAsOrDefault");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsOrDefaultAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>> ReadAsOrDefaultAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "ReadAsOrDefaultAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectAndValidateReadFormatter(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateReadFormatterBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "SelectAndValidateReadFormatter", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectAndValidateWriteFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateWriteFormatter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateWriteFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "SelectAndValidateWriteFormatter");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectReadFormatter"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectReadFormatter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "SelectReadFormatter");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectWriteFormatter(System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectWriteFormatterMediaTypeHeaderValueOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectWriteFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "SelectWriteFormatter", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.TryComputeLength(System.Int64@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.ObjectContent, long, bool> TryComputeLengthInt64Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "TryComputeLength", typeof(long).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Type"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type> TypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_Type");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Type"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type> TypeSetType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "set_Type", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "get_Value");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> ValueSetObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "set_Value", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetFormatters(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> VerifyAndSetFormattersIEnumerableOfMediaTypeFormatter
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetFormatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "VerifyAndSetFormatters", 
                                                                                                                                     typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetHttpContent(System.Net.Http.HttpContent)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent> VerifyAndSetHttpContentHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "VerifyAndSetHttpContent", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetMediaType(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> VerifyAndSetMediaTypeMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "VerifyAndSetMediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetMediaType(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, string> VerifyAndSetMediaTypeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "VerifyAndSetMediaType", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObjectAndMediaType(System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, object, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> VerifyAndSetObjectAndMediaTypeObjectMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObjectAndMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "VerifyAndSetObjectAndMediaType", typeof(object), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObjectAndMediaType(System.Object,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, object, string> VerifyAndSetObjectAndMediaTypeObjectString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObjectAndMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "VerifyAndSetObjectAndMediaType", typeof(object), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObject(System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> VerifyAndSetObjectObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "VerifyAndSetObject", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.WriteToStreamAsyncInternal(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> WriteToStreamAsyncInternalStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "WriteToStreamAsyncInternal", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.WriteToStreamInternal(System.IO.Stream,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext> WriteToStreamInternalStreamTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                         "WriteToStreamInternal", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.&lt;ReadAsAsyncInternal&gt;b__0"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, object> _ReadAsAsyncInternalb__0
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, "<ReadAsAsyncInternal>b__0");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.&lt;ReadAsAsyncInternal&gt;b__2(System.Threading.Tasks.Task`1{System.Object})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>, object> _ReadAsAsyncInternalb__2TaskOfObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                         (object)null, "<ReadAsAsyncInternal>b__2", typeof(global::System.Threading.Tasks.Task<object>));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MObjectContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MObjectContent.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MObjectContent Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.ObjectContent, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MObjectContent, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.CacheValueAndDisposeWrappedHttpContent(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> CacheValueAndDisposeWrappedHttpContentObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValueAndDisposeWrappedHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "CacheValueAndDisposeWrappedHttpContent", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type> ConstructorType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     (object)null, ".ctor", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Net.Http.HttpContent)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, mnh::System.Net.Http.HttpContent> ConstructorTypeHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTypeHttpContentIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(mnh::System.Net.Http.HttpContent), 
                                                           typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object> ConstructorTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTypeObjectIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), 
                     typeof(object), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorTypeObjectMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(object), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTypeObjectMediaTypeHeaderValueIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, ".ctor", 
                     typeof(global::System.Type), typeof(object), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                                                                  typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object, string> ConstructorTypeObjectString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, 
                     ".ctor", typeof(global::System.Type), typeof(object), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.#ctor(System.Type,System.Object,System.String,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type, object, string, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTypeObjectStringIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), (object)null, ".ctor", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(string), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> DefaultFormatterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_DefaultFormatter");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> DefaultFormatterSetMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DefaultFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "set_DefaultFormatter", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.DefaultValue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> DefaultValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_DefaultValue");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.DetermineWriteSerializerAndContentType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action DetermineWriteSerializerAndContentType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DetermineWriteSerializerAndContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "DetermineWriteSerializerAndContentType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_Formatters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpContent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent> HttpContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_HttpContent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpContent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> HttpContentSetHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "set_HttpContent", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpRequestMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage> HttpRequestMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_HttpRequestMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpRequestMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage> HttpRequestMessageSetHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpRequestMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "set_HttpRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpResponseMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage> HttpResponseMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_HttpResponseMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.HttpResponseMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage> HttpResponseMessageSetHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "set_HttpResponseMessage", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.IsValueCached"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsValueCachedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsValueCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_IsValueCached");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_MediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAs"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> ReadAs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAs");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<object>> ReadAsAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAsAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsAsyncInternal(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, global::System.Threading.Tasks.Task<object>> ReadAsAsyncInternalBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, global::System.Threading.Tasks.Task<object>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAsAsyncInternal", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsInternal(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, object> ReadAsInternalBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAsInternal", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsOrDefault"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> ReadAsOrDefault
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAsOrDefault");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.ReadAsOrDefaultAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<object>> ReadAsOrDefaultAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "ReadAsOrDefaultAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectAndValidateReadFormatter(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateReadFormatterBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "SelectAndValidateReadFormatter", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectAndValidateWriteFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateWriteFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateWriteFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "SelectAndValidateWriteFormatter");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectReadFormatter"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectReadFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "SelectReadFormatter");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SelectWriteFormatter(System.Net.Http.Headers.MediaTypeHeaderValue@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectWriteFormatterMediaTypeHeaderValueOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectWriteFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, 
                                                                                                      mnh::System.Net.Http.Headers.MediaTypeHeaderValue, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "SelectWriteFormatter", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStreamAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, 
                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                     "SerializeToStreamAsync", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializeToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                     "SerializeToStream", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryComputeLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, long, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "TryComputeLength", typeof(long).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Type"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> TypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_Type");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Type"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type> TypeSetType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Type>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "set_Type", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "get_Value");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> ValueSetObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "set_Value", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetFormatters(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> VerifyAndSetFormattersIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetFormatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, 
                                                                                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "VerifyAndSetFormatters", 
                                                                                                                                                                                                                                           typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetHttpContent(System.Net.Http.HttpContent)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> VerifyAndSetHttpContentHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "VerifyAndSetHttpContent", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetMediaType(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> VerifyAndSetMediaTypeMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "VerifyAndSetMediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetMediaType(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> VerifyAndSetMediaTypeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, string>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "VerifyAndSetMediaType", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObjectAndMediaType(System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> VerifyAndSetObjectAndMediaTypeObjectMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObjectAndMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                     "VerifyAndSetObjectAndMediaType", typeof(object), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObjectAndMediaType(System.Object,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object, string> VerifyAndSetObjectAndMediaTypeObjectString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObjectAndMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object, string>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                                                                                          "VerifyAndSetObjectAndMediaType", typeof(object), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.VerifyAndSetObject(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> VerifyAndSetObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "VerifyAndSetObject", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.WrapOrCastAsHttpContent(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, mnh::System.Net.Http.HttpContent> WrapOrCastAsHttpContentObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WrapOrCastAsHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), "WrapOrCastAsHttpContent", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.WriteToStreamAsyncInternal(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> WriteToStreamAsyncInternalStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, 
                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                     "WriteToStreamAsyncInternal", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.WriteToStreamInternal(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> WriteToStreamInternalStreamTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteToStreamInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.IO.Stream, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, 
                     "WriteToStreamInternal", typeof(global::System.IO.Stream), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.&lt;ReadAsAsyncInternal&gt;b__0"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> _ReadAsAsyncInternalb__0
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), base.Instance, "<ReadAsAsyncInternal>b__0");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.&lt;ReadAsAsyncInternal&gt;b__2(System.Threading.Tasks.Task`1{System.Object})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<object>, object> _ReadAsAsyncInternalb__2TaskOfObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent, global::System.Threading.Tasks.Task<object>, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent), 
                     base.Instance, "<ReadAsAsyncInternal>b__2", typeof(global::System.Threading.Tasks.Task<object>));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.ObjectContent`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<>))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ObjectContent`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MObjectContent01<T>
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>>
    {
        /// <summary>Initializes a new mole</summary>
        public MObjectContent01()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MObjectContent01(mash::Microsoft.ApplicationServer.Http.ObjectContent<T> instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.CacheValueAndDisposeWrappedHttpContent(`1)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T> CacheValueAndDisposeWrappedHttpContentT
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValueAndDisposeWrappedHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "CacheValueAndDisposeWrappedHttpContent", typeof(T));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.HttpContent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent> HttpContentGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "get_HttpContent");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.HttpContent"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent> HttpContentSetHttpContent
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "set_HttpContent", typeof(mnh::System.Net.Http.HttpContent));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.IsValueCached"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool> IsValueCachedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsValueCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "get_IsValueCached");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "get_MediaType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.MediaType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAs"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T> ReadAs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "ReadAs");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<T>> ReadAsAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "ReadAsAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsAsyncInternal(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, global::System.Threading.Tasks.Task<T>> ReadAsAsyncInternalBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "ReadAsAsyncInternal", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsInternal(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, T> ReadAsInternalBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "ReadAsInternal", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsOrDefault"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T> ReadAsOrDefault
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "ReadAsOrDefault");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsOrDefaultAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<T>> ReadAsOrDefaultAsync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "ReadAsOrDefaultAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.SelectAndValidateReadFormatter(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateReadFormatterBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "SelectAndValidateReadFormatter", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, object> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, "get_Value");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, object> ValueSetObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "set_Value", typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.&lt;ReadAsAsyncInternal&gt;b__0"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T> _ReadAsAsyncInternalb__0
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "<ReadAsAsyncInternal>b__0");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.&lt;ReadAsAsyncInternal&gt;b__2(System.Threading.Tasks.Task`1{System.Object})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<object>, T> _ReadAsAsyncInternalb__2TaskOfObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                         (object)null, "<ReadAsAsyncInternal>b__2", typeof(global::System.Threading.Tasks.Task<object>));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MObjectContent01<T>.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MObjectContent01<T>.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MObjectContent01<T> Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MObjectContent01<T>, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.CacheValueAndDisposeWrappedHttpContent(`1)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<T> CacheValueAndDisposeWrappedHttpContentT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CacheValueAndDisposeWrappedHttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "CacheValueAndDisposeWrappedHttpContent", typeof(T));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(System.Net.Http.HttpContent)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent> ConstructorHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorHttpContentIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, 
                     ".ctor", typeof(mnh::System.Net.Http.HttpContent), 
                              typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T> ConstructorT
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, ".ctor", typeof(T));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, 
                     ".ctor", typeof(T), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorTMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, 
                     ".ctor", typeof(T), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T, mnh::System.Net.Http.Headers.MediaTypeHeaderValue, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTMediaTypeHeaderValueIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, 
                     ".ctor", typeof(T), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue), 
                                         typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T, string> ConstructorTString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, 
                     ".ctor", typeof(T), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.#ctor(`1,System.String,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T, string, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorTStringIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), (object)null, ".ctor", typeof(T), 
                                                                                                                                    typeof(string), typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.HttpContent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpContent> HttpContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "get_HttpContent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.HttpContent"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpContent> HttpContentSetHttpContent
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HttpContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.HttpContent>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                     base.Instance, "set_HttpContent", typeof(mnh::System.Net.Http.HttpContent));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.IsValueCached"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsValueCachedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsValueCached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "get_IsValueCached");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "get_MediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.MediaType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> MediaTypeSetMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, mnh::System.Net.Http.Headers.MediaTypeHeaderValue>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                     base.Instance, "set_MediaType", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAs"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> ReadAs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAs");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<T>> ReadAsAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<T>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAsAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsAsyncInternal(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, global::System.Threading.Tasks.Task<T>> ReadAsAsyncInternalBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsAsyncInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, global::System.Threading.Tasks.Task<T>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAsAsyncInternal", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsInternal(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, T> ReadAsInternalBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, T>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAsInternal", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsOrDefault"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> ReadAsOrDefault
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefault", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAsOrDefault");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.ReadAsOrDefaultAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<T>> ReadAsOrDefaultAsync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsOrDefaultAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<T>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "ReadAsOrDefaultAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.SelectAndValidateReadFormatter(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> SelectAndValidateReadFormatterBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SelectAndValidateReadFormatter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, bool, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                     base.Instance, "SelectAndValidateReadFormatter", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "get_Value");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ObjectContent`1.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> ValueSetObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, object>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "set_Value", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.&lt;ReadAsAsyncInternal&gt;b__0"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> _ReadAsAsyncInternalb__0
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, T>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), base.Instance, "<ReadAsAsyncInternal>b__0");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent`1.&lt;ReadAsAsyncInternal&gt;b__2(System.Threading.Tasks.Task`1{System.Object})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.Tasks.Task<object>, T> _ReadAsAsyncInternalb__2TaskOfObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<ReadAsAsyncInternal>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.ObjectContent<T>, global::System.Threading.Tasks.Task<object>, T>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<T>), 
                     base.Instance, "<ReadAsAsyncInternal>b__2", typeof(global::System.Threading.Tasks.Task<object>));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.OperationContextExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.OperationContextExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = OperationContextExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MOperationContextExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MOperationContextExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.OperationContextExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MOperationContextExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MOperationContextExtensionMethods.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.OperationContextExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.OperationContextExtensionMethods.GetCurrentOperationName(System.ServiceModel.OperationContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.OperationContext, string> GetCurrentOperationNameOperationContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetCurrentOperationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.OperationContextExtensionMethods), 
                     "GetCurrentOperationName", typeof(ssm::System.ServiceModel.OperationContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.OperationContextExtensionMethods.GetHttpRequestMessage(System.ServiceModel.OperationContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.OperationContext, mnh::System.Net.Http.HttpRequestMessage> GetHttpRequestMessageOperationContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.OperationContextExtensionMethods), 
                     "GetHttpRequestMessage", typeof(ssm::System.ServiceModel.OperationContext));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = OperationHandlerFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MOperationHandlerFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter>
    {
        /// <summary>Initializes a new mole</summary>
        public MOperationHandlerFormatter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MOperationHandlerFormatter(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.CachedPipelineContext"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> CachedPipelineContextGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachedPipelineContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), 
                         (object)null, "get_CachedPipelineContext");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.CachedPipelineContext"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> CachedPipelineContextSetOperationHandlerPipelineContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachedPipelineContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), 
                         (object)null, "set_CachedPipelineContext", typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, mnh::System.Net.Http.HttpRequestMessage, object[]> OnDeserializeRequestHttpRequestMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnDeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), (object)null, 
                         "OnDeserializeRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnSerializeReply(System.Object[],System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, object[], object, mnh::System.Net.Http.HttpResponseMessage> OnSerializeReplyObjectArrayObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), (object)null, 
                         "OnSerializeReply", typeof(object).MakeArrayType(), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerFormatter.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerFormatter Bind(ssm::System.ServiceModel.Dispatcher.IDispatchMessageFormatter target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerFormatter, 
                                                                  ssm::System.ServiceModel.Dispatcher.IDispatchMessageFormatter>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.CachedPipelineContext"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> CachedPipelineContextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachedPipelineContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), base.Instance, "get_CachedPipelineContext");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.CachedPipelineContext"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> CachedPipelineContextSetOperationHandlerPipelineContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachedPipelineContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), 
                                                                                          base.Instance, "set_CachedPipelineContext", typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.#ctor(Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline> ConstructorOperationHandlerPipeline
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), 
                     (object)null, ".ctor", typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]> OnDeserializeRequestHttpRequestMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnDeserializeRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, 
                                                                                                                                                    mnh::System.Net.Http.HttpRequestMessage, object[]>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), base.Instance, 
                                                                                          "OnDeserializeRequest", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnSerializeReply(System.Object[],System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object, mnh::System.Net.Http.HttpResponseMessage> OnSerializeReplyObjectArrayObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSerializeReply", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter, object[], 
                                                          object, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter), base.Instance, 
                     "OnSerializeReply", typeof(object).MakeArrayType(), typeof(object));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = OperationHandlerPipeline")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MOperationHandlerPipeline
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline>
    {
        /// <summary>Initializes a new mole</summary>
        public MOperationHandlerPipeline()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MOperationHandlerPipeline(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline.ExecuteRequestPipeline(System.Net.Http.HttpRequestMessage,System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline, mnh::System.Net.Http.HttpRequestMessage, object[], mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> ExecuteRequestPipelineHttpRequestMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteRequestPipeline", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), (object)null, 
                         "ExecuteRequestPipeline", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline.ExecuteResponsePipeline(Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext,System.Object[],System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline, mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[], object, mnh::System.Net.Http.HttpResponseMessage> ExecuteResponsePipelineOperationHandlerPipelineContextObjectArrayObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteResponsePipeline", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), (object)null, 
                         "ExecuteResponsePipeline", typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                         typeof(object).MakeArrayType(), typeof(object));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipeline.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipeline.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler},System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler},Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> ConstructorIEnumerableOfHttpOperationHandlerIEnumerableOfHttpOperationHandlerHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), (object)null, 
                     ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>), 
                     typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline.ExecuteRequestPipeline(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, object[], mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext> ExecuteRequestPipelineHttpRequestMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteRequestPipeline", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline, mnh::System.Net.Http.HttpRequestMessage, 
                                                          object[], mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), base.Instance, 
                     "ExecuteRequestPipeline", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline.ExecuteResponsePipeline(Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext,System.Object[],System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[], object, mnh::System.Net.Http.HttpResponseMessage> ExecuteResponsePipelineOperationHandlerPipelineContextObjectArrayObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteResponsePipeline", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, 
                                                                                                                                                    object[], object, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline), base.Instance, 
                                                                                          "ExecuteResponsePipeline", typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                                                                                          typeof(object).MakeArrayType(), typeof(object));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = OperationHandlerPipelineContext")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MOperationHandlerPipelineContext
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext>
    {
        /// <summary>Initializes a new mole</summary>
        public MOperationHandlerPipelineContext()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MOperationHandlerPipelineContext(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.GetHttpResponseMessage"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                         (object)null, "GetHttpResponseMessage");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.GetInputValues"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[]> GetInputValues
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInputValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                         (object)null, "GetInputValues");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.SetOutputValuesAndAdvance(System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[]> SetOutputValuesAndAdvanceObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOutputValuesAndAdvance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                         (object)null, "SetOutputValuesAndAdvance", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipelineContext.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipelineContext.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.#ctor(Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, mnh::System.Net.Http.HttpRequestMessage> ConstructorOperationHandlerPipelineInfoHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), (object)null, 
                     ".ctor", 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.GetHttpResponseMessage"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), base.Instance, "GetHttpResponseMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.GetInputValues"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[]> GetInputValues
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInputValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), base.Instance, "GetInputValues");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext.SetOutputValuesAndAdvance(System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object[]> SetOutputValuesAndAdvanceObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOutputValuesAndAdvance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext), 
                     base.Instance, "SetOutputValuesAndAdvance", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = OperationHandlerPipelineInfo")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MOperationHandlerPipelineInfo
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo>
    {
        /// <summary>Initializes a new mole</summary>
        public MOperationHandlerPipelineInfo()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MOperationHandlerPipelineInfo(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetEmptyPipelineValuesArray"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, object[]> GetEmptyPipelineValuesArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEmptyPipelineValuesArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), 
                         (object)null, "GetEmptyPipelineValuesArray");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetHttpResponseMessage(System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, object[], mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), 
                         (object)null, "GetHttpResponseMessage", typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetInputValuesForHandler(System.Int32,System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, int, object[], object[]> GetInputValuesForHandlerInt32ObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInputValuesForHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), (object)null, 
                         "GetInputValuesForHandler", typeof(int), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.SetHttpRequestMessage(System.Net.Http.HttpRequestMessage,System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, mnh::System.Net.Http.HttpRequestMessage, object[]> SetHttpRequestMessageHttpRequestMessageObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), (object)null, 
                         "SetHttpRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.SetOutputValuesFromHandler(System.Int32,System.Object[],System.Object[])"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, int, object[], object[]> SetOutputValuesFromHandlerInt32ObjectArrayObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOutputValuesFromHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), (object)null, 
                         "SetOutputValuesFromHandler", typeof(int), typeof(object).MakeArrayType(), typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipelineInfo.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MOperationHandlerPipelineInfo.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.#ctor(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler},System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler},Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> ConstructorIEnumerableOfHttpOperationHandlerIEnumerableOfHttpOperationHandlerHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), (object)null, 
                     ".ctor", typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>), 
                     typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetEmptyPipelineValuesArray"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[]> GetEmptyPipelineValuesArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetEmptyPipelineValuesArray", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), base.Instance, "GetEmptyPipelineValuesArray");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetHttpResponseMessage(System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], mnh::System.Net.Http.HttpResponseMessage> GetHttpResponseMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHttpResponseMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, 
                                                          object[], mnh::System.Net.Http.HttpResponseMessage>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), 
                     base.Instance, "GetHttpResponseMessage", typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.GetInputValuesForHandler(System.Int32,System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int, object[], object[]> GetInputValuesForHandlerInt32ObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInputValuesForHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, int, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), base.Instance, 
                     "GetInputValuesForHandler", typeof(int), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.SetHttpRequestMessage(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]> SetHttpRequestMessageHttpRequestMessageObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetHttpRequestMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, 
                                                          mnh::System.Net.Http.HttpRequestMessage, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), base.Instance, 
                     "SetHttpRequestMessage", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.SetOutputValuesFromHandler(System.Int32,System.Object[],System.Object[])"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Action<int, object[], object[]> SetOutputValuesFromHandlerInt32ObjectArrayObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetOutputValuesFromHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo, int, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), base.Instance, 
                     "SetOutputValuesFromHandler", typeof(int), typeof(object).MakeArrayType(), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ThrowForUnboundRequestHandler(Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler,Microsoft.ApplicationServer.Http.Description.HttpParameter,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> ThrowForUnboundRequestHandlerHttpOperationHandlerHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowForUnboundRequestHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), "ThrowForUnboundRequestHandler", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ThrowForUnboundResponseHandler(Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler,Microsoft.ApplicationServer.Http.Description.HttpParameter,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> ThrowForUnboundResponseHandlerHttpOperationHandlerHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowForUnboundResponseHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), "ThrowForUnboundResponseHandler", 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler), 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ThrowForUnboundServiceOperation(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, string> ThrowForUnboundServiceOperationHttpParameterString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ThrowForUnboundServiceOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo), 
                     "ThrowForUnboundServiceOperation", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ParsedMediaTypeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MParsedMediaTypeHeaderValue
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue>
    {
        /// <summary>Initializes a new mole</summary>
        public MParsedMediaTypeHeaderValue()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MParsedMediaTypeHeaderValue(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.CharSet"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string> CharSetGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), (object)null, "get_CharSet");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.HasNonQualityFactorParameter"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool> HasNonQualityFactorParameterGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasNonQualityFactorParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                         (object)null, "get_HasNonQualityFactorParameter");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.IsAllMediaRange"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool> IsAllMediaRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAllMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                         (object)null, "get_IsAllMediaRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.IsSubTypeMediaRange"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool> IsSubTypeMediaRangeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSubTypeMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                         (object)null, "get_IsSubTypeMediaRange");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.QualityFactor"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, double> QualityFactorGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QualityFactor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                         (object)null, "get_QualityFactor");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.SubType"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string> SubTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SubType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), (object)null, "get_SubType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.Type"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string> TypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), (object)null, "get_Type");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MParsedMediaTypeHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MParsedMediaTypeHeaderValue.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), value);
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.CharSet"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CharSetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CharSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_CharSet");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), 
                     (object)null, ".ctor", typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.HasNonQualityFactorParameter"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> HasNonQualityFactorParameterGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HasNonQualityFactorParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_HasNonQualityFactorParameter");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.IsAllMediaRange"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAllMediaRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAllMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_IsAllMediaRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.IsSubTypeMediaRange"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsSubTypeMediaRangeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSubTypeMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, bool>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_IsSubTypeMediaRange");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.QualityFactor"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<double> QualityFactorGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QualityFactor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, double>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_QualityFactor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.SubType"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> SubTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SubType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_SubType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue.Type"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Type", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue, string>
                                                                                              (value)), typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue), base.Instance, "get_Type");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.QueryCompositionAttribute"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = QueryCompositionAttribute")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MQueryCompositionAttribute
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute>
    {
        /// <summary>Initializes a new mole</summary>
        public MQueryCompositionAttribute()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MQueryCompositionAttribute(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.AddQueryComposer(System.ServiceModel.Dispatcher.DispatchOperation,System.ServiceModel.Description.OperationDescription,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Dispatcher.DispatchOperation, ssm::System.ServiceModel.Description.OperationDescription, bool> AddQueryComposerDispatchOperationOperationDescriptionBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddQueryComposer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Dispatcher.DispatchOperation, 
                                                          ssm::System.ServiceModel.Description.OperationDescription, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                     "AddQueryComposer", typeof(ssm::System.ServiceModel.Dispatcher.DispatchOperation), 
                     typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(bool));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.AddQueryComposer(System.ServiceModel.Dispatcher.DispatchOperation,System.ServiceModel.Description.OperationDescription,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Dispatcher.DispatchOperation, ssm::System.ServiceModel.Description.OperationDescription, bool> AddQueryComposerDispatchOperationOperationDescriptionBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddQueryComposer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "AddQueryComposer", typeof(ssm::System.ServiceModel.Dispatcher.DispatchOperation), 
                         typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.Enabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, bool> EnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Enabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, "get_Enabled");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.Enabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, bool> EnabledSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Enabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), 
                         (object)null, "set_Enabled", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.QueryComposerType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, global::System.Type> QueryComposerTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryComposerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), 
                         (object)null, "get_QueryComposerType");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIContractBehaviorAddBindingParametersContractDescriptionServiceEndpointBindingParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IContractBehavior.AddBindingParameters", 
                         typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIContractBehaviorApplyClientBehaviorContractDescriptionServiceEndpointClientRuntime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.DispatchRuntime> SystemServiceModelDescriptionIContractBehaviorApplyDispatchBehaviorContractDescriptionServiceEndpointDispatchRuntime
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior", 
                         typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                         typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.DispatchRuntime));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint> SystemServiceModelDescriptionIContractBehaviorValidateContractDescriptionServiceEndpoint
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IContractBehavior.Validate", 
                         typeof(ssm::System.ServiceModel.Description.ContractDescription), typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIOperationBehaviorAddBindingParametersOperationDescriptionBindingParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IOperationBehavior.AddBindingParameters", 
                         typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.ClientOperation> SystemServiceModelDescriptionIOperationBehaviorApplyClientBehaviorOperationDescriptionClientOperation
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior", 
                         typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Dispatcher.ClientOperation));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.DispatchOperation> SystemServiceModelDescriptionIOperationBehaviorApplyDispatchBehaviorOperationDescriptionDispatchOperation
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                         "System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior", 
                         typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Dispatcher.DispatchOperation));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.OperationDescription> SystemServiceModelDescriptionIOperationBehaviorValidateOperationDescription
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, 
                                                                                                                                   "System.ServiceModel.Description.IOperationBehavior.Validate", typeof(ssm::System.ServiceModel.Description.OperationDescription));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute Bind(ssm::System.ServiceModel.Description.IContractBehavior target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute, ssm::System.ServiceModel.Description.IContractBehavior>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute Bind(ssm::System.ServiceModel.Description.IOperationBehavior target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionAttribute, ssm::System.ServiceModel.Description.IOperationBehavior>
                (this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.#ctor(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, global::System.Type> ConstructorType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), 
                     (object)null, ".ctor", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.Enabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> EnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Enabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, bool>(value)
                                                                                                                ), typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, "get_Enabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.Enabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> EnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Enabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, bool>(value)
                                                                                                                ), typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, "set_Enabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.QueryComposerType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> QueryComposerTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryComposerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, "get_QueryComposerType");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIContractBehaviorAddBindingParametersContractDescriptionServiceEndpointBindingParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, 
                                                                                                   ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                     "System.ServiceModel.Description.IContractBehavior.AddBindingParameters", 
                     typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                     typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime> SystemServiceModelDescriptionIContractBehaviorApplyClientBehaviorContractDescriptionServiceEndpointClientRuntime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, 
                                                                                                   ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.ClientRuntime>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                     "System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior", 
                     typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                     typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.ClientRuntime));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.DispatchRuntime> SystemServiceModelDescriptionIContractBehaviorApplyDispatchBehaviorContractDescriptionServiceEndpointDispatchRuntime
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.ContractDescription, 
                                                                                                   ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.DispatchRuntime>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                     "System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior", 
                     typeof(ssm::System.ServiceModel.Description.ContractDescription), 
                     typeof(ssm::System.ServiceModel.Description.ServiceEndpoint), typeof(ssm::System.ServiceModel.Dispatcher.DispatchRuntime));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint> SystemServiceModelDescriptionIContractBehaviorValidateContractDescriptionServiceEndpoint
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IContractBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                                                                                                    ssm::System.ServiceModel.Description.ContractDescription, ssm::System.ServiceModel.Description.ServiceEndpoint>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                                                                                          "System.ServiceModel.Description.IContractBehavior.Validate", 
                                                                                          typeof(ssm::System.ServiceModel.Description.ContractDescription), typeof(ssm::System.ServiceModel.Description.ServiceEndpoint));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Channels.BindingParameterCollection> SystemServiceModelDescriptionIOperationBehaviorAddBindingParametersOperationDescriptionBindingParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.AddBindingParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                                                                                                    ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Channels.BindingParameterCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                                                                                          "System.ServiceModel.Description.IOperationBehavior.AddBindingParameters", 
                                                                                          typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Channels.BindingParameterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.ClientOperation> SystemServiceModelDescriptionIOperationBehaviorApplyClientBehaviorOperationDescriptionClientOperation
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                                                                                                    ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.ClientOperation>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                                                                                          "System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior", 
                                                                                          typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Dispatcher.ClientOperation));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.DispatchOperation> SystemServiceModelDescriptionIOperationBehaviorApplyDispatchBehaviorOperationDescriptionDispatchOperation
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, 
                                                                                                                                                    ssm::System.ServiceModel.Description.OperationDescription, ssm::System.ServiceModel.Dispatcher.DispatchOperation>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                                                                                          "System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior", 
                                                                                          typeof(ssm::System.ServiceModel.Description.OperationDescription), typeof(ssm::System.ServiceModel.Dispatcher.DispatchOperation));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.OperationDescription> SystemServiceModelDescriptionIOperationBehaviorValidateOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System.ServiceModel.Description.IOperationBehavior.Validate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute, ssm::System.ServiceModel.Description.OperationDescription>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionAttribute), base.Instance, 
                                                                                                                                                                                                                                           "System.ServiceModel.Description.IOperationBehavior.Validate", typeof(ssm::System.ServiceModel.Description.OperationDescription));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = QueryCompositionMessageProperty")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MQueryCompositionMessageProperty
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty>
    {
        /// <summary>Initializes a new mole</summary>
        public MQueryCompositionMessageProperty()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MQueryCompositionMessageProperty(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.RequestUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty, string> RequestUriGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), 
                         (object)null, "get_RequestUri");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.RequestUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty, string> RequestUriSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), 
                         (object)null, "set_RequestUri", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionMessageProperty.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionMessageProperty.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), 
                     (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.Name"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.RequestUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> RequestUriGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), base.Instance, "get_RequestUri");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty.RequestUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> RequestUriSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_RequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionMessageProperty), base.Instance, "set_RequestUri", typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = QueryCompositionOperationInvoker")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MQueryCompositionOperationInvoker
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker>
    {
        /// <summary>Initializes a new mole</summary>
        public MQueryCompositionOperationInvoker()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MQueryCompositionOperationInvoker(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.AllocateInputs"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object[]> AllocateInputs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AllocateInputs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), 
                         (object)null, "AllocateInputs");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object[], global::System.AsyncCallback, object, global::System.IAsyncResult> InvokeBeginObjectObjectArrayAsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeBegin", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), 
                         (object)null, "InvokeBegin", typeof(object), typeof(object).MakeArrayType(), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object[], object[], object> InvokeObjectObjectArrayObjectArrayOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Invoke", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), (object)null, 
                         "Invoke", typeof(object), typeof(object).MakeArrayType(), typeof(object).MakeArrayType()
                                                                                       .MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.IsSynchronous"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, bool> IsSynchronousGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronous", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), 
                         (object)null, "get_IsSynchronous");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.TryApplyQuery(System.Object)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object> TryApplyQueryObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryApplyQuery", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), 
                         (object)null, "TryApplyQuery", typeof(object));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.AllocateInputs"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[]> AllocateInputs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AllocateInputs", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), base.Instance, "AllocateInputs");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionOperationInvoker.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionOperationInvoker.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionOperationInvoker Bind(ssm::System.ServiceModel.Dispatcher.IOperationInvoker target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MQueryCompositionOperationInvoker, 
                                                                  ssm::System.ServiceModel.Dispatcher.IOperationInvoker>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.#ctor(System.ServiceModel.Dispatcher.IOperationInvoker,Microsoft.ApplicationServer.Http.IQueryComposer)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, ssm::System.ServiceModel.Dispatcher.IOperationInvoker, mash::Microsoft.ApplicationServer.Http.IQueryComposer> ConstructorIOperationInvokerIQueryComposer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), (object)null, 
                     ".ctor", typeof(ssm::System.ServiceModel.Dispatcher.IOperationInvoker), typeof(mash::Microsoft.ApplicationServer.Http.IQueryComposer));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.GetRequestUri"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetRequestUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRequestUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), "GetRequestUri");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object[], global::System.AsyncCallback, object, global::System.IAsyncResult> InvokeBeginObjectObjectArrayAsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvokeBegin", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object[], 
                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), base.Instance, "InvokeBegin", 
                     typeof(object), typeof(object).MakeArrayType(), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<object, object[], object[], object> InvokeObjectObjectArrayObjectArrayOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Invoke", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object[], object[], object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), base.Instance, 
                     "Invoke", typeof(object), typeof(object).MakeArrayType(), typeof(object).MakeArrayType()
                                                                                   .MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.IsSynchronous"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsSynchronousGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsSynchronous", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, bool>
                                                                                                                    (value)), typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), base.Instance, "get_IsSynchronous");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker.TryApplyQuery(System.Object)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object> TryApplyQueryObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TryApplyQuery", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker, object, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker), base.Instance, "TryApplyQuery", typeof(object));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.QueryStringMapping"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = QueryStringMapping")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MQueryStringMapping
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.QueryStringMapping>
    {
        /// <summary>Initializes a new mole</summary>
        public MQueryStringMapping()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MQueryStringMapping(mash::Microsoft.ApplicationServer.Http.QueryStringMapping instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.DoesQueryStringMatch(System.Collections.Specialized.NameValueCollection)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, global::System.Collections.Specialized.NameValueCollection, bool> DoesQueryStringMatchNameValueCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DoesQueryStringMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "DoesQueryStringMatch", typeof(global::System.Collections.Specialized.NameValueCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.Initialize(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string, string> InitializeStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), (object)null, 
                         "Initialize", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string> QueryStringParameterNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryStringParameterName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "get_QueryStringParameterName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string> QueryStringParameterNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_QueryStringParameterName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "set_QueryStringParameterName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterValue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string> QueryStringParameterValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryStringParameterValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "get_QueryStringParameterValue");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterValue"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string> QueryStringParameterValueSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_QueryStringParameterValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                         (object)null, "set_QueryStringParameterValue", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryStringMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MQueryStringMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.#ctor(System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string, string, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorStringStringMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), (object)null, 
                     ".ctor", typeof(string), typeof(string), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.#ctor(System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string, string, string> ConstructorStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), (object)null, 
                     ".ctor", typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.DoesQueryStringMatch(System.Collections.Specialized.NameValueCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Specialized.NameValueCollection, bool> DoesQueryStringMatchNameValueCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DoesQueryStringMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.QueryStringMapping, global::System.Collections.Specialized.NameValueCollection, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                     base.Instance, "DoesQueryStringMatch", typeof(global::System.Collections.Specialized.NameValueCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.GetQueryString(System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, global::System.Collections.Specialized.NameValueCollection> GetQueryStringUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetQueryString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                     "GetQueryString", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.Initialize(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> InitializeStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string, string>
                                                                                                 (value)), typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), base.Instance, 
                                                                                          "Initialize", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.QueryStringMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> QueryStringParameterNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryStringParameterName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), base.Instance, "get_QueryStringParameterName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> QueryStringParameterNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_QueryStringParameterName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), base.Instance, "set_QueryStringParameterName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterValue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> QueryStringParameterValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_QueryStringParameterValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), base.Instance, "get_QueryStringParameterValue");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.QueryStringMapping.QueryStringParameterValue"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> QueryStringParameterValueSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_QueryStringParameterValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.QueryStringMapping, string>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.QueryStringMapping), base.Instance, "set_QueryStringParameterValue", typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ReflectionHttpParameterBuilder")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MReflectionHttpParameterBuilder
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder>
    {
        /// <summary>Initializes a new mole</summary>
        public MReflectionHttpParameterBuilder()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MReflectionHttpParameterBuilder(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.BuildInputParameterCollection"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> BuildInputParameterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildInputParameterCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "BuildInputParameterCollection");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.BuildOutputParameterCollection(System.String)"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, string, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> BuildOutputParameterCollectionString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildOutputParameterCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "BuildOutputParameterCollection", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.GenericParameterTypes"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type[]> GenericParameterTypesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_GenericParameterTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "get_GenericParameterTypes");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.HandleMethod"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Reflection.MethodInfo> HandleMethodGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HandleMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "get_HandleMethod");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.InputParameterTypes"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type[]> InputParameterTypesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameterTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "get_InputParameterTypes");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.OutputParameterType"/>
            /// </summary>
            internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type> OutputParameterTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameterType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                         (object)null, "get_OutputParameterType");
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MReflectionHttpParameterBuilder.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MReflectionHttpParameterBuilder.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.BuildInputParameterCollection"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> BuildInputParameterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildInputParameterCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, 
                                                          global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                     base.Instance, "BuildInputParameterCollection");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.BuildOutputParameterCollection(System.String)"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> BuildOutputParameterCollectionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildOutputParameterCollection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, 
                                                          string, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                     base.Instance, "BuildOutputParameterCollection", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.#ctor(System.Type)"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type> ConstructorType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                     (object)null, ".ctor", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.FindHandleMethod(System.Type,System.Type,System.Type[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type, global::System.Type[], global::System.Reflection.MethodInfo> FindHandleMethodTypeTypeTypeArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FindHandleMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), "FindHandleMethod", 
                                                                                        typeof(global::System.Type), typeof(global::System.Type), typeof(global::System.Type).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.GenericParameterTypes"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type[]> GenericParameterTypesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_GenericParameterTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), base.Instance, "get_GenericParameterTypes");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.GetGenericParameters(System.Type)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Type[]> GetGenericParametersType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetGenericParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), 
                     "GetGenericParameters", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.HandleMethod"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.MethodInfo> HandleMethodGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HandleMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Reflection.MethodInfo>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), base.Instance, "get_HandleMethod");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.InputParameterTypes"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type[]> InputParameterTypesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InputParameterTypes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), base.Instance, "get_InputParameterTypes");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder.OutputParameterType"/>
        /// </summary>
        internal mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> OutputParameterTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_OutputParameterType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder, global::System.Type>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder), base.Instance, "get_OutputParameterType");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = RequestContentHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MRequestContentHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler>
    {
        /// <summary>Initializes a new mole</summary>
        public MRequestContentHandler()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MRequestContentHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                         (object)null, "get_Formatters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                         (object)null, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MRequestContentHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MRequestContentHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.#ctor(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorHttpParameterIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), (object)null, 
                     ".ctor", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                              typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), base.Instance, "get_Formatters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                                                                                          base.Instance, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = ResponseContentHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MResponseContentHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler>
    {
        /// <summary>Initializes a new mole</summary>
        public MResponseContentHandler()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MResponseContentHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                         (object)null, "get_Formatters");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.Formatters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                         (object)null, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MResponseContentHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MResponseContentHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.#ctor(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.MediaTypeFormatter})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, mash::Microsoft.ApplicationServer.Http.Description.HttpParameter, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>> ConstructorHttpParameterIEnumerableOfMediaTypeFormatter
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), (object)null, 
                     ".ctor", typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter), 
                              typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, 
                                                                                                                                                 mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), base.Instance, "get_Formatters");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.Formatters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection> FormattersSetMediaTypeFormatterCollection
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Formatters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, 
                                                                                                                                                    mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                                                                                          base.Instance, "set_Formatters", typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler), 
                     base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.SR"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.SR))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = SR")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class MSR
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.SR>
    {
        /// <summary>Initializes a new mole</summary>
        public MSR()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MSR(mash::Microsoft.ApplicationServer.Http.SR instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ApplyClientBehaviorNotSupportedByHttpBehavior(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> ApplyClientBehaviorNotSupportedByHttpBehaviorObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyClientBehaviorNotSupportedByHttpBehavior", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ApplyClientBehaviorNotSupportedByHttpBehavior", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.AtLeastOneMediaTypeMappingAttributeRequired(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> AtLeastOneMediaTypeMappingAttributeRequiredObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AtLeastOneMediaTypeMappingAttributeRequired", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "AtLeastOneMediaTypeMappingAttributeRequired", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.AttributeRequiredOnConfigElementIfOtherAttributeSpecified(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> AttributeRequiredOnConfigElementIfOtherAttributeSpecifiedObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AttributeRequiredOnConfigElementIfOtherAttributeSpecified", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.SR), "AttributeRequiredOnConfigElementIfOtherAttributeSpecified", 
                                                                                        typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.AttributeRequiredOnConfigElement(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> AttributeRequiredOnConfigElementObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AttributeRequiredOnConfigElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "AttributeRequiredOnConfigElement", typeof(object), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MSR.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MSR.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.SR), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.CannotHaveNullInList(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> CannotHaveNullInListObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CannotHaveNullInList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "CannotHaveNullInList", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.CannotUseMediaRangeForSupportedMediaType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> CannotUseMediaRangeForSupportedMediaTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CannotUseMediaRangeForSupportedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "CannotUseMediaRangeForSupportedMediaType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.CannotUseNullValueType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> CannotUseNullValueTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CannotUseNullValueType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "CannotUseNullValueType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.CannotUseThisParameterType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> CannotUseThisParameterTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CannotUseThisParameterType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "CannotUseThisParameterType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ChannelFactoryNotSupportedByHttpMessageEncodingBindingElement(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> ChannelFactoryNotSupportedByHttpMessageEncodingBindingElementObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChannelFactoryNotSupportedByHttpMessageEncodingBindingElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ChannelFactoryNotSupportedByHttpMessageEncodingBindingElement", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ChannelShapeNotSupportedByHttpMessageEncodingBindingElement(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> ChannelShapeNotSupportedByHttpMessageEncodingBindingElementObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChannelShapeNotSupportedByHttpMessageEncodingBindingElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ChannelShapeNotSupportedByHttpMessageEncodingBindingElement", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ConfigInvalidBindingConfigurationName(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ConfigInvalidBindingConfigurationNameObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ConfigInvalidBindingConfigurationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ConfigInvalidBindingConfigurationName", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.#ctor"/>
        /// </summary>
        internal static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.SR> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.Culture"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Globalization.CultureInfo> CultureGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Culture", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_Culture");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.Culture"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Globalization.CultureInfo> CultureSetCultureInfo
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Culture", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "set_Culture", typeof(global::System.Globalization.CultureInfo));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.DefaultEndpointsServiceWithMultipleContracts(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> DefaultEndpointsServiceWithMultipleContractsObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefaultEndpointsServiceWithMultipleContracts", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "DefaultEndpointsServiceWithMultipleContracts", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.DefaultEndpointsServiceWithNoContract(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> DefaultEndpointsServiceWithNoContractObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefaultEndpointsServiceWithNoContract", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "DefaultEndpointsServiceWithNoContract", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.EncoderMessageVersionMismatch(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> EncoderMessageVersionMismatchObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EncoderMessageVersionMismatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "EncoderMessageVersionMismatch", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorHandlerNotFound(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpExampleGeneratorHandlerNotFoundObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpExampleGeneratorHandlerNotFound", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpExampleGeneratorHandlerNotFound", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorLanguage"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpExampleGeneratorLanguageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpExampleGeneratorLanguage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpExampleGeneratorLanguage");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorMaxDepthLevelReached(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpExampleGeneratorMaxDepthLevelReachedObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpExampleGeneratorMaxDepthLevelReached", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpExampleGeneratorMaxDepthLevelReached", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorSchemaObjectNotSupported(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpExampleGeneratorSchemaObjectNotSupportedObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpExampleGeneratorSchemaObjectNotSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpExampleGeneratorSchemaObjectNotSupported", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorStringContent"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpExampleGeneratorStringContentGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpExampleGeneratorStringContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpExampleGeneratorStringContent");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorThisElementContainsText"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpExampleGeneratorThisElementContainsTextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpExampleGeneratorThisElementContainsText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpExampleGeneratorThisElementContainsText");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageAdditionalRequestSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageAdditionalRequestSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageAdditionalRequestSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageAdditionalRequestSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageAdditionalResponseSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageAdditionalResponseSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageAdditionalResponseSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageAdditionalResponseSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageBody"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageBodyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageBody", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageBody");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageBodyIsEmpty(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageBodyIsEmptyObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageBodyIsEmpty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageBodyIsEmpty", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageBodyIsWrapped(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageBodyIsWrappedObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageBodyIsWrapped", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageBodyIsWrapped", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageCallbackText(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageCallbackTextObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageCallbackText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageCallbackText", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageCouldNotGenerateSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageCouldNotGenerateSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageCouldNotGenerateSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageCouldNotGenerateSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageDefaultDescription(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageDefaultDescriptionObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageDefaultDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageDefaultDescription", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageDescription"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageDescriptionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageDescription");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageEndpointNotFound"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageEndpointNotFoundGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageEndpointNotFound", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageEndpointNotFound");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageEndpointNotFoundWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageEndpointNotFoundWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageEndpointNotFoundWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageEndpointNotFoundWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageExample"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageExampleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageExample", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageExample");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageFailedToCreateErrorMessage"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageFailedToCreateErrorMessageGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageFailedToCreateErrorMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageFailedToCreateErrorMessage");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageFormat"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageFormatGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageFormat", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageFormat");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtom10Entry(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsAtom10EntryObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsAtom10Entry", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsAtom10Entry", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtom10Feed(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsAtom10FeedObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsAtom10Feed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsAtom10Feed", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtomPubCategoriesDocument(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsAtomPubCategoriesDocumentObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsAtomPubCategoriesDocument", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpPageIsAtomPubCategoriesDocument", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtomPubServiceDocument(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsAtomPubServiceDocumentObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsAtomPubServiceDocument", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsAtomPubServiceDocument", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsMessage(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsMessageObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsMessage", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsRSS20Feed(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsRSS20FeedObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsRSS20Feed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsRSS20Feed", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsStream(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsStreamObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsStream", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsSyndication(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsSyndicationObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsSyndication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsSyndication", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsXML(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageIsXMLObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageIsXML", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageIsXML", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageJsonRequest"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageJsonRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageJsonRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageJsonRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageJsonResponse"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageJsonResponseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageJsonResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageJsonResponse");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageMessageDirection"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageMessageDirectionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageMessageDirection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageMessageDirection");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageMethod"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageMethodGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageMethod");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageMethodNotAllowed"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageMethodNotAllowedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageMethodNotAllowed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageMethodNotAllowed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageMethodNotAllowedWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageMethodNotAllowedWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageMethodNotAllowedWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageMethodNotAllowedWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageNA"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageNAGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageNA", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageNA");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageNotSupportedInScripts"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageNotSupportedInScriptsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageNotSupportedInScripts", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageNotSupportedInScripts");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationMethod(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageOperationMethodObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageOperationMethod", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageOperationMethod", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationUri(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageOperationUriObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageOperationUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageOperationUri", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationsAt(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageOperationsAtObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageOperationsAt", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageOperationsAt", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageRedirect(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HelpPageRedirectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageRedirect", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageReferenceFor(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageReferenceForObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageReferenceFor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageReferenceFor", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequestErrorTitle"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageRequestErrorTitleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageRequestErrorTitle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageRequestErrorTitle");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequest"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequestSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageRequestSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageRequestSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageRequestSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageResponse"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageResponseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageResponse");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageResponseSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageResponseSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageResponseSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageResponseSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageSchema"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageSchemaGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageSchema", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageSchema");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageStaticText"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageStaticTextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageStaticText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageStaticText");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageTitleText"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageTitleTextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageTitleText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageTitleText");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageUnknown"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageUnknownGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageUnknown", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageUnknown");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageUri"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageUriGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageUri");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpPageValidElementOfType(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpPageValidElementOfTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpPageValidElementOfType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HelpPageValidElementOfType", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageXmlRequest"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageXmlRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageXmlRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageXmlRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpPageXmlResponse"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpPageXmlResponseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageXmlResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpPageXmlResponse");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequest"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HelpServerErrorProcessingRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpServerErrorProcessingRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HelpServerErrorProcessingRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithDetailsAndLink(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HelpServerErrorProcessingRequestWithDetailsAndLinkObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpServerErrorProcessingRequestWithDetailsAndLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpServerErrorProcessingRequestWithDetailsAndLink", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithDetails(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpServerErrorProcessingRequestWithDetailsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpServerErrorProcessingRequestWithDetails", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpServerErrorProcessingRequestWithDetails", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HelpServerErrorProcessingRequestWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HelpServerErrorProcessingRequestWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HelpServerErrorProcessingRequestWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HtmlPageEndpointNotFound"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HtmlPageEndpointNotFoundGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlPageEndpointNotFound", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HtmlPageEndpointNotFound");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageEndpointNotFoundWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HtmlPageEndpointNotFoundWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageEndpointNotFoundWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HtmlPageEndpointNotFoundWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HtmlPageMethodNotAllowed"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HtmlPageMethodNotAllowedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlPageMethodNotAllowed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HtmlPageMethodNotAllowed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageMethodNotAllowedWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HtmlPageMethodNotAllowedWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageMethodNotAllowedWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HtmlPageMethodNotAllowedWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageRedirect(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HtmlPageRedirectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageRedirect", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HtmlPageRedirect", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HtmlPageRequestErrorTitle"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HtmlPageRequestErrorTitleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlPageRequestErrorTitle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HtmlPageRequestErrorTitle");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequest"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HtmlPageServerErrorProcessingRequestGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlPageServerErrorProcessingRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HtmlPageServerErrorProcessingRequest");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithDetailsAndLink(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HtmlPageServerErrorProcessingRequestWithDetailsAndLinkObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageServerErrorProcessingRequestWithDetailsAndLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HtmlPageServerErrorProcessingRequestWithDetailsAndLink", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithDetails(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HtmlPageServerErrorProcessingRequestWithDetailsObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageServerErrorProcessingRequestWithDetails", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HtmlPageServerErrorProcessingRequestWithDetails", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithLink(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HtmlPageServerErrorProcessingRequestWithLinkObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HtmlPageServerErrorProcessingRequestWithLink", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HtmlPageServerErrorProcessingRequestWithLink", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.HtmlPageTitleText"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HtmlPageTitleTextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HtmlPageTitleText", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_HtmlPageTitleText");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpBehaviorBindingRequired(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpBehaviorBindingRequiredObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpBehaviorBindingRequired", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpBehaviorBindingRequired", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpBehaviorNotFoundWithEndpoint(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpBehaviorNotFoundWithEndpointObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpBehaviorNotFoundWithEndpoint", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpBehaviorNotFoundWithEndpoint", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpDescriptionPropertyImmutable(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpDescriptionPropertyImmutableObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpDescriptionPropertyImmutable", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpDescriptionPropertyImmutable", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointNotSupported(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpEndpointNotSupportedObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpEndpointNotSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpEndpointNotSupported", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointRequiredBinding(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpEndpointRequiredBindingObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpEndpointRequiredBinding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpEndpointRequiredBinding", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointRequiresHttpBinding(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpEndpointRequiresHttpBindingObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpEndpointRequiresHttpBinding", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpEndpointRequiresHttpBinding", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpErrorMessageNullResponse(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpErrorMessageNullResponseObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpErrorMessageNullResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpErrorMessageNullResponse", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpInstanceProviderNullRequest(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpInstanceProviderNullRequestObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpInstanceProviderNullRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpInstanceProviderNullRequest", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageConfigurationPropertyTypeMismatch(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageConfigurationPropertyTypeMismatchObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageConfigurationPropertyTypeMismatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageConfigurationPropertyTypeMismatch", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageEncoderFactoryDoesNotSupportSessionEncoder(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpMessageEncoderFactoryDoesNotSupportSessionEncoderObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageEncoderFactoryDoesNotSupportSessionEncoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageEncoderFactoryDoesNotSupportSessionEncoder", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageFormatterMessageVersion(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageFormatterMessageVersionObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageFormatterMessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageFormatterMessageVersion", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageFormatterNullMessage(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageFormatterNullMessageObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageFormatterNullMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageFormatterNullMessage", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelFactoryNotSupported(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpMessageHandlerChannelFactoryNotSupportedObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerChannelFactoryNotSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageHandlerChannelFactoryNotSupported", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelFactoryNullPipeline(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpMessageHandlerChannelFactoryNullPipelineObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerChannelFactoryNullPipeline", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageHandlerChannelFactoryNullPipeline", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelInvalidChannelShape(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageHandlerChannelInvalidChannelShapeObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerChannelInvalidChannelShape", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageHandlerChannelInvalidChannelShape", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelInvalidResponse(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageHandlerChannelInvalidResponseObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerChannelInvalidResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageHandlerChannelInvalidResponse", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerInvalidMessage(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpMessageHandlerInvalidMessageObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerInvalidMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageHandlerInvalidMessage", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerMissingProperty(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpMessageHandlerMissingPropertyObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerMissingProperty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageHandlerMissingProperty", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerRequestContextReplyPathMismatch1(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpMessageHandlerRequestContextReplyPathMismatch1ObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerRequestContextReplyPathMismatch1", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageHandlerRequestContextReplyPathMismatch1", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerRequestContextReplyPathMismatch2(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> HttpMessageHandlerRequestContextReplyPathMismatch2ObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerRequestContextReplyPathMismatch2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpMessageHandlerRequestContextReplyPathMismatch2", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerTypeNotSupported(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageHandlerTypeNotSupportedObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageHandlerTypeNotSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageHandlerTypeNotSupported", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpMessageInspectorNullMessage(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpMessageInspectorNullMessageObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpMessageInspectorNullMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpMessageInspectorNullMessage", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationDescriptionNullOperationDescription(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpOperationDescriptionNullOperationDescriptionObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationDescriptionNullOperationDescription", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationDescriptionNullOperationDescription", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerFailedToConvertInputString(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> HttpOperationHandlerFailedToConvertInputStringObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerFailedToConvertInputString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerFailedToConvertInputString", typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerFailedToGetInnerContent(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, object, string> HttpOperationHandlerFailedToGetInnerContentObjectObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerFailedToGetInnerContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerFailedToGetInnerContent", typeof(object), typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerProducedWrongNumberOfValues(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> HttpOperationHandlerProducedWrongNumberOfValuesObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerProducedWrongNumberOfValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerProducedWrongNumberOfValues", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerProducedWrongType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> HttpOperationHandlerProducedWrongTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerProducedWrongType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerProducedWrongType", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerReceivedWrongNumberOfValues(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> HttpOperationHandlerReceivedWrongNumberOfValuesObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerReceivedWrongNumberOfValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerReceivedWrongNumberOfValues", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerReceivedWrongType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> HttpOperationHandlerReceivedWrongTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationHandlerReceivedWrongType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpOperationHandlerReceivedWrongType", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationSelectorNullOperation(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpOperationSelectorNullOperationObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationSelectorNullOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpOperationSelectorNullOperation", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpOperationSelectorNullRequest(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> HttpOperationSelectorNullRequestObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpOperationSelectorNullRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpOperationSelectorNullRequest", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpResponseExceptionMessage(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpResponseExceptionMessageObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpResponseExceptionMessage", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "HttpResponseExceptionMessage", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.HttpServiceEndpointCannotHaveMessageHeaders(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> HttpServiceEndpointCannotHaveMessageHeadersObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HttpServiceEndpointCannotHaveMessageHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "HttpServiceEndpointCannotHaveMessageHeaders", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidManualAddressingValue(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> InvalidManualAddressingValueObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidManualAddressingValue", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidManualAddressingValue", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMediaRange(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> InvalidMediaRangeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMediaRange", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMediaType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> InvalidMediaTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMediaType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageContractParameter(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> InvalidMessageContractParameterObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMessageContractParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMessageContractParameter", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageEncodingBindingElement(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> InvalidMessageEncodingBindingElementObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMessageEncodingBindingElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMessageEncodingBindingElement", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageParameter(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> InvalidMessageParameterObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMessageParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMessageParameter", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageVersion(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> InvalidMessageVersionObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidMessageVersion", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidMessageVersion", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidNullMediaRange(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> InvalidNullMediaRangeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidNullMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidNullMediaRange", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidOperationWithMessageHeaders(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> InvalidOperationWithMessageHeadersObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidOperationWithMessageHeaders", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "InvalidOperationWithMessageHeaders", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidParameterForContentHandler(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> InvalidParameterForContentHandlerObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidParameterForContentHandler", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidParameterForContentHandler", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidRequestContentParameter(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> InvalidRequestContentParameterObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidRequestContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidRequestContentParameter", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidResponseContentParameter(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> InvalidResponseContentParameterObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidResponseContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidResponseContentParameter", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidReturnValueContentParameter(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> InvalidReturnValueContentParameterObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidReturnValueContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidReturnValueContentParameter", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidUriScheme(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> InvalidUriSchemeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidUriScheme", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidUriScheme", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.InvalidXmlSerializerFormatAttribute(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> InvalidXmlSerializerFormatAttributeObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InvalidXmlSerializerFormatAttribute", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "InvalidXmlSerializerFormatAttribute", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MediaRangeAlreadyAdded(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> MediaRangeAlreadyAddedObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MediaRangeAlreadyAdded", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MediaRangeAlreadyAdded", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MediaRangeAlreadyMapped(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> MediaRangeAlreadyMappedObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MediaRangeAlreadyMapped", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MediaRangeAlreadyMapped", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MediaTypeCanNotBeMediaRange(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> MediaTypeCanNotBeMediaRangeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MediaTypeCanNotBeMediaRange", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MediaTypeCanNotBeMediaRange", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MediaTypeMustBeSetBeforeWrite(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> MediaTypeMustBeSetBeforeWriteObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MediaTypeMustBeSetBeforeWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MediaTypeMustBeSetBeforeWrite", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpRequestMessageWithKnownContentLength(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> MessageBodyIsHttpRequestMessageWithKnownContentLengthObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MessageBodyIsHttpRequestMessageWithKnownContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MessageBodyIsHttpRequestMessageWithKnownContentLength", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpRequestMessageWithUnknownContentLength"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MessageBodyIsHttpRequestMessageWithUnknownContentLengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageBodyIsHttpRequestMessageWithUnknownContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_MessageBodyIsHttpRequestMessageWithUnknownContentLength");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpResponseMessageWithKnownContentLength(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> MessageBodyIsHttpResponseMessageWithKnownContentLengthObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MessageBodyIsHttpResponseMessageWithKnownContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MessageBodyIsHttpResponseMessageWithKnownContentLength", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpResponseMessageWithUnknownContentLength"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MessageBodyIsHttpResponseMessageWithUnknownContentLengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageBodyIsHttpResponseMessageWithUnknownContentLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_MessageBodyIsHttpResponseMessageWithUnknownContentLength");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.MessageClosed"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MessageClosedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MessageClosed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_MessageClosed");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MessageInvalidForHttpMessageEncoder(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> MessageInvalidForHttpMessageEncoderObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MessageInvalidForHttpMessageEncoder", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MessageInvalidForHttpMessageEncoder", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MessageReadWriteCopyNotSupported(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> MessageReadWriteCopyNotSupportedObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MessageReadWriteCopyNotSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MessageReadWriteCopyNotSupported", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MultipleOperationsWithSameMethodAndUriTemplate(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> MultipleOperationsWithSameMethodAndUriTemplateObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MultipleOperationsWithSameMethodAndUriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MultipleOperationsWithSameMethodAndUriTemplate", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MultipleRequestContentParameters(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> MultipleRequestContentParametersObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MultipleRequestContentParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MultipleRequestContentParameters", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MultipleResponseContentParameters(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> MultipleResponseContentParametersObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MultipleResponseContentParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MultipleResponseContentParameters", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MultipleTypeParametersForHttpContentType(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> MultipleTypeParametersForHttpContentTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MultipleTypeParametersForHttpContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "MultipleTypeParametersForHttpContentType", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.MultipleWebAttributes(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> MultipleWebAttributesObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MultipleWebAttributes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "MultipleWebAttributes", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NoReadSerializerAvailable(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> NoReadSerializerAvailableObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NoReadSerializerAvailable", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "NoReadSerializerAvailable", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NoWriteSerializerAvailable(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> NoWriteSerializerAvailableObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NoWriteSerializerAvailable", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "NoWriteSerializerAvailable", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NonHttpMessageMustBeEmpty(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> NonHttpMessageMustBeEmptyObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NonHttpMessageMustBeEmpty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "NonHttpMessageMustBeEmpty", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NonNullUriRequiredForMediaTypeMapping(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> NonNullUriRequiredForMediaTypeMappingObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NonNullUriRequiredForMediaTypeMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "NonNullUriRequiredForMediaTypeMapping", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NonNullUriRequiredForQueryStringMapping(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> NonNullUriRequiredForQueryStringMappingObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NonNullUriRequiredForQueryStringMapping", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "NonNullUriRequiredForQueryStringMapping", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.NullValueInArrayParameterFromGetParameters(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> NullValueInArrayParameterFromGetParametersObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NullValueInArrayParameterFromGetParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "NullValueInArrayParameterFromGetParameters", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ObjectAndTypeDisagree(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ObjectAndTypeDisagreeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ObjectAndTypeDisagree", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ObjectAndTypeDisagree", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElementObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.OperationCanNotReturnHttpReferenceType(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> OperationCanNotReturnHttpReferenceTypeObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OperationCanNotReturnHttpReferenceType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "OperationCanNotReturnHttpReferenceType", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.OperationCanNotReturnXmlAndBeJson(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> OperationCanNotReturnXmlAndBeJsonObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OperationCanNotReturnXmlAndBeJson", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "OperationCanNotReturnXmlAndBeJson", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ParameterMustBeLessThanOrEqualSecondParameter(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ParameterMustBeLessThanOrEqualSecondParameterObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ParameterMustBeLessThanOrEqualSecondParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ParameterMustBeLessThanOrEqualSecondParameter", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerTypeOnlyOutputParameter(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> RequestHandlerTypeOnlyOutputParameterObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestHandlerTypeOnlyOutputParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "RequestHandlerTypeOnlyOutputParameter", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> RequestHandlerWithMultipleTypeOnlyBindingsObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestHandlerWithMultipleTypeOnlyBindings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "RequestHandlerWithMultipleTypeOnlyBindings", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> RequestHandlerWithNoPossibleBindingForNonStringConvertableTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestHandlerWithNoPossibleBindingForNonStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "RequestHandlerWithNoPossibleBindingForNonStringConvertableType", typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> RequestHandlerWithNoPossibleBindingForStringConvertableTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestHandlerWithNoPossibleBindingForStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "RequestHandlerWithNoPossibleBindingForStringConvertableType", typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestMissingHttpRequestMessageProperty(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> RequestMissingHttpRequestMessagePropertyObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestMissingHttpRequestMessageProperty", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "RequestMissingHttpRequestMessageProperty", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.RequestMissingToHeader"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> RequestMissingToHeaderGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RequestMissingToHeader", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_RequestMissingToHeader");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestParameterWithContentType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> RequestParameterWithContentTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestParameterWithContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "RequestParameterWithContentType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.RequestParameterWithIsContentParameterSet(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> RequestParameterWithIsContentParameterSetObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RequestParameterWithIsContentParameterSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "RequestParameterWithIsContentParameterSet", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.ResourceManager"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Resources.ResourceManager> ResourceManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ResourceManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_ResourceManager");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerTypeOnlyOutputParameter(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ResponseHandlerTypeOnlyOutputParameterObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseHandlerTypeOnlyOutputParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ResponseHandlerTypeOnlyOutputParameter", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> ResponseHandlerWithMultipleTypeOnlyBindingsObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseHandlerWithMultipleTypeOnlyBindings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ResponseHandlerWithMultipleTypeOnlyBindings", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> ResponseHandlerWithNoPossibleBindingForNonStringConvertableTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseHandlerWithNoPossibleBindingForNonStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ResponseHandlerWithNoPossibleBindingForNonStringConvertableType", typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, string> ResponseHandlerWithNoPossibleBindingForStringConvertableTypeObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseHandlerWithNoPossibleBindingForStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ResponseHandlerWithNoPossibleBindingForStringConvertableType", typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseMustReferenceRequest(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ResponseMustReferenceRequestObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseMustReferenceRequest", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ResponseMustReferenceRequest", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseParameterWithContentType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ResponseParameterWithContentTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseParameterWithContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ResponseParameterWithContentType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseParameterWithIsContentParameterSet(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> ResponseParameterWithIsContentParameterSetObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseParameterWithIsContentParameterSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ResponseParameterWithIsContentParameterSet", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ResponseSinkHandlerWithNoHttpResponseMessageSource(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> ResponseSinkHandlerWithNoHttpResponseMessageSourceObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResponseSinkHandlerWithNoHttpResponseMessageSource", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ResponseSinkHandlerWithNoHttpResponseMessageSource", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ReturnValueWithContentType(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, string> ReturnValueWithContentTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReturnValueWithContentType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ReturnValueWithContentType", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ReturnValueWithIsContentParameterSet(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ReturnValueWithIsContentParameterSetObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReturnValueWithIsContentParameterSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ReturnValueWithIsContentParameterSet", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.SerializerCannotSerializeType(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> SerializerCannotSerializeTypeObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SerializerCannotSerializeType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "SerializerCannotSerializeType", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationFailedToConvertInputString(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationFailedToConvertInputStringObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationFailedToConvertInputString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationFailedToConvertInputString", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationFailedToGetInnerContent(System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, string> ServiceOperationFailedToGetInnerContentObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationFailedToGetInnerContent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ServiceOperationFailedToGetInnerContent", typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationProducedWrongNumberOfValues(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> ServiceOperationProducedWrongNumberOfValuesObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationProducedWrongNumberOfValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationProducedWrongNumberOfValues", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationProducedWrongType(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationProducedWrongTypeObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationProducedWrongType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationProducedWrongType", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationReceivedWrongNumberOfValues(System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, string> ServiceOperationReceivedWrongNumberOfValuesObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationReceivedWrongNumberOfValues", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationReceivedWrongNumberOfValues", 
                     typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationReceivedWrongType(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationReceivedWrongTypeObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationReceivedWrongType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationReceivedWrongType", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationTypeOnlyOutputParameter(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ServiceOperationTypeOnlyOutputParameterObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationTypeOnlyOutputParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ServiceOperationTypeOnlyOutputParameter", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationWithMultipleTypeOnlyBindingsObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationWithMultipleTypeOnlyBindings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationWithMultipleTypeOnlyBindings", 
                     typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationWithNoPossibleBindingForNonStringConvertableTypeObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationWithNoPossibleBindingForNonStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationWithNoPossibleBindingForNonStringConvertableType", 
                                                                                        typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, string> ServiceOperationWithNoPossibleBindingForStringConvertableTypeObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ServiceOperationWithNoPossibleBindingForStringConvertableType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.SR), "ServiceOperationWithNoPossibleBindingForStringConvertableType", 
                                                                                        typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.UndefinedMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UndefinedMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UndefinedMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_UndefinedMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.SR.UnknownName"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UnknownNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UnknownName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), "get_UnknownName");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.UnknownRequestContentParameter(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, object, object, object, object, object, object, string> UnknownRequestContentParameterObjectObjectObjectObjectObjectObjectObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UnknownRequestContentParameter", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "UnknownRequestContentParameter", typeof(object), typeof(object), 
                     typeof(object), typeof(object), typeof(object), typeof(object), typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.UriTemplateDoesNotMatchUri(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> UriTemplateDoesNotMatchUriObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UriTemplateDoesNotMatchUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "UriTemplateDoesNotMatchUri", typeof(object), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.SR.ValueConversionFailed(System.Object,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object, string> ValueConversionFailedObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ValueConversionFailed", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.SR), 
                     "ValueConversionFailed", typeof(object), typeof(object));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = StandardHttpResponseMessageBuilder")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MStandardHttpResponseMessageBuilder
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MStandardHttpResponseMessageBuilder()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MStandardHttpResponseMessageBuilder.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MStandardHttpResponseMessageBuilder.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateAcceptedResponse(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> CreateAcceptedResponseHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateAcceptedResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), 
                     "CreateAcceptedResponse", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, mnh::System.Net.Http.HttpResponseMessage> CreateBadRequestResponseHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateBadRequestResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), 
                     "CreateBadRequestResponse", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateInternalServerErrorResponse(System.Net.Http.HttpRequestMessage,System.Exception,System.Boolean,System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Exception, bool, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> CreateInternalServerErrorResponseHttpRequestMessageExceptionBooleanUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInternalServerErrorResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), "CreateInternalServerErrorResponse", 
                                                                                     typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Exception), typeof(bool), typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateMethodNotAllowedResponse(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable`1{System.Net.Http.HttpMethod},System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpMethod>, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> CreateMethodNotAllowedResponseHttpRequestMessageIEnumerableOfHttpMethodUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateMethodNotAllowedResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), "CreateMethodNotAllowedResponse", 
                                                                                     typeof(mnh::System.Net.Http.HttpRequestMessage), 
                                                                                     typeof(global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpMethod>), typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage,System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> CreateNotFoundResponseHttpRequestMessageUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateNotFoundResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), 
                     "CreateNotFoundResponse", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateTemporaryRedirectResponse(System.Net.Http.HttpRequestMessage,System.Uri,System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri, global::System.Uri, mnh::System.Net.Http.HttpResponseMessage> CreateTemporaryRedirectResponseHttpRequestMessageUriUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateTemporaryRedirectResponse", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, 
                                                                                     typeof(mash::Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder), "CreateTemporaryRedirectResponse", 
                                                                                     typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(global::System.Uri), typeof(global::System.Uri));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.TrailingSlashModeHelper"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashModeHelper))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = TrailingSlashModeHelper")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MTrailingSlashModeHelper
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MTrailingSlashModeHelper()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashModeHelper))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MTrailingSlashModeHelper.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MTrailingSlashModeHelper.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashModeHelper), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.TrailingSlashModeHelper.IsDefined(Microsoft.ApplicationServer.Http.TrailingSlashMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode, bool> IsDefinedTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsDefined", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashModeHelper), 
                     "IsDefined", typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UriAndMethodOperationSelector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUriAndMethodOperationSelector
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector>
    {
        /// <summary>Initializes a new mole</summary>
        public MUriAndMethodOperationSelector()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUriAndMethodOperationSelector(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.HelpPageUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri> HelpPageUriGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                         (object)null, "get_HelpPageUri");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.HelpPageUri"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri> HelpPageUriSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpPageUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                         (object)null, "set_HelpPageUri", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, string> OnSelectOperationHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                         (object)null, "OnSelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnTrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> OnTrySelectOperationHttpRequestMessageStringOutBooleanOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnTrySelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), (object)null, 
                         "OnTrySelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string).MakeByRefType(), typeof(bool).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.RetrieveAllowedMethodsIfAny(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpMethod>> RetrieveAllowedMethodsIfAnyHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RetrieveAllowedMethodsIfAny", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                         (object)null, "RetrieveAllowedMethodsIfAny", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                         (object)null, "get_TrailingSlashMode");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> TrySelectOperationHttpRequestMessageStringOutBooleanOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), (object)null, 
                         "TrySelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string).MakeByRefType(), typeof(bool).MakeByRefType());
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriAndMethodOperationSelector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriAndMethodOperationSelector.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriAndMethodOperationSelector Bind(ssm::System.ServiceModel.Dispatcher.IDispatchOperationSelector target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, 
                                                                  global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriAndMethodOperationSelector, 
                                                                  ssm::System.ServiceModel.Dispatcher.IDispatchOperationSelector>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.BuildUriDifferingByTrailingSlash(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Uri> BuildUriDifferingByTrailingSlashHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildUriDifferingByTrailingSlash", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                     "BuildUriDifferingByTrailingSlash", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.CanUriMatch(System.UriTemplateTable,System.Uri,System.String@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<ssm::System.UriTemplateTable, global::System.Uri, string, bool> CanUriMatchUriTemplateTableUriStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CanUriMatch", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), "CanUriMatch", 
                     typeof(ssm::System.UriTemplateTable), typeof(global::System.Uri), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.#ctor(System.Uri,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>> ConstructorUriIEnumerableOfHttpOperationDescription
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), (object)null, 
                     ".ctor", typeof(global::System.Uri), 
                              typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.#ctor(System.Uri,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription},Microsoft.ApplicationServer.Http.TrailingSlashMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> ConstructorUriIEnumerableOfHttpOperationDescriptionTrailingSlashMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), (object)null, 
                     ".ctor", typeof(global::System.Uri), 
                     typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>), 
                     typeof(mash::Microsoft.ApplicationServer.Http.TrailingSlashMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.GenerateMethodSpecificTables(System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription},System.Uri,System.String@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, global::System.Uri, string, global::System.Collections.Generic.Dictionary<mnh::System.Net.Http.HttpMethod, ssm::System.UriTemplateTable>> GenerateMethodSpecificTablesIEnumerableOfHttpOperationDescriptionUriStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GenerateMethodSpecificTables", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, 
                                                                                        typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), "GenerateMethodSpecificTables", 
                                                                                        typeof(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>), 
                                                                                        typeof(global::System.Uri), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.HelpPageUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> HelpPageUriGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HelpPageUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), base.Instance, "get_HelpPageUri");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.HelpPageUri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> HelpPageUriSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_HelpPageUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, global::System.Uri>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                     base.Instance, "set_HelpPageUri", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string> OnSelectOperationHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, 
                                                          mnh::System.Net.Http.HttpRequestMessage, string>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                     base.Instance, "OnSelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnTrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> OnTrySelectOperationHttpRequestMessageStringOutBooleanOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnTrySelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                   string, bool, bool>(value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), base.Instance, 
                     "OnTrySelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string).MakeByRefType(), typeof(bool).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.RetrieveAllowedMethodsIfAny(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpMethod>> RetrieveAllowedMethodsIfAnyHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RetrieveAllowedMethodsIfAny", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, 
                                                          mnh::System.Net.Http.HttpRequestMessage, global::System.Collections.Generic.IEnumerable<mnh::System.Net.Http.HttpMethod>>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), 
                     base.Instance, "RetrieveAllowedMethodsIfAny", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.TrailingSlashMode> TrailingSlashModeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TrailingSlashMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, 
                                                          mash::Microsoft.ApplicationServer.Http.TrailingSlashMode>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), base.Instance, "get_TrailingSlashMode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> TrySelectOperationHttpRequestMessageStringOutBooleanOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TrySelectOperation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry
                                                                                                  <mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector, mnh::System.Net.Http.HttpRequestMessage, 
                                                                                                   string, bool, bool>(value)), typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector), base.Instance, 
                     "TrySelectOperation", typeof(mnh::System.Net.Http.HttpRequestMessage), typeof(string).MakeByRefType(), typeof(bool).MakeByRefType());
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.UriExtensionMethods"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.UriExtensionMethods))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UriExtensionMethods")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal sealed partial class MUriExtensionMethods
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MUriExtensionMethods()
        : base(typeof(mash::Microsoft.ApplicationServer.Http.UriExtensionMethods))
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUriExtensionMethods.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUriExtensionMethods.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.UriExtensionMethods), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriExtensionMethods.GetHostNormalizedUri(System.Uri,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, mnh::System.Net.Http.HttpRequestMessage, global::System.Uri> GetHostNormalizedUriUriHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHostNormalizedUri", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriExtensionMethods), 
                     "GetHostNormalizedUri", typeof(global::System.Uri), typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.UriPathExtensionMapping"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UriPathExtensionMapping")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUriPathExtensionMapping
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping>
    {
        /// <summary>Initializes a new mole</summary>
        public MUriPathExtensionMapping()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUriPathExtensionMapping(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.Initialize(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string> InitializeString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                         (object)null, "Initialize", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                         (object)null, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.UriPathExtension"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string> UriPathExtensionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UriPathExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                         (object)null, "get_UriPathExtension");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.UriPathExtension"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string> UriPathExtensionSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UriPathExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                         (object)null, "set_UriPathExtension", typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUriPathExtensionMapping.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUriPathExtensionMapping.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string, mnh::System.Net.Http.Headers.MediaTypeHeaderValue> ConstructorStringMediaTypeHeaderValue
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), (object)null, 
                     ".ctor", typeof(string), typeof(mnh::System.Net.Http.Headers.MediaTypeHeaderValue));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.#ctor(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string, string> ConstructorStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), (object)null, 
                     ".ctor", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.GetUriPathExtensionOrNull(System.Uri)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string> GetUriPathExtensionOrNullUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetUriPathExtensionOrNull", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                     "GetUriPathExtensionOrNull", typeof(global::System.Uri));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.Initialize(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InitializeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Initialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string>(value)
                                                                                                                   ), typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), base.Instance, "Initialize", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, mnh::System.Net.Http.HttpRequestMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpRequestMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnSupportsMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, mnh::System.Net.Http.HttpResponseMessage, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), 
                     base.Instance, "OnSupportsMediaType", typeof(mnh::System.Net.Http.HttpResponseMessage));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.UriPathExtension"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UriPathExtensionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UriPathExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string>(value)
                                                                                                                ), typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), base.Instance, "get_UriPathExtension");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.UriPathExtensionMapping.UriPathExtension"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> UriPathExtensionSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UriPathExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping, string>(value)
                                                                                                                   ), typeof(mash::Microsoft.ApplicationServer.Http.UriPathExtensionMapping), base.Instance, "set_UriPathExtension", typeof(string));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UriTemplateHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUriTemplateHandler
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler>
    {
        /// <summary>Initializes a new mole</summary>
        public MUriTemplateHandler()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUriTemplateHandler(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.BaseAddress"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Uri> BaseAddressGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "get_BaseAddress");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.BaseAddress"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Uri> BaseAddressSetUri
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "set_BaseAddress", typeof(global::System.Uri));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetInputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "OnGetInputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetOutputParameters"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "OnGetOutputParameters");
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnHandle(System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, object[], object[]> OnHandleObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "OnHandle", typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, ssm::System.UriTemplate> UriTemplateGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "get_UriTemplate");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, ssm::System.UriTemplate> UriTemplateSetUriTemplate
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                         (object)null, "set_UriTemplate", typeof(ssm::System.UriTemplate));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.BaseAddress"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> BaseAddressGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Uri>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), base.Instance, "get_BaseAddress");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.BaseAddress"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Uri> BaseAddressSetUri
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_BaseAddress", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Uri>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                     base.Instance, "set_BaseAddress", typeof(global::System.Uri));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriTemplateHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.MUriTemplateHandler.Behavior =
              mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType
                    (typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.#ctor(System.Uri,System.UriTemplate)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, global::System.Uri, ssm::System.UriTemplate> ConstructorUriUriTemplate
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), (object)null, 
                     ".ctor", typeof(global::System.Uri), typeof(ssm::System.UriTemplate));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetInputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), base.Instance, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnGetOutputParameters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, 
                                                                                                                                                    global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>(value)), 
                                                                                          typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), base.Instance, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, object[], object[]>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), base.Instance, "OnHandle", typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.UriTemplate> UriTemplateGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_UriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, ssm::System.UriTemplate>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), base.Instance, "get_UriTemplate");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.UriTemplate> UriTemplateSetUriTemplate
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_UriTemplate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler, ssm::System.UriTemplate>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler), 
                     base.Instance, "set_UriTemplate", typeof(ssm::System.UriTemplate));
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.UrlQueryComposer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = UrlQueryComposer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MUrlQueryComposer
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.UrlQueryComposer>
    {
        /// <summary>Initializes a new mole</summary>
        public MUrlQueryComposer()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MUrlQueryComposer(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UrlQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.UrlQueryComposer, global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> ComposeQueryIEnumerableString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ComposeQuery", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer), (object)null, 
                         "ComposeQuery", typeof(global::System.Collections.IEnumerable), typeof(string));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUrlQueryComposer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MUrlQueryComposer.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::Microsoft.ApplicationServer.Http.Moles.MUrlQueryComposer Bind(mash::Microsoft.ApplicationServer.Http.IQueryComposer target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<mash::Microsoft.ApplicationServer.Http.UrlQueryComposer, 
                                                                  global::Microsoft.ApplicationServer.Http.Moles.MUrlQueryComposer, mash::Microsoft.ApplicationServer.Http.IQueryComposer>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UrlQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> ComposeQueryIEnumerableString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ComposeQuery", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.UrlQueryComposer, global::System.Collections.IEnumerable, 
                                                          string, global::System.Collections.IEnumerable>(value)), typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer), base.Instance, 
                     "ComposeQuery", typeof(global::System.Collections.IEnumerable), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.UrlQueryComposer.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.UrlQueryComposer> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer), (object)null, ".ctor");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Mole type of <see cref="T:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = XmlMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MXmlMediaTypeFormatter
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter>
    {
        /// <summary>Initializes a new mole</summary>
        public MXmlMediaTypeFormatter()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MXmlMediaTypeFormatter(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.CreateDefaultSerializer(System.Type,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool, object> CreateDefaultSerializerTypeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "CreateDefaultSerializer", typeof(global::System.Type), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.GetSerializerForType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> GetSerializerForTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetSerializerForType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "GetSerializerForType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanReadType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool> OnCanReadTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "OnCanReadType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanWriteType(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool> OnCanWriteTypeType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "OnCanWriteType", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "OnReadFromStream", typeof(global::System.Type), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, "OnWriteToStream", 
                         typeof(global::System.Type), typeof(object), 
                         typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.RemoveSerializer(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool> RemoveSerializerType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "RemoveSerializer", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializerInternal(System.Type,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> SetSerializerInternalTypeObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializerInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "SetSerializerInternal", typeof(global::System.Type), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, srs::System.Runtime.Serialization.XmlObjectSerializer> SetSerializerTypeXmlObjectSerializer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "SetSerializer", typeof(global::System.Type), typeof(srs::System.Runtime.Serialization.XmlObjectSerializer));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, global::System.Xml.Serialization.XmlSerializer, bool> SetSerializerTypeXmlSerializerBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "SetSerializer", typeof(global::System.Type), typeof(global::System.Xml.Serialization.XmlSerializer), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void SetSerializerXmlObjectSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, srs::System.Runtime.Serialization.XmlObjectSerializer> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                     "SetSerializer", gma, typeof(srs::System.Runtime.Serialization.XmlObjectSerializer));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)"/>
            /// </summary>
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            public static void SetSerializerXmlSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializer> mole)
            {
                global::System.Type[] gma = new global::System.Type[1];
                gma[0] = typeof(T);
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                    ((global::System.Delegate)mole, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                     "SetSerializer", gma, typeof(global::System.Xml.Serialization.XmlSerializer));
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.VerifyAndSetSerializer(System.Type,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> VerifyAndSetSerializerTypeObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, 
                         "VerifyAndSetSerializer", typeof(global::System.Type), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlReaderSettings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlReaderSettings> XmlReaderSettingsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlReaderSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "get_XmlReaderSettings");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlReaderSettings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlReaderSettings> XmlReaderSettingsSetXmlReaderSettings
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlReaderSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "set_XmlReaderSettings", typeof(global::System.Xml.XmlReaderSettings));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlSerializerNamespaces"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializerNamespaces> XmlSerializerNamespacesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlSerializerNamespaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "get_XmlSerializerNamespaces");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlSerializerNamespaces"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializerNamespaces> XmlSerializerNamespacesSetXmlSerializerNamespaces
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlSerializerNamespaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "set_XmlSerializerNamespaces", typeof(global::System.Xml.Serialization.XmlSerializerNamespaces));
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlWriterSettings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlWriterSettings> XmlWriterSettingsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlWriterSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "get_XmlWriterSettings");
                }
            }

            /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlWriterSettings"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlWriterSettings> XmlWriterSettingsSetXmlWriterSettings
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlWriterSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "set_XmlWriterSettings", typeof(global::System.Xml.XmlWriterSettings));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;GetSerializerForType&gt;b__5(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> _GetSerializerForTypeb__5Type
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<GetSerializerForType>b__5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "<GetSerializerForType>b__5", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;OnCanReadType&gt;b__1(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> _OnCanReadTypeb__1Type
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanReadType>b__1", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "<OnCanReadType>b__1", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;OnCanWriteType&gt;b__2(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object> _OnCanWriteTypeb__2Type
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanWriteType>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                         (object)null, "<OnCanWriteType>b__2", typeof(global::System.Type));
                }
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MXmlMediaTypeFormatter.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::Microsoft.ApplicationServer.Http.Moles.MXmlMediaTypeFormatter.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.CreateDefaultSerializer(System.Type,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool, object> CreateDefaultSerializerTypeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                     "CreateDefaultSerializer", typeof(global::System.Type), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.DefaultMediaType"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.Headers.MediaTypeHeaderValue> DefaultMediaTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DefaultMediaType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), "get_DefaultMediaType");
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.GetSerializerForType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object> GetSerializerForTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetSerializerForType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "GetSerializerForType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanReadType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "OnCanReadType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnCanWriteType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "OnCanWriteType", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnReadFromStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "OnReadFromStream", typeof(global::System.Type), 
                                                                                                                                                          typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnWriteToStream", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object, 
                                                          global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "OnWriteToStream", 
                     typeof(global::System.Type), typeof(object), 
                     typeof(global::System.IO.Stream), typeof(mnh::System.Net.Http.Headers.HttpContentHeaders), typeof(global::System.Net.TransportContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.RemoveSerializer(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> RemoveSerializerType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "RemoveSerializer", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializerInternal(System.Type,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object> SetSerializerInternalTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializerInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                     "SetSerializerInternal", typeof(global::System.Type), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, srs::System.Runtime.Serialization.XmlObjectSerializer> SetSerializerTypeXmlObjectSerializer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, 
                                                                                                                                                 global::System.Type, srs::System.Runtime.Serialization.XmlObjectSerializer>(value)), 
                                                                                       typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                                                                                       "SetSerializer", typeof(global::System.Type), typeof(srs::System.Runtime.Serialization.XmlObjectSerializer));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, global::System.Xml.Serialization.XmlSerializer, bool> SetSerializerTypeXmlSerializerBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, 
                                                          global::System.Xml.Serialization.XmlSerializer, bool>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                     "SetSerializer", typeof(global::System.Type), typeof(global::System.Xml.Serialization.XmlSerializer), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void SetSerializerXmlObjectSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<srs::System.Runtime.Serialization.XmlObjectSerializer> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, srs::System.Runtime.Serialization.XmlObjectSerializer>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                 "SetSerializer", gma, typeof(srs::System.Runtime.Serialization.XmlObjectSerializer));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
        public void SetSerializerXmlSerializer<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.Serialization.XmlSerializer> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMolePublicInstance
                ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                             .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializer>(mole)), 
                 typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                 "SetSerializer", gma, typeof(global::System.Xml.Serialization.XmlSerializer));
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.VerifyAndSetSerializer(System.Type,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object> VerifyAndSetSerializerTypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyAndSetSerializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, 
                     "VerifyAndSetSerializer", typeof(global::System.Type), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlReaderSettings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlReaderSettings> XmlReaderSettingsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlReaderSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlReaderSettings>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "get_XmlReaderSettings");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlReaderSettings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlReaderSettings> XmlReaderSettingsSetXmlReaderSettings
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlReaderSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlReaderSettings>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "set_XmlReaderSettings", typeof(global::System.Xml.XmlReaderSettings));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlSerializerNamespaces"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.Serialization.XmlSerializerNamespaces> XmlSerializerNamespacesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlSerializerNamespaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializerNamespaces>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "get_XmlSerializerNamespaces");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlSerializerNamespaces"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.Serialization.XmlSerializerNamespaces> XmlSerializerNamespacesSetXmlSerializerNamespaces
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlSerializerNamespaces", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.Serialization.XmlSerializerNamespaces>
                                                   (value)), typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "set_XmlSerializerNamespaces", typeof(global::System.Xml.Serialization.XmlSerializerNamespaces));
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlWriterSettings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriterSettings> XmlWriterSettingsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_XmlWriterSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlWriterSettings>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "get_XmlWriterSettings");
            }
        }

        /// <summary>Sets the mole of <see cref="P:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.XmlWriterSettings"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlWriterSettings> XmlWriterSettingsSetXmlWriterSettings
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_XmlWriterSettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Xml.XmlWriterSettings>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "set_XmlWriterSettings", typeof(global::System.Xml.XmlWriterSettings));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;GetSerializerForType&gt;b__5(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object> _GetSerializerForTypeb__5Type
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<GetSerializerForType>b__5", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "<GetSerializerForType>b__5", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;OnCanReadType&gt;b__1(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object> _OnCanReadTypeb__1Type
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanReadType>b__1", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), base.Instance, "<OnCanReadType>b__1", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;OnCanWriteType&gt;b__2(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object> _OnCanWriteTypeb__2Type
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<OnCanWriteType>b__2", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter, global::System.Type, object>(value)), 
                     typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     base.Instance, "<OnCanWriteType>b__2", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.&lt;SetSerializerInternal&gt;b__3(System.Type,System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, object> _SetSerializerInternalb__3TypeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<SetSerializerInternal>b__3", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter), 
                     "<SetSerializerInternal>b__3", typeof(global::System.Type), typeof(object));
            }
        }
    }
}
namespace Microsoft.Moles.Framework
{
    /// <summary>Contains custom delegates used for the stubs and moles of Microsoft.ApplicationServer.Http</summary>
    [global::System.Diagnostics.DebuggerNonUserCode]
    public static partial class MicrosoftApplicationServerHttpDelegates
    {
        public delegate R Out1Func4<T0,TOut1,T2,R>(
            T0 instance,
            out TOut1 outputs,
            T2 result
        );

        public delegate void Ref0Action2<TRef0,T1>(ref TRef0 reply, T1 correlationState);

        public delegate R Ref0Func4<TRef0,T1,T2,R>(
            ref TRef0 request,
            T1 channel,
            T2 instanceContext
        );
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.ActionOfStreamContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ActionOfStreamContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SActionOfStreamContent
      : mash::Microsoft.ApplicationServer.Http.ActionOfStreamContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SActionOfStreamContent(global::System.Action<global::System.IO.Stream> actionOfStream)
        : base(actionOfStream)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent, global::System.IO.Stream>
                         (this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SActionOfStreamContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent, global::System.Threading.Tasks.Task>
                         (this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent, long>
                  (this, "TryComputeLength.length", out length);
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SActionOfStreamContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ActionOfStreamContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = FormUrlEncodedMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SFormUrlEncodedMediaTypeFormatter
      : mash::Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SFormUrlEncodedMediaTypeFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SFormUrlEncodedMediaTypeFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        protected override bool OnCanReadType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanReadTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanReadType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter, bool>(this, "OnCanReadType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        protected override bool OnCanWriteType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanWriteTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanWriteType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter, bool>(this, "OnCanWriteType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override object OnReadFromStream(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> sh
               = this.OnReadFromStreamTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStream(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter, object>(this, "OnReadFromStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task<object> OnReadFromStreamAsync(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> sh
               = this.OnReadFromStreamAsyncTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                                          mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStreamAsync(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter, global::System.Threading.Tasks.Task<object>>
                         (this, "OnReadFromStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override void OnWriteToStream(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                 global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> sh
               = this.OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                            global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>)null)
              sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                base.OnWriteToStream(type, value, stream, contentHeaders, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter>(this, "OnWriteToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task OnWriteToStreamAsync(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                return base.OnWriteToStreamAsync(type, value, stream, contentHeaders, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SFormUrlEncodedMediaTypeFormatter, global::System.Threading.Tasks.Task>
                    (this, "OnWriteToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.FormUrlEncodedMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HelpPage"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HelpPage")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHelpPage
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HelpPage
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHelpPage(
            global::System.Uri baseAddress,
            string javascriptCallbackParameterName,
            ssm::System.ServiceModel.Description.ContractDescription description
        )
        : base(baseAddress, javascriptCallbackParameterName, description)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHelpPage</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HtmlPageBuilder"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HtmlPageBuilder")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHtmlPageBuilder
      : mash::Microsoft.ApplicationServer.Http.HtmlPageBuilder
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHtmlPageBuilder()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHtmlPageBuilder</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpBehavior")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpBehavior
      : mash::Microsoft.ApplicationServer.Http.Description.HttpBehavior
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpBehavior()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpBehavior</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnAddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        protected override void OnAddBindingParameters(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection bindingParameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> sh
               = this.OnAddBindingParametersServiceEndpointBindingParameterCollection;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection>)null)
              sh.Invoke(endpoint, bindingParameters);
            else 
            {
              if (this.__callBase)
                base.OnAddBindingParameters(endpoint, bindingParameters);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior>(this, "OnAddBindingParameters");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnAddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Channels.BindingParameterCollection> OnAddBindingParametersServiceEndpointBindingParameterCollection;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
        /// </summary>
        protected override void OnApplyDispatchBehavior(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> sh
               = this.OnApplyDispatchBehaviorServiceEndpointEndpointDispatcher;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher>)null)
              sh.Invoke(endpoint, endpointDispatcher);
            else 
            {
              if (this.__callBase)
                base.OnApplyDispatchBehavior(endpoint, endpointDispatcher);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior>(this, "OnApplyDispatchBehavior");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint, ssm::System.ServiceModel.Dispatcher.EndpointDispatcher> OnApplyDispatchBehaviorServiceEndpointEndpointDispatcher;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        protected override global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler> OnGetHttpErrorHandlers(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> operations)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic
                                                                                                                               .IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                                                                                     global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>> sh
               = this.OnGetHttpErrorHandlersServiceEndpointIEnumerableOfHttpOperationDescription;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic
                                                                                                                   .IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                                                                         global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>>)null)
              return sh.Invoke(endpoint, operations);
            else 
            {
              if (this.__callBase)
                return base.OnGetHttpErrorHandlers(endpoint, operations);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior, 
                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>>
                         (this, "OnGetHttpErrorHandlers");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler>> OnGetHttpErrorHandlersServiceEndpointIEnumerableOfHttpOperationDescription;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetMessageFormatter(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        protected override mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter OnGetMessageFormatter(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription operation)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                               mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                               mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter> sh
               = this.OnGetMessageFormatterServiceEndpointHttpOperationDescription;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                                          mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter>)null)
              return sh.Invoke(endpoint, operation);
            else 
            {
              if (this.__callBase)
                return base.OnGetMessageFormatter(endpoint, operation);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior, 
                                      mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter>(this, "OnGetMessageFormatter");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetMessageFormatter(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter> OnGetMessageFormatterServiceEndpointHttpOperationDescription;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetOperationSelector(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        protected override mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector OnGetOperationSelector(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> operations)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic
                                                                                                                               .IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                                                                                     mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector> sh
               = this.OnGetOperationSelectorServiceEndpointIEnumerableOfHttpOperationDescription;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic
                                                                                                                   .IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, 
                                                                                                         mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector>)null)
              return sh.Invoke(endpoint, operations);
            else 
            {
              if (this.__callBase)
                return base.OnGetOperationSelector(endpoint, operations);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior, 
                                      mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector>(this, "OnGetOperationSelector");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetOperationSelector(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable`1{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription>, mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector> OnGetOperationSelectorServiceEndpointIEnumerableOfHttpOperationDescription;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnValidate(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        protected override void OnValidate(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> sh
               = this.OnValidateServiceEndpoint;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint>)null)
              sh.Invoke(endpoint);
            else 
            {
              if (this.__callBase)
                base.OnValidate(endpoint);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpBehavior>(this, "OnValidate");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnValidate(System.ServiceModel.Description.ServiceEndpoint)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Description.ServiceEndpoint> OnValidateServiceEndpoint;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBinding))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpBinding")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpBinding
      : mash::Microsoft.ApplicationServer.Http.HttpBinding
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpBinding()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpBinding(mash::Microsoft.ApplicationServer.Http.HttpBindingSecurityMode securityMode)
        : base(securityMode)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpBinding(string configurationName)
        : base(configurationName)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel>(ssm::System.ServiceModel.Channels.BindingParameterCollection parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> shg;
            if (this.buildChannelFactoryBindingParameterCollections
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, 
                                                                                  ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>>(out shg))
              return shg.Invoke(parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelFactory<TChannel>(parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>
                         (this, "BuildChannelFactory");
            }
        }

        /// <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        public void BuildChannelFactoryBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> stub)
        {
            this.buildChannelFactoryBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                      (this.buildChannelFactoryBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(object[] parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerObjectArrays.TryGetValue
                                                          <mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(ssm::System.ServiceModel.Channels.BindingParameterCollection parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func
                                                              <ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerBindingParameterCollections
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, 
                                                                                  ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(global::System.Uri listenUriBaseAddress, object[] parameters)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Uri, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriObjectArrays.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                            .MolesDelegates.Func<global::System.Uri, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(global::System.Uri listenUriBaseAddress, ssm::System.ServiceModel.Channels.BindingParameterCollection parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, 
                                                               ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriBindingParameterCollections.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                                           .MolesDelegates.Func<global::System.Uri, ssm::System.ServiceModel.Channels.BindingParameterCollection, 
                                                                                                                                    ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(
            global::System.Uri listenUriBaseAddress,
            string listenUriRelativeAddress,
            ssm::System.ServiceModel.Channels.BindingParameterCollection parameters
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, 
                                                               ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriStringBindingParameterCollections.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                                                 .MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Channels.BindingParameterCollection, 
                                                                                                                                                  ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, listenUriRelativeAddress, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, listenUriRelativeAddress, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(
            global::System.Uri listenUriBaseAddress,
            string listenUriRelativeAddress,
            object[] parameters
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Uri, string, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriStringObjectArrays.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                                  .MolesDelegates.Func<global::System.Uri, string, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, listenUriRelativeAddress, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, listenUriRelativeAddress, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(
            global::System.Uri listenUriBaseAddress,
            string listenUriRelativeAddress,
            ssm::System.ServiceModel.Description.ListenUriMode listenUriMode,
            object[] parameters
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, 
                                                               ssm::System.ServiceModel.Description.ListenUriMode, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriStringListenUriModeObjectArrays.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                                               .MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Description.ListenUriMode, 
                                                                                                                                                object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(
            global::System.Uri listenUriBaseAddress,
            string listenUriRelativeAddress,
            ssm::System.ServiceModel.Description.ListenUriMode listenUriMode,
            ssm::System.ServiceModel.Channels.BindingParameterCollection parameters
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Description.ListenUriMode, 
                                                                                           ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerUriStringListenUriModeBindingParameterCollections.TryGetValue<mmf::Microsoft.Moles.Framework
                                                                                                              .MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Description.ListenUriMode, 
                                                                                                                                                               ssm::System.ServiceModel.Channels.BindingParameterCollection, 
                                                                                                                                                               ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(listenUriBaseAddress, listenUriRelativeAddress, listenUriMode, parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>
                         (this, "BuildChannelListener");
            }
        }

        /// <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        public void BuildChannelListenerBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                       (this.buildChannelListenerBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        public void BuildChannelListenerObjectArray<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerObjectArrays =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.buildChannelListenerObjectArrays, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        public void BuildChannelListenerUriBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                          (this.buildChannelListenerUriBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        public void BuildChannelListenerUriObjectArray<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriObjectArrays =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.buildChannelListenerUriObjectArrays, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        public void BuildChannelListenerUriStringBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriStringBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                                (this.buildChannelListenerUriStringBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        public void BuildChannelListenerUriStringListenUriModeBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Description.ListenUriMode, ssm::System.ServiceModel.Channels.BindingParameterCollection, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriStringListenUriModeBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                                             (this.buildChannelListenerUriStringListenUriModeBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        public void BuildChannelListenerUriStringListenUriModeObjectArray<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, ssm::System.ServiceModel.Description.ListenUriMode, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriStringListenUriModeObjectArrays = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                              (this.buildChannelListenerUriStringListenUriModeObjectArrays, (global::System.Delegate)stub);
        }

        /// <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        public void BuildChannelListenerUriStringObjectArray<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri, string, object[], ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerUriStringObjectArrays =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.buildChannelListenerUriStringObjectArrays, (global::System.Delegate)stub);
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override bool CanBuildChannelFactory<TChannel>(ssm::System.ServiceModel.Channels.BindingParameterCollection parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool> shg;
            if (this.canBuildChannelFactoryBindingParameterCollections
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool>>
                    (out shg))
              return shg.Invoke(parameters);
            else 
            {
              if (this.__callBase)
                return base.CanBuildChannelFactory<TChannel>(parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, bool>(this, "CanBuildChannelFactory");
            }
        }

        /// <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        public void CanBuildChannelFactoryBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool> stub)
        {
            this.canBuildChannelFactoryBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                         (this.canBuildChannelFactoryBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)"/>
        /// </summary>
        public override bool CanBuildChannelListener<TChannel>(ssm::System.ServiceModel.Channels.BindingParameterCollection parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool> shg;
            if (this.canBuildChannelListenerBindingParameterCollections
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool>>
                    (out shg))
              return shg.Invoke(parameters);
            else 
            {
              if (this.__callBase)
                return base.CanBuildChannelListener<TChannel>(parameters);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, bool>(this, "CanBuildChannelListener");
            }
        }

        /// <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        public void CanBuildChannelListenerBindingParameterCollection<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingParameterCollection, bool> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.canBuildChannelListenerBindingParameterCollections = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat
                                                                          (this.canBuildChannelListenerBindingParameterCollections, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.CreateBindingElements"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.BindingElementCollection CreateBindingElements()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElementCollection> sh
               = this.CreateBindingElements01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElementCollection>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateBindingElements();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, ssm::System.ServiceModel.Channels.BindingElementCollection>
                         (this, "CreateBindingElements");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpBinding.CreateBindingElements"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElementCollection> CreateBindingElements01;

        /// <summary>Initializes a new instance of type SHttpBinding</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Scheme"/>
        /// </summary>
        public override string Scheme
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.SchemeGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.Scheme;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpBinding, string>(this, "get_Scheme");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.HttpBinding.Scheme"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> SchemeGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelFactoryBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerObjectArrays;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriObjectArrays;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriStringBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriStringListenUriModeBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriStringListenUriModeObjectArrays;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerUriStringObjectArrays;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary canBuildChannelFactoryBindingParameterCollections;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary canBuildChannelListenerBindingParameterCollections;
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpBindingCollectionElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpBindingCollectionElement
      : mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpBindingCollectionElement()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetDefault"/>
        /// </summary>
        protected override ssm::System.ServiceModel.Channels.Binding GetDefault()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Binding> sh = this.GetDefault01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Binding>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetDefault();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingCollectionElement, 
                                      ssm::System.ServiceModel.Channels.Binding>(this, "GetDefault");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetDefault"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Binding> GetDefault01;

        /// <summary>Initializes a new instance of type SHttpBindingCollectionElement</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpBindingElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpBindingElement
      : mash::Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpBindingElement()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpBindingElement(string name)
        : base(name)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.BindingElementType"/>
        /// </summary>
        protected override global::System.Type BindingElementType
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> sh = this.BindingElementTypeGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.BindingElementType;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, global::System.Type>
                             (this, "get_BindingElementType");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.BindingElementType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> BindingElementTypeGet;

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)"/>
        /// </summary>
        protected override void DeserializeElement(global::System.Xml.XmlReader reader, bool serializeCollectionKey)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlReader, bool> sh = this.DeserializeElementXmlReaderBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlReader, bool>)null)
              sh.Invoke(reader, serializeCollectionKey);
            else 
            {
              if (this.__callBase)
                base.DeserializeElement(reader, serializeCollectionKey);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "DeserializeElement");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlReader, bool> DeserializeElementXmlReaderBoolean;

        /// <summary>Sets the stub of <see cref="P:System.Configuration.ConfigurationElement.ElementProperty"/>
        /// </summary>
        protected override global::System.Configuration.ConfigurationElementProperty ElementProperty
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationElementProperty> sh = this.ElementPropertyGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationElementProperty>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.ElementProperty;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, 
                                          global::System.Configuration.ConfigurationElementProperty>(this, "get_ElementProperty");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.Configuration.ConfigurationElement.ElementProperty"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationElementProperty> ElementPropertyGet;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Equals(System.Object)"/>
        /// </summary>
        public override bool Equals(object compareTo)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.EqualsObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(compareTo);
            else 
            {
              if (this.__callBase)
                return base.Equals(compareTo);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>(this, "Equals");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Equals(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> EqualsObject;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetHashCode"/>
        /// </summary>
        public override int GetHashCode()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> sh = this.GetHashCode01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetHashCode();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, int>(this, "GetHashCode");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetHashCode"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> GetHashCode01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)"/>
        /// </summary>
        protected override string GetTransformedAssemblyString(string assemblyName)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> sh = this.GetTransformedAssemblyStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string>)null)
              return sh.Invoke(assemblyName);
            else 
            {
              if (this.__callBase)
                return base.GetTransformedAssemblyString(assemblyName);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, string>
                         (this, "GetTransformedAssemblyString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetTransformedAssemblyStringString;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)"/>
        /// </summary>
        protected override string GetTransformedTypeString(string typeName)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> sh = this.GetTransformedTypeStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string>)null)
              return sh.Invoke(typeName);
            else 
            {
              if (this.__callBase)
                return base.GetTransformedTypeString(typeName);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, string>
                         (this, "GetTransformedTypeString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetTransformedTypeStringString;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Init"/>
        /// </summary>
        protected override void Init()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.Init01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.Init();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "Init");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Init"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Init01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.InitializeDefault"/>
        /// </summary>
        protected override void InitializeDefault()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.InitializeDefault01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.InitializeDefault();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "InitializeDefault");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.InitializeDefault"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeDefault01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        protected override void InitializeFrom(ssm::System.ServiceModel.Channels.Binding binding)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> sh = this.InitializeFromBinding;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding>)null)
              sh.Invoke(binding);
            else 
            {
              if (this.__callBase)
                base.InitializeFrom(binding);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "InitializeFrom");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> InitializeFromBinding;

        /// <summary>Initializes a new instance of type SHttpBindingElement</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.IsModified"/>
        /// </summary>
        protected override bool IsModified()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.IsModified01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.IsModified();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>(this, "IsModified");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.IsModified"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsModified01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly"/>
        /// </summary>
        public override bool IsReadOnly()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> sh = this.IsReadOnly01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.IsReadOnly();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>(this, "IsReadOnly");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsReadOnly01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)"/>
        /// </summary>
        protected override void ListErrors(global::System.Collections.IList errorList)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.IList> sh = this.ListErrorsIList;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.IList>)null)
              sh.Invoke(errorList);
            else 
            {
              if (this.__callBase)
                base.ListErrors(errorList);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "ListErrors");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.IList> ListErrorsIList;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        protected override void OnApplyConfiguration(ssm::System.ServiceModel.Channels.Binding binding)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> sh = this.OnApplyConfigurationBinding;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding>)null)
              sh.Invoke(binding);
            else 
            {
              if (this.__callBase)
                base.OnApplyConfiguration(binding);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "OnApplyConfiguration");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Binding> OnApplyConfigurationBinding;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)"/>
        /// </summary>
        protected override bool OnDeserializeUnrecognizedAttribute(string name, string value)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> sh = this.OnDeserializeUnrecognizedAttributeStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool>)null)
              return sh.Invoke(name, value);
            else 
            {
              if (this.__callBase)
                return base.OnDeserializeUnrecognizedAttribute(name, value);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>
                         (this, "OnDeserializeUnrecognizedAttribute");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool> OnDeserializeUnrecognizedAttributeStringString;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)"/>
        /// </summary>
        protected override bool OnDeserializeUnrecognizedElement(string elementName, global::System.Xml.XmlReader reader)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Xml.XmlReader, bool> sh
               = this.OnDeserializeUnrecognizedElementStringXmlReader;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Xml.XmlReader, bool>)null)
              return sh.Invoke(elementName, reader);
            else 
            {
              if (this.__callBase)
                return base.OnDeserializeUnrecognizedElement(elementName, reader);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>
                         (this, "OnDeserializeUnrecognizedElement");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Xml.XmlReader, bool> OnDeserializeUnrecognizedElementStringXmlReader;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)"/>
        /// </summary>
        protected override object OnRequiredPropertyNotFound(string name)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> sh = this.OnRequiredPropertyNotFoundString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object>)null)
              return sh.Invoke(name);
            else 
            {
              if (this.__callBase)
                return base.OnRequiredPropertyNotFound(name);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, object>
                         (this, "OnRequiredPropertyNotFound");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> OnRequiredPropertyNotFoundString;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.PostDeserialize"/>
        /// </summary>
        protected override void PostDeserialize()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.PostDeserialize01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.PostDeserialize();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "PostDeserialize");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.PostDeserialize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action PostDeserialize01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)"/>
        /// </summary>
        protected override void PreSerialize(global::System.Xml.XmlWriter writer)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlWriter> sh = this.PreSerializeXmlWriter;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlWriter>)null)
              sh.Invoke(writer);
            else 
            {
              if (this.__callBase)
                base.PreSerialize(writer);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "PreSerialize");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Xml.XmlWriter> PreSerializeXmlWriter;

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Properties"/>
        /// </summary>
        protected override global::System.Configuration.ConfigurationPropertyCollection Properties
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> sh = this.PropertiesGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.Properties;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, 
                                          global::System.Configuration.ConfigurationPropertyCollection>(this, "get_Properties");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Properties"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Configuration.ConfigurationPropertyCollection> PropertiesGet;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)"/>
        /// </summary>
        protected override void Reset(global::System.Configuration.ConfigurationElement parentElement)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement> sh = this.ResetConfigurationElement;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement>)null)
              sh.Invoke(parentElement);
            else 
            {
              if (this.__callBase)
                base.Reset(parentElement);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "Reset");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement> ResetConfigurationElement;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.ResetModified"/>
        /// </summary>
        protected override void ResetModified()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.ResetModified01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.ResetModified();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "ResetModified");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.ResetModified"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ResetModified01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)"/>
        /// </summary>
        protected override bool SerializeElement(global::System.Xml.XmlWriter writer, bool serializeCollectionKey)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, bool, bool> sh = this.SerializeElementXmlWriterBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, bool, bool>)null)
              return sh.Invoke(writer, serializeCollectionKey);
            else 
            {
              if (this.__callBase)
                return base.SerializeElement(writer, serializeCollectionKey);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>(this, "SerializeElement");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, bool, bool> SerializeElementXmlWriterBoolean;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)"/>
        /// </summary>
        protected override bool SerializeToXmlElement(global::System.Xml.XmlWriter writer, string elementName)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, string, bool> sh
               = this.SerializeToXmlElementXmlWriterString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, string, bool>)null)
              return sh.Invoke(writer, elementName);
            else 
            {
              if (this.__callBase)
                return base.SerializeToXmlElement(writer, elementName);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement, bool>(this, "SerializeToXmlElement");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Xml.XmlWriter, string, bool> SerializeToXmlElementXmlWriterString;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SetReadOnly"/>
        /// </summary>
        protected override void SetReadOnly()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.SetReadOnly01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.SetReadOnly();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "SetReadOnly");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.SetReadOnly"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetReadOnly01;

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)"/>
        /// </summary>
        protected override void Unmerge(
            global::System.Configuration.ConfigurationElement sourceElement,
            global::System.Configuration.ConfigurationElement parentElement,
            global::System.Configuration.ConfigurationSaveMode saveMode
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement, 
                                                                 global::System.Configuration.ConfigurationElement, global::System.Configuration.ConfigurationSaveMode> sh
               = this.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement, 
                                                                            global::System.Configuration.ConfigurationElement, global::System.Configuration.ConfigurationSaveMode>)null)
              sh.Invoke(sourceElement, parentElement, saveMode);
            else 
            {
              if (this.__callBase)
                base.Unmerge(sourceElement, parentElement, saveMode);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Configuration.Moles.SHttpBindingElement>(this, "Unmerge");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Configuration.ConfigurationElement, global::System.Configuration.ConfigurationElement, global::System.Configuration.ConfigurationSaveMode> UnmergeConfigurationElementConfigurationElementConfigurationSaveMode;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpBindingParameterBehavior")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpBindingParameterBehavior
      : mash::Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpBindingParameterBehavior(ssm::System.ServiceModel.Description.ServiceDebugBehavior serviceDebugBehavior, ssm::System.ServiceModel.Description.DispatcherSynchronizationBehavior dispatcherSynchronizationBehavior)
        : base(serviceDebugBehavior, dispatcherSynchronizationBehavior)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpBindingParameterBehavior</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpEndpoint")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpEndpoint
      : mash::Microsoft.ApplicationServer.Http.Description.HttpEndpoint
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpEndpoint(ssm::System.ServiceModel.Description.ContractDescription contract)
        : base(contract)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpEndpoint(ssm::System.ServiceModel.Description.ContractDescription contract, ssm::System.ServiceModel.EndpointAddress address)
        : base(contract, address)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpEndpoint</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Configuration.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpEndpointCollectionElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpEndpointCollectionElement
      : mash::Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpEndpointCollectionElement()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpEndpointCollectionElement</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpErrorHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpErrorHandler
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpErrorHandler()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpErrorHandler</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.OnHandleError(System.Exception)"/>
        /// </summary>
        protected override bool OnHandleError(global::System.Exception error)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, bool> sh = this.OnHandleErrorException;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, bool>)null)
              return sh.Invoke(error);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpErrorHandler, bool>(this, "OnHandleError");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.OnHandleError(System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, bool> OnHandleErrorException;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.OnProvideResponse(System.Exception)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage OnProvideResponse(global::System.Exception error)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> sh
               = this.OnProvideResponseException;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(error);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpErrorHandler, mnh::System.Net.Http.HttpResponseMessage>
                    (this, "OnProvideResponse");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.OnProvideResponse(System.Exception)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Exception, mnh::System.Net.Http.HttpResponseMessage> OnProvideResponseException;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpInstanceProvider")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpInstanceProvider
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpInstanceProvider()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpInstanceProvider</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext)"/>
        /// </summary>
        protected override object OnGetInstance(ssm::System.ServiceModel.InstanceContext instanceContext)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, object> sh = this.OnGetInstanceInstanceContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, object>)null)
              return sh.Invoke(instanceContext);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpInstanceProvider, object>(this, "OnGetInstance");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        protected override object OnGetInstance(ssm::System.ServiceModel.InstanceContext instanceContext, mnh::System.Net.Http.HttpRequestMessage request)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, mnh::System.Net.Http.HttpRequestMessage, object> sh
               = this.OnGetInstanceInstanceContextHttpRequestMessage;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, mnh::System.Net.Http.HttpRequestMessage, object>)null)
              return sh.Invoke(instanceContext, request);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpInstanceProvider, object>(this, "OnGetInstance");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, object> OnGetInstanceInstanceContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.InstanceContext, mnh::System.Net.Http.HttpRequestMessage, object> OnGetInstanceInstanceContextHttpRequestMessage;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnReleaseInstance(System.ServiceModel.InstanceContext,System.Object)"/>
        /// </summary>
        protected override void OnReleaseInstance(ssm::System.ServiceModel.InstanceContext instanceContext, object instance)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.InstanceContext, object> sh
               = this.OnReleaseInstanceInstanceContextObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.InstanceContext, object>)null)
              sh.Invoke(instanceContext, instance);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpInstanceProvider>(this, "OnReleaseInstance");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnReleaseInstance(System.ServiceModel.InstanceContext,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.InstanceContext, object> OnReleaseInstanceInstanceContextObject;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageEncoderFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageEncoderFactory
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageEncoderFactory()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.CreateSessionEncoder"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> sh = this.CreateSessionEncoder01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateSessionEncoder();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncoderFactory, 
                                      ssm::System.ServiceModel.Channels.MessageEncoder>(this, "CreateSessionEncoder");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.CreateSessionEncoder"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> CreateSessionEncoder01;

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.Encoder"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.MessageEncoder Encoder
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> sh = this.EncoderGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.Encoder;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncoderFactory, 
                                          ssm::System.ServiceModel.Channels.MessageEncoder>(this, "get_Encoder");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.Encoder"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageEncoder> EncoderGet;

        /// <summary>Initializes a new instance of type SHttpMessageEncoderFactory</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.MessageVersion"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.MessageVersion MessageVersion
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion> sh = this.MessageVersionGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.MessageVersion;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncoderFactory, 
                                          ssm::System.ServiceModel.Channels.MessageVersion>(this, "get_MessageVersion");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory.MessageVersion"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.MessageVersion> MessageVersionGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageEncodingChannelListener")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageEncodingChannelListener
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageEncodingChannelListener(ssm::System.ServiceModel.Channels.Binding binding, ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel> innerListener)
        : base(binding, innerListener)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultCloseTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultCloseTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultCloseTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultCloseTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultCloseTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultOpenTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultOpenTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultOpenTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultOpenTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultOpenTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultReceiveTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultReceiveTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultReceiveTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultReceiveTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultReceiveTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultSendTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultSendTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultSendTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultSendTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultSendTimeoutGet;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        protected override global::System.Type GetCommunicationObjectType()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> sh = this.GetCommunicationObjectType01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetCommunicationObjectType();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.Type>
                         (this, "GetCommunicationObjectType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> GetCommunicationObjectType01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1"/>
        /// </summary>
        public override T GetProperty<T>()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> shg;
            if (this.getProperty01s.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T>>(out shg))
              return shg.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetProperty<T>();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, T>(this, "GetProperty");
            }
        }

        /// <summary>Sets stubs of GetProperty()</summary>
        public void GetProperty01<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> stub)
            where T : class
        {
            this.getProperty01s = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.getProperty01s, (global::System.Delegate)stub);
        }

        /// <summary>Initializes a new instance of type SHttpMessageEncodingChannelListener</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        protected override void OnAbort()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnAbort01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnAbort");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnAbort01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        protected override ssm::System.ServiceModel.Channels.IReplyChannel OnAcceptChannel(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> sh
               = this.OnAcceptChannelTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel>)null
              )
              return sh.Invoke(timeout);
            else 
            {
              if (this.__callBase)
                return base.OnAcceptChannel(timeout);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, 
                                      ssm::System.ServiceModel.Channels.IReplyChannel>(this, "OnAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginAcceptChannel(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginAcceptChannelTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              if (this.__callBase)
                return base.OnBeginAcceptChannel(timeout, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginClose(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginCloseTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginCloseTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginOpen(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginOpenTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginOpenTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginWaitForChannel(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginWaitForChannelTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              if (this.__callBase)
                return base.OnBeginWaitForChannel(timeout, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        protected override void OnClose(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnCloseTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnCloseTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed"/>
        /// </summary>
        protected override void OnClosed()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosed01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosed();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnClosed");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosed01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        protected override void OnClosing()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosing01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosing();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnClosing");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosing01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        protected override ssm::System.ServiceModel.Channels.IReplyChannel OnEndAcceptChannel(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> sh
               = this.OnEndAcceptChannelIAsyncResult;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel>)null)
              return sh.Invoke(result);
            else 
            {
              if (this.__callBase)
                return base.OnEndAcceptChannel(result);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, 
                                      ssm::System.ServiceModel.Channels.IReplyChannel>(this, "OnEndAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndClose(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndCloseIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnEndClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndCloseIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndOpen(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndOpenIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnEndOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndOpenIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        protected override bool OnEndWaitForChannel(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> sh = this.OnEndWaitForChannelIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool>)null)
              return sh.Invoke(result);
            else 
            {
              if (this.__callBase)
                return base.OnEndWaitForChannel(result);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, bool>
                         (this, "OnEndWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        protected override void OnFaulted()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnFaulted01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnFaulted();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnFaulted");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnFaulted01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        protected override void OnOpen(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnOpenTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnOpenTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        protected override void OnOpened()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpened01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpened();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnOpened");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpened01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnOpening"/>
        /// </summary>
        protected override void OnOpening()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpening01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpening();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener>(this, "OnOpening");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        protected override bool OnWaitForChannel(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> sh = this.OnWaitForChannelTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool>)null)
              return sh.Invoke(timeout);
            else 
            {
              if (this.__callBase)
                return base.OnWaitForChannel(timeout);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, bool>
                         (this, "OnWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> OnWaitForChannelTimeSpan;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.Uri"/>
        /// </summary>
        public override global::System.Uri Uri
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> sh = this.UriGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri>)null)
                  return sh.Invoke();
                else 
                {
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingChannelListener, global::System.Uri>
                             (this, "get_Uri");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.Uri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> UriGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary getProperty01s;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageEncodingReplyChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageEncodingReplyChannel
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingReplyChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageEncodingReplyChannel(ssm::System.ServiceModel.Channels.ChannelManagerBase channelManager, ssm::System.ServiceModel.Channels.IReplyChannel innerChannel)
        : base(channelManager, innerChannel)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultCloseTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultCloseTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultCloseTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, global::System.TimeSpan>
                             (this, "get_DefaultCloseTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultCloseTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultOpenTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultOpenTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultOpenTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, global::System.TimeSpan>
                             (this, "get_DefaultOpenTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultOpenTimeoutGet;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        protected override global::System.Type GetCommunicationObjectType()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> sh = this.GetCommunicationObjectType01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetCommunicationObjectType();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, global::System.Type>
                         (this, "GetCommunicationObjectType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> GetCommunicationObjectType01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1"/>
        /// </summary>
        public override T GetProperty<T>()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> shg;
            if (this.getProperty01s.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T>>(out shg))
              return shg.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetProperty<T>();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, T>(this, "GetProperty");
            }
        }

        /// <summary>Sets stubs of GetProperty()</summary>
        public void GetProperty01<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> stub)
            where T : class
        {
            this.getProperty01s = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.getProperty01s, (global::System.Delegate)stub);
        }

        /// <summary>Initializes a new instance of type SHttpMessageEncodingReplyChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        protected override void OnAbort()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnAbort01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnAbort");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnAbort01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginClose(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginCloseTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, global::System.IAsyncResult>
                    (this, "OnBeginClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginCloseTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginOpen(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginOpenTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel, global::System.IAsyncResult>
                    (this, "OnBeginOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginOpenTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        protected override void OnClose(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnCloseTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnCloseTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelBase.OnClosed"/>
        /// </summary>
        protected override void OnClosed()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosed01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosed();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnClosed");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelBase.OnClosed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosed01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        protected override void OnClosing()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosing01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosing();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnClosing");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosing01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndClose(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndCloseIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnEndClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndCloseIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndOpen(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndOpenIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnEndOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndOpenIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        protected override void OnFaulted()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnFaulted01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnFaulted();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnFaulted");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnFaulted01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        protected override void OnOpen(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnOpenTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnOpenTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        protected override void OnOpened()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpened01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpened();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnOpened");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpened01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpening"/>
        /// </summary>
        protected override void OnOpening()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpening01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpening();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingReplyChannel>(this, "OnOpening");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary getProperty01s;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageEncodingRequestContext")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageEncodingRequestContext
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageEncodingRequestContext(ssm::System.ServiceModel.Channels.RequestContext innerContext)
        : base(innerContext)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Abort"/>
        /// </summary>
        public override void Abort()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.Abort01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.Abort();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Abort");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Abort"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Abort01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public override global::System.IAsyncResult BeginReply(
            ssm::System.ServiceModel.Channels.Message message,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.BeginReplyMessageAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<ssm::System.ServiceModel.Channels.Message, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(message, callback, state);
            else 
            {
              if (this.__callBase)
                return base.BeginReply(message, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext, global::System.IAsyncResult>
                         (this, "BeginReply");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public override global::System.IAsyncResult BeginReply(
            ssm::System.ServiceModel.Channels.Message message,
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, 
                                                               global::System.AsyncCallback, object, global::System.IAsyncResult> sh = this.BeginReplyMessageTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, 
                                                                          global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(message, timeout, callback, state);
            else 
            {
              if (this.__callBase)
                return base.BeginReply(message, timeout, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext, global::System.IAsyncResult>
                         (this, "BeginReply");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReplyMessageTimeSpanAsyncCallbackObject;

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close"/>
        /// </summary>
        public override void Close()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.Close01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.Close();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Close");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close(System.TimeSpan)"/>
        /// </summary>
        public override void Close(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.CloseTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              if (this.__callBase)
                base.Close(timeout);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Close");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Close01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Close(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> CloseTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.EndReply(System.IAsyncResult)"/>
        /// </summary>
        public override void EndReply(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.EndReplyIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              if (this.__callBase)
                base.EndReply(result);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "EndReply");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.EndReply(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndReplyIAsyncResult;

        /// <summary>Initializes a new instance of type SHttpMessageEncodingRequestContext</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public override void Reply(ssm::System.ServiceModel.Channels.Message message)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message> sh = this.ReplyMessage;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message>)null)
              sh.Invoke(message);
            else 
            {
              if (this.__callBase)
                base.Reply(message);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Reply");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)"/>
        /// </summary>
        public override void Reply(ssm::System.ServiceModel.Channels.Message message, global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan> sh
               = this.ReplyMessageTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan>)null)
              sh.Invoke(message, timeout);
            else 
            {
              if (this.__callBase)
                base.Reply(message, timeout);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext>(this, "Reply");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message> ReplyMessage;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ssm::System.ServiceModel.Channels.Message, global::System.TimeSpan> ReplyMessageTimeSpan;

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.RequestMessage"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.Message RequestMessage
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message> sh = this.RequestMessageGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.RequestMessage;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageEncodingRequestContext, 
                                          ssm::System.ServiceModel.Channels.Message>(this, "get_RequestMessage");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingRequestContext.RequestMessage"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.Message> RequestMessageGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMessageFormatter
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpMessageFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        protected override void OnDeserializeRequest(mnh::System.Net.Http.HttpRequestMessage message, object[] parameters)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]> sh
               = this.OnDeserializeRequestHttpRequestMessageObjectArray;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]>)null)
              sh.Invoke(message, parameters);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpMessageFormatter>(this, "OnDeserializeRequest");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpRequestMessage, object[]> OnDeserializeRequestHttpRequestMessageObjectArray;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnSerializeReply(System.Object[],System.Object)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpResponseMessage OnSerializeReply(object[] parameters, object result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object, mnh::System.Net.Http.HttpResponseMessage> sh
               = this.OnSerializeReplyObjectArrayObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object, mnh::System.Net.Http.HttpResponseMessage>)null)
              return sh.Invoke(parameters, result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpMessageFormatter, mnh::System.Net.Http.HttpResponseMessage>
                         (this, "OnSerializeReply");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnSerializeReply(System.Object[],System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object, mnh::System.Net.Http.HttpResponseMessage> OnSerializeReplyObjectArrayObject;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageHandlerBindingElement")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMessageHandlerBindingElement
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageHandlerBindingElement()
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel>(ssm::System.ServiceModel.Channels.BindingContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> shg;
            if (this.buildChannelFactoryBindingContexts.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates
                                                                                                     .Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>>(out shg))
              return shg.Invoke(context);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelFactory<TChannel>(context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, 
                                      ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>>(this, "BuildChannelFactory");
            }
        }

        /// <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        public void BuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelFactory<TChannel>> stub)
        {
            this.buildChannelFactoryBindingContexts =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.buildChannelFactoryBindingContexts, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel>(ssm::System.ServiceModel.Channels.BindingContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> shg;
            if (this.buildChannelListenerBindingContexts.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates
                                                                                                      .Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>>(out shg))
              return shg.Invoke(context);
            else 
            {
              if (this.__callBase)
                return base.BuildChannelListener<TChannel>(context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, 
                                      ssm::System.ServiceModel.Channels.IChannelListener<TChannel>>(this, "BuildChannelListener");
            }
        }

        /// <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        public void BuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, ssm::System.ServiceModel.Channels.IChannelListener<TChannel>> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.buildChannelListenerBindingContexts =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.buildChannelListenerBindingContexts, (global::System.Delegate)stub);
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        public override bool CanBuildChannelFactory<TChannel>(ssm::System.ServiceModel.Channels.BindingContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> shg;
            if (this.canBuildChannelFactoryBindingContexts
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool>>(out shg))
              return shg.Invoke(context);
            else 
            {
              if (this.__callBase)
                return base.CanBuildChannelFactory<TChannel>(context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, bool>
                         (this, "CanBuildChannelFactory");
            }
        }

        /// <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        public void CanBuildChannelFactoryBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> stub)
        {
            this.canBuildChannelFactoryBindingContexts =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.canBuildChannelFactoryBindingContexts, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        public override bool CanBuildChannelListener<TChannel>(ssm::System.ServiceModel.Channels.BindingContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> shg;
            if (this.canBuildChannelListenerBindingContexts
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool>>(out shg))
              return shg.Invoke(context);
            else 
            {
              if (this.__callBase)
                return base.CanBuildChannelListener<TChannel>(context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, bool>
                         (this, "CanBuildChannelListener");
            }
        }

        /// <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        public void CanBuildChannelListenerBindingContext<TChannel>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, bool> stub)
            where TChannel : class, ssm::System.ServiceModel.Channels.IChannel
        {
            this.canBuildChannelListenerBindingContexts =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.canBuildChannelListenerBindingContexts, (global::System.Delegate)stub);
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.Clone"/>
        /// </summary>
        public override ssm::System.ServiceModel.Channels.BindingElement Clone()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElement> sh = this.Clone01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElement>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.Clone();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, 
                                      ssm::System.ServiceModel.Channels.BindingElement>(this, "Clone");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.Clone"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingElement> Clone01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)"/>
        /// </summary>
        public override T GetProperty<T>(ssm::System.ServiceModel.Channels.BindingContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, T> shg;
            if (this.getPropertyBindingContexts
                  .TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, T>>(out shg))
              return shg.Invoke(context);
            else 
            {
              if (this.__callBase)
                return base.GetProperty<T>(context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerBindingElement, T>(this, "GetProperty");
            }
        }

        /// <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        public void GetPropertyBindingContext<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Channels.BindingContext, T> stub)
            where T : class
        {
            this.getPropertyBindingContexts =
              mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.getPropertyBindingContexts, (global::System.Delegate)stub);
        }

        /// <summary>Initializes a new instance of type SHttpMessageHandlerBindingElement</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelFactoryBindingContexts;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary buildChannelListenerBindingContexts;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary canBuildChannelFactoryBindingContexts;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary canBuildChannelListenerBindingContexts;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary getPropertyBindingContexts;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageHandlerChannel")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageHandlerChannel
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageHandlerChannel(
            ssm::System.ServiceModel.Channels.ChannelManagerBase channelManager,
            ssm::System.ServiceModel.Channels.IReplyChannel innerChannel,
            mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory httpMessageHandlerFactory,
            bool asynchronousSendEnabled,
            bool includeExceptionDetailInFaults
        )
        : base(channelManager, innerChannel, httpMessageHandlerFactory, asynchronousSendEnabled, includeExceptionDetailInFaults)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultCloseTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultCloseTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultCloseTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, global::System.TimeSpan>
                             (this, "get_DefaultCloseTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultCloseTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultOpenTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultOpenTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultOpenTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, global::System.TimeSpan>
                             (this, "get_DefaultOpenTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultOpenTimeoutGet;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        protected override global::System.Type GetCommunicationObjectType()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> sh = this.GetCommunicationObjectType01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetCommunicationObjectType();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, global::System.Type>
                         (this, "GetCommunicationObjectType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> GetCommunicationObjectType01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1"/>
        /// </summary>
        public override T GetProperty<T>()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> shg;
            if (this.getProperty01s.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T>>(out shg))
              return shg.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetProperty<T>();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, T>(this, "GetProperty");
            }
        }

        /// <summary>Sets stubs of GetProperty()</summary>
        public void GetProperty01<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> stub)
            where T : class
        {
            this.getProperty01s = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.getProperty01s, (global::System.Delegate)stub);
        }

        /// <summary>Initializes a new instance of type SHttpMessageHandlerChannel</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnAbort"/>
        /// </summary>
        protected override void OnAbort()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnAbort01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnAbort();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnAbort");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnAbort"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnAbort01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginClose(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginCloseTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, global::System.IAsyncResult>
                         (this, "OnBeginClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginCloseTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginOpen(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginOpenTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel, global::System.IAsyncResult>
                         (this, "OnBeginOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginOpenTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        protected override void OnClose(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnCloseTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnCloseTimeSpan;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnClosed"/>
        /// </summary>
        protected override void OnClosed()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosed01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosed();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnClosed");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnClosed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosed01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        protected override void OnClosing()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosing01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosing();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnClosing");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosing01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndClose(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndCloseIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnEndClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndCloseIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndOpen(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndOpenIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnEndOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndOpenIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        protected override void OnFaulted()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnFaulted01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnFaulted();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnFaulted");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnFaulted01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        protected override void OnOpen(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnOpenTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnOpenTimeSpan;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnOpened"/>
        /// </summary>
        protected override void OnOpened()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpened01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpened();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnOpened");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnOpened"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpened01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpening"/>
        /// </summary>
        protected override void OnOpening()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpening01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpening();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannel>(this, "OnOpening");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary getProperty01s;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageHandlerChannelListener")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpMessageHandlerChannelListener
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageHandlerChannelListener(
            ssm::System.ServiceModel.Channels.Binding binding,
            ssm::System.ServiceModel.Channels.IChannelListener<ssm::System.ServiceModel.Channels.IReplyChannel> innerListener,
            mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory httpMessageHandlerFactory,
            bool asynchronousSendEnabled,
            bool includeExceptionDetailInFaults
        )
        : base(binding, innerListener, httpMessageHandlerFactory, asynchronousSendEnabled, includeExceptionDetailInFaults)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultCloseTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultCloseTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultCloseTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultCloseTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultCloseTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultOpenTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultOpenTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultOpenTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultOpenTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultOpenTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultReceiveTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultReceiveTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultReceiveTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultReceiveTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultReceiveTimeoutGet;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout"/>
        /// </summary>
        protected override global::System.TimeSpan DefaultSendTimeout
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> sh = this.DefaultSendTimeoutGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan>)null)
                  return sh.Invoke();
                else 
                {
                  if (this.__callBase)
                    return base.DefaultSendTimeout;
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return 
                    _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.TimeSpan>
                        (this, "get_DefaultSendTimeout");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> DefaultSendTimeoutGet;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        protected override global::System.Type GetCommunicationObjectType()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> sh = this.GetCommunicationObjectType01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetCommunicationObjectType();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.Type>
                         (this, "GetCommunicationObjectType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> GetCommunicationObjectType01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1"/>
        /// </summary>
        public override T GetProperty<T>()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> shg;
            if (this.getProperty01s.TryGetValue<mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T>>(out shg))
              return shg.Invoke();
            else 
            {
              if (this.__callBase)
                return base.GetProperty<T>();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, T>(this, "GetProperty");
            }
        }

        /// <summary>Sets stubs of GetProperty()</summary>
        public void GetProperty01<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T> stub)
            where T : class
        {
            this.getProperty01s = mmf::Microsoft.Moles.Framework.Stubs.StubDictionary.Concat(this.getProperty01s, (global::System.Delegate)stub);
        }

        /// <summary>Initializes a new instance of type SHttpMessageHandlerChannelListener</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        protected override void OnAbort()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnAbort01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnAbort");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnAbort"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnAbort01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        protected override ssm::System.ServiceModel.Channels.IReplyChannel OnAcceptChannel(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> sh
               = this.OnAcceptChannelTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel>)null
              )
              return sh.Invoke(timeout);
            else 
            {
              if (this.__callBase)
                return base.OnAcceptChannel(timeout);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, 
                                      ssm::System.ServiceModel.Channels.IReplyChannel>(this, "OnAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnAcceptChannel(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, ssm::System.ServiceModel.Channels.IReplyChannel> OnAcceptChannelTimeSpan;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginAcceptChannel(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginAcceptChannelTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              if (this.__callBase)
                return base.OnBeginAcceptChannel(timeout, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginAcceptChannelTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginClose(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginCloseTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginCloseTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginOpen(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginOpenTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginOpenTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        protected override global::System.IAsyncResult OnBeginWaitForChannel(
            global::System.TimeSpan timeout,
            global::System.AsyncCallback callback,
            object state
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> sh
               = this.OnBeginWaitForChannelTimeSpanAsyncCallbackObject;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult>)null)
              return sh.Invoke(timeout, callback, state);
            else 
            {
              if (this.__callBase)
                return base.OnBeginWaitForChannel(timeout, callback, state);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.IAsyncResult>
                         (this, "OnBeginWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, global::System.AsyncCallback, object, global::System.IAsyncResult> OnBeginWaitForChannelTimeSpanAsyncCallbackObject;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        protected override void OnClose(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnCloseTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnCloseTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed"/>
        /// </summary>
        protected override void OnClosed()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosed01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosed();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnClosed");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosed01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        protected override void OnClosing()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnClosing01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnClosing();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnClosing");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnClosing01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        protected override ssm::System.ServiceModel.Channels.IReplyChannel OnEndAcceptChannel(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> sh
               = this.OnEndAcceptChannelIAsyncResult;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel>)null)
              return sh.Invoke(result);
            else 
            {
              if (this.__callBase)
                return base.OnEndAcceptChannel(result);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, 
                                      ssm::System.ServiceModel.Channels.IReplyChannel>(this, "OnEndAcceptChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndAcceptChannel(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, ssm::System.ServiceModel.Channels.IReplyChannel> OnEndAcceptChannelIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndClose(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndCloseIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnEndClose");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndCloseIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        protected override void OnEndOpen(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> sh = this.OnEndOpenIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult>)null)
              sh.Invoke(result);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnEndOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> OnEndOpenIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        protected override bool OnEndWaitForChannel(global::System.IAsyncResult result)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> sh = this.OnEndWaitForChannelIAsyncResult;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool>)null)
              return sh.Invoke(result);
            else 
            {
              if (this.__callBase)
                return base.OnEndWaitForChannel(result);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, bool>
                         (this, "OnEndWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndWaitForChannel(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, bool> OnEndWaitForChannelIAsyncResult;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        protected override void OnFaulted()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnFaulted01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnFaulted();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnFaulted");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnFaulted01;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        protected override void OnOpen(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> sh = this.OnOpenTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan>)null)
              sh.Invoke(timeout);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnOpen");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.TimeSpan> OnOpenTimeSpan;

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        protected override void OnOpened()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpened01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpened();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnOpened");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnOpened"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpened01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnOpening"/>
        /// </summary>
        protected override void OnOpening()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpening01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpening();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener>(this, "OnOpening");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        protected override bool OnWaitForChannel(global::System.TimeSpan timeout)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> sh = this.OnWaitForChannelTimeSpan;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool>)null)
              return sh.Invoke(timeout);
            else 
            {
              if (this.__callBase)
                return base.OnWaitForChannel(timeout);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, bool>
                         (this, "OnWaitForChannel");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnWaitForChannel(System.TimeSpan)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan, bool> OnWaitForChannelTimeSpan;

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.Uri"/>
        /// </summary>
        public override global::System.Uri Uri
        {
            get
            {
                mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> sh = this.UriGet;
                if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri>)null)
                  return sh.Invoke();
                else 
                {
                  mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                  return _behavior.Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerChannelListener, global::System.Uri>
                             (this, "get_Uri");
                }
            }
        }

        /// <summary>Sets the stub of <see cref="P:System.ServiceModel.Channels.ChannelListenerBase.Uri"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Uri> UriGet;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;

        private mmf::Microsoft.Moles.Framework.Stubs.StubDictionary getProperty01s;
    }
}
namespace Microsoft.ApplicationServer.Http.Channels.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageHandlerFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMessageHandlerFactory
      : mash::Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageHandlerFactory()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpMessageHandlerFactory(global::System.Type[] handlers)
        : base(handlers)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpMessageHandlerFactory</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.OnCreate(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        protected override mnh::System.Net.Http.HttpMessageChannel OnCreate(mnh::System.Net.Http.HttpMessageChannel innerChannel)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> sh
               = this.OnCreateHttpMessageChannel;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel>)
                    null)
              return sh.Invoke(innerChannel);
            else 
            {
              if (this.__callBase)
                return base.OnCreate(innerChannel);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Channels.Moles.SHttpMessageHandlerFactory, mnh::System.Net.Http.HttpMessageChannel>
                         (this, "OnCreate");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.OnCreate(System.Net.Http.HttpMessageChannel)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpMessageChannel, mnh::System.Net.Http.HttpMessageChannel> OnCreateHttpMessageChannel;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpMessageInspector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpMessageInspector
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpMessageInspector()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpMessageInspector</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnAfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        protected override object OnAfterReceiveRequest(mnh::System.Net.Http.HttpRequestMessage request)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, object> sh
               = this.OnAfterReceiveRequestHttpRequestMessage;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, object>)null)
              return sh.Invoke(request);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpMessageInspector, object>(this, "OnAfterReceiveRequest");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnAfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, object> OnAfterReceiveRequestHttpRequestMessage;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnBeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>
        /// </summary>
        protected override void OnBeforeSendReply(mnh::System.Net.Http.HttpResponseMessage response, object correlationState)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, object> sh
               = this.OnBeforeSendReplyHttpResponseMessageObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, object>)null)
              sh.Invoke(response, correlationState);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpMessageInspector>(this, "OnBeforeSendReply");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnBeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<mnh::System.Net.Http.HttpResponseMessage, object> OnBeforeSendReplyHttpResponseMessageObject;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationDescription")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationDescription
      : mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationDescription()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpOperationDescription(string name, ssm::System.ServiceModel.Description.ContractDescription declaringContract)
        : base(name, declaringContract)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationDescription</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>
        /// </summary>
        protected override global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> OnGetInputParameters()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> sh
               = this.OnGetInputParameters01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>)null)
              return sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler, 
                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>
                         (this, "OnGetInputParameters");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetInputParameters01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/>
        /// </summary>
        protected override global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> OnGetOutputParameters()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> sh
               = this.OnGetOutputParameters01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>)null)
              return sh.Invoke();
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler, 
                                      global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>>
                         (this, "OnGetOutputParameters");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter>> OnGetOutputParameters01;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnHandle(System.Object[])"/>
        /// </summary>
        protected override object[] OnHandle(object[] input)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> sh = this.OnHandleObjectArray;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]>)null)
              return sh.Invoke(input);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler, object[]>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnHandle(System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object[], object[]> OnHandleObjectArray;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`2")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler01<T,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler01(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler01</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(`1)"/>
        /// </summary>
        public override TOutput OnHandle(T input)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T, TOutput> sh = this.OnHandleT;
            if ((object)sh != (object)null)
              return sh.Invoke(input);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler01<T, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(`1)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T, TOutput> OnHandleT;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler01<T, TOutput>, string>
                         (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`3")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler02<T1,T2,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler02(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler02</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(`1,`2)"/>
        /// </summary>
        public override TOutput OnHandle(T1 input1, T2 input2)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, TOutput> sh = this.OnHandleT1T2;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler02<T1, T2, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(`1,`2)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, TOutput> OnHandleT1T2;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler02<T1, T2, TOutput>, string>
                         (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`4")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler03<T1,T2,T3,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler03(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler03</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(`1,`2,`3)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, TOutput> sh = this.OnHandleT1T2T3;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler03<T1, T2, T3, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(`1,`2,`3)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, TOutput> OnHandleT1T2T3;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler03<T1, T2, T3, TOutput>, string>
                         (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`5")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler04<T1,T2,T3,T4,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler04(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler04</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(`1,`2,`3,`4)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, TOutput> sh = this.OnHandleT1T2T3T4;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler04<T1, T2, T3, T4, TOutput>, TOutput>
                    (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(`1,`2,`3,`4)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, TOutput> OnHandleT1T2T3T4;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler04<T1, T2, T3, T4, TOutput>, string>
                    (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`6")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler05<T1,T2,T3,T4,T5,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler05(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler05</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(`1,`2,`3,`4,`5)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, TOutput> sh = this.OnHandleT1T2T3T4T5;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler05<T1, T2, T3, T4, T5, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(`1,`2,`3,`4,`5)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, TOutput> OnHandleT1T2T3T4T5;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler05<T1, T2, T3, T4, T5, TOutput>, string>
                    (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`7")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler06<T1,T2,T3,T4,T5,T6,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler06(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler06</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(`1,`2,`3,`4,`5,`6)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, TOutput> sh = this.OnHandleT1T2T3T4T5T6;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler06<T1, T2, T3, T4, T5, T6, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(`1,`2,`3,`4,`5,`6)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, TOutput> OnHandleT1T2T3T4T5T6;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler06<T1, T2, T3, T4, T5, T6, TOutput>, string>
                         (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`8")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler07<T1,T2,T3,T4,T5,T6,T7,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler07(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler07</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(`1,`2,`3,`4,`5,`6,`7)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, TOutput> sh = this.OnHandleT1T2T3T4T5T6T7;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler07<T1, T2, T3, T4, T5, T6, T7, TOutput>, TOutput>
                         (this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(`1,`2,`3,`4,`5,`6,`7)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, TOutput> OnHandleT1T2T3T4T5T6T7;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler07<T1, T2, T3, T4, T5, T6, T7, TOutput>, string>
                         (this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`9")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler08<T1,T2,T3,T4,T5,T6,T7,T8,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler08(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler08</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, TOutput> sh = this.OnHandleT1T2T3T4T5T6T7T8;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler08<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, 
                               TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, TOutput> OnHandleT1T2T3T4T5T6T7T8;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler08<T1, T2, T3, T4, T5, T6, T7, T8, TOutput>, 
                               string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`10")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler09<T1,T2,T3,T4,T5,T6,T7,T8,T9,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler09(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler09</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput> sh = this.OnHandleT1T2T3T4T5T6T7T8T9;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler09<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, 
                                    TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput> OnHandleT1T2T3T4T5T6T7T8T9;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result
                                   <global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationHandler09<T1, T2, T3, T4, T5, T6, T7, T8, T9, TOutput>, 
                                    string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`11")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler10<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler10(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler10</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput> sh = this.OnHandleT1T2T3T4T5T6T7T8T9T10
              ;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`12")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler11<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler11(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler11</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10, input11);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`13")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler12<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler12(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler12</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11,
            T12 input12
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11T12;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10, input11, input12);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11T12;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`14")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler13<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler13(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler13</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11,
            T12 input12,
            T13 input13
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10, input11, input12, input13);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`15")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler14<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler14(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler14</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11,
            T12 input12,
            T13 input13,
            T14 input14
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10, input11, input12, input13, input14);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`16")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler15<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler15(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler15</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11,
            T12 input12,
            T13 input13,
            T14 input14,
            T15 input15
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14T15;
            if ((object)sh != (object)null)
              return 
                sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, input9, input10, input11, input12, input13, input14, input15);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14T15;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<, , , , , , , , , , , , , , , , >))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandler`17")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandler16<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TOutput>
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandler16(string outputParameterName)
        : base(outputParameterName)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandler16</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)"/>
        /// </summary>
        public override TOutput OnHandle(
            T1 input1,
            T2 input2,
            T3 input3,
            T4 input4,
            T5 input5,
            T6 input6,
            T7 input7,
            T8 input8,
            T9 input9,
            T10 input10,
            T11 input11,
            T12 input12,
            T13 input13,
            T14 input14,
            T15 input15,
            T16 input16
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput> sh
               = this.OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14T15T16;
            if ((object)sh != (object)null)
              return sh.Invoke(input1, input2, input3, input4, input5, input6, input7, input8, 
                               input9, input10, input11, input12, input13, input14, input15, input16);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, TOutput>(this, "OnHandle");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput> OnHandleT1T2T3T4T5T6T7T8T9T10T11T12T13T14T15T16;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles
                                                .SHttpOperationHandler16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TOutput>, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationHandlerFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationHandlerFactory
      : mash::Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandlerFactory()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpOperationHandlerFactory(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationHandlerFactory</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        protected override global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler> OnCreateRequestHandlers(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription operation)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                               mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                               global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> sh
               = this.OnCreateRequestHandlersServiceEndpointHttpOperationDescription;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel
                                                                                                                                                                 .Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>)null)
              return sh.Invoke(endpoint, operation);
            else 
            {
              if (this.__callBase)
                return base.OnCreateRequestHandlers(endpoint, operation);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpOperationHandlerFactory, 
                                      global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>
                         (this, "OnCreateRequestHandlers");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateRequestHandlersServiceEndpointHttpOperationDescription;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        protected override global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler> OnCreateResponseHandlers(ssm::System.ServiceModel.Description.ServiceEndpoint endpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription operation)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                               mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, 
                                                               global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> sh
               = this.OnCreateResponseHandlersServiceEndpointHttpOperationDescription;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, 
                                                                          mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel
                                                                                                                                                                 .Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>)null)
              return sh.Invoke(endpoint, operation);
            else 
            {
              if (this.__callBase)
                return base.OnCreateResponseHandlers(endpoint, operation);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpOperationHandlerFactory, 
                                      global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>>
                         (this, "OnCreateResponseHandlers");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<ssm::System.ServiceModel.Description.ServiceEndpoint, mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription, global::System.Collections.ObjectModel.Collection<mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler>> OnCreateResponseHandlersServiceEndpointHttpOperationDescription;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpOperationSelector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpOperationSelector
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpOperationSelector()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpOperationSelector</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        protected override string OnSelectOperation(mnh::System.Net.Http.HttpRequestMessage message)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string> sh
               = this.OnSelectOperationHttpRequestMessage;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string>)null)
              return sh.Invoke(message);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SHttpOperationSelector, string>(this, "OnSelectOperation");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, string> OnSelectOperationHttpRequestMessage;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpParameter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpParameter
      : mash::Microsoft.ApplicationServer.Http.Description.HttpParameter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpParameter(string name, global::System.Type type)
        : base(name, type)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpParameter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpParameterCollection")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpParameterCollection
      : mash::Microsoft.ApplicationServer.Http.Description.HttpParameterCollection
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpParameterCollection()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpParameterCollection(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpParameter> parameters)
        : base(parameters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpParameterCollection</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Description.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpParameterValueConverter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SHttpParameterValueConverter
      : mash::Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpParameterValueConverter(global::System.Type type)
        : base(type)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromType(System.Type)"/>
        /// </summary>
        public override bool CanConvertFromType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.CanConvertFromTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpParameterValueConverter, bool>
                         (this, "CanConvertFromType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.CanConvertFromType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> CanConvertFromTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Convert(System.Object)"/>
        /// </summary>
        public override object Convert(object value)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object> sh = this.ConvertObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object>)null)
              return sh.Invoke(value);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpParameterValueConverter, object>(this, "Convert");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.ConvertFromString(System.String)"/>
        /// </summary>
        protected override object ConvertFromString(string value)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> sh = this.ConvertFromStringString;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object>)null)
              return sh.Invoke(value);
            else 
            {
              if (this.__callBase)
                return base.ConvertFromString(value);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpParameterValueConverter, object>
                         (this, "ConvertFromString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.ConvertFromString(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> ConvertFromStringString;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.Convert(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object> ConvertObject;

        /// <summary>Initializes a new instance of type SHttpParameterValueConverter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.IsInstanceOf(System.Object)"/>
        /// </summary>
        public override bool IsInstanceOf(object value)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> sh = this.IsInstanceOfObject;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool>)null)
              return sh.Invoke(value);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Description.Moles.SHttpParameterValueConverter, bool>(this, "IsInstanceOf");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter.IsInstanceOf(System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, bool> IsInstanceOfObject;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HttpRequestMessage`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<>))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpRequestMessage`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpRequestMessage<T>
      : mash::Microsoft.ApplicationServer.Http.HttpRequestMessage<T>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage(T value)
        : base(value)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage(T value, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(value, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpRequestMessage(
            T value,
            mnh::System.Net.Http.HttpMethod method,
            global::System.Uri requestUri,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(value, method, requestUri, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpRequestMessage</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpResponseException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpResponseException
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpResponseException()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseException(mnh::System.Net.Http.HttpResponseMessage response)
        : base(response)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseException(global::System.Net.HttpStatusCode statusCode)
        : base(statusCode)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpResponseException</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HttpResponseMessage`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<>))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpResponseMessage`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpResponseMessage<T>
      : mash::Microsoft.ApplicationServer.Http.HttpResponseMessage<T>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(T value)
        : base(value)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(global::System.Net.HttpStatusCode statusCode)
        : base(statusCode)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(T value, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(value, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(T value, global::System.Net.HttpStatusCode statusCode)
        : base(value, statusCode)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpResponseMessage(
            T value,
            global::System.Net.HttpStatusCode statusCode,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(value, statusCode, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpResponseMessage</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.HttpServiceHost))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpServiceHost")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpServiceHost
      : mash::Microsoft.ApplicationServer.Http.HttpServiceHost
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHost()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHost(object singletonInstance, global::System.Uri[] baseAddresses)
        : base(singletonInstance, baseAddresses)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHost(object singletonInstance, string[] baseAddresses)
        : base(singletonInstance, baseAddresses)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHost(global::System.Type serviceType, global::System.Uri[] baseAddresses)
        : base(serviceType, baseAddresses)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHost(global::System.Type serviceType, string[] baseAddresses)
        : base(serviceType, baseAddresses)
        {
            this.InitializeStub();
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddDefaultEndpoints"/>
        /// </summary>
        public override global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates
                                             .Func<global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>> sh
               = this.AddDefaultEndpoints01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates
                                                        .Func<global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.AddDefaultEndpoints();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SHttpServiceHost, 
                                      global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>>
                         (this, "AddDefaultEndpoints");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddDefaultEndpoints"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.ObjectModel.ReadOnlyCollection<ssm::System.ServiceModel.Description.ServiceEndpoint>> AddDefaultEndpoints01;

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SHttpServiceHost</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.OnOpening"/>
        /// </summary>
        protected override void OnOpening()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action sh = this.OnOpening01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action)null)
              sh.Invoke();
            else 
            {
              if (this.__callBase)
                base.OnOpening();
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SHttpServiceHost>(this, "OnOpening");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.HttpServiceHost.OnOpening"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action OnOpening01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Activation.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = HttpServiceHostFactory")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SHttpServiceHostFactory
      : mash::Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SHttpServiceHostFactory()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])"/>
        /// </summary>
        protected override ssm::System.ServiceModel.ServiceHost CreateServiceHost(global::System.Type serviceType, global::System.Uri[] baseAddresses)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Uri[], ssm::System.ServiceModel.ServiceHost> sh
               = this.CreateServiceHostTypeUriArray;
            if (sh !=
                  (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Uri[], ssm::System.ServiceModel.ServiceHost>)
                    null)
              return sh.Invoke(serviceType, baseAddresses);
            else 
            {
              if (this.__callBase)
                return base.CreateServiceHost(serviceType, baseAddresses);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Activation.Moles.SHttpServiceHostFactory, ssm::System.ServiceModel.ServiceHost>
                         (this, "CreateServiceHost");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Uri[], ssm::System.ServiceModel.ServiceHost> CreateServiceHostTypeUriArray;

        /// <summary>Initializes a new instance of type SHttpServiceHostFactory</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.IQueryComposer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.IQueryComposer))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = IQueryComposer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SIQueryComposer
      : mmf::Microsoft.Moles.Framework.Stubs.StubBase
      , mash::Microsoft.ApplicationServer.Http.IQueryComposer
    {
        /// <summary>Initializes a new instance of type SIQueryComposer</summary>
        public SIQueryComposer()
        {
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.IQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> ComposeQueryIEnumerableString;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.IQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
        /// </summary>
        global::System.Collections.IEnumerable mash::Microsoft.ApplicationServer.Http.IQueryComposer.ComposeQuery(global::System.Collections.IEnumerable rootedQuery, string url)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> 
              sh = this.ComposeQueryIEnumerableString;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable>)null)
              return sh.Invoke(rootedQuery, url);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SIQueryComposer, global::System.Collections.IEnumerable>
                         (this, "Microsoft.ApplicationServer.Http.IQueryComposer.ComposeQuery");
            }
        }
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = JsonMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SJsonMediaTypeFormatter
      : mash::Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SJsonMediaTypeFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SJsonMediaTypeFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        protected override bool OnCanReadType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanReadTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanReadType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter, bool>(this, "OnCanReadType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        protected override bool OnCanWriteType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanWriteTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanWriteType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter, bool>(this, "OnCanWriteType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override object OnReadFromStream(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> sh
               = this.OnReadFromStreamTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStream(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter, object>(this, "OnReadFromStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task<object> OnReadFromStreamAsync(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> sh
               = this.OnReadFromStreamAsyncTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                                          mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStreamAsync(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter, global::System.Threading.Tasks.Task<object>>
                    (this, "OnReadFromStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override void OnWriteToStream(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                 global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> sh
               = this.OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                            global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>)null)
              sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                base.OnWriteToStream(type, value, stream, contentHeaders, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter>(this, "OnWriteToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task OnWriteToStreamAsync(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                return base.OnWriteToStreamAsync(type, value, stream, contentHeaders, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonMediaTypeFormatter, global::System.Threading.Tasks.Task>
                         (this, "OnWriteToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = JsonValueMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SJsonValueMediaTypeFormatter
      : mash::Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SJsonValueMediaTypeFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SJsonValueMediaTypeFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        protected override bool OnCanReadType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanReadTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanReadType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter, bool>(this, "OnCanReadType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        protected override bool OnCanWriteType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanWriteTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanWriteType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter, bool>(this, "OnCanWriteType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override object OnReadFromStream(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> sh
               = this.OnReadFromStreamTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStream(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter, object>(this, "OnReadFromStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task<object> OnReadFromStreamAsync(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> sh
               = this.OnReadFromStreamAsyncTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                                          mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStreamAsync(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior
                       .Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter, global::System.Threading.Tasks.Task<object>>
                         (this, "OnReadFromStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override void OnWriteToStream(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                 global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> sh
               = this.OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                            global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>)null)
              sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                base.OnWriteToStream(type, value, stream, contentHeaders, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter>(this, "OnWriteToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task OnWriteToStreamAsync(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                return base.OnWriteToStreamAsync(type, value, stream, contentHeaders, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SJsonValueMediaTypeFormatter, global::System.Threading.Tasks.Task>
                         (this, "OnWriteToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.JsonValueMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeConstants"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeConstants))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MediaTypeConstants")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SMediaTypeConstants
      : mash::Microsoft.ApplicationServer.Http.MediaTypeConstants
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMediaTypeConstants()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMediaTypeConstants</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMediaTypeFormatter
      : mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMediaTypeFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMediaTypeFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        protected override bool OnCanReadType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanReadTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanReadType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter, bool>(this, "OnCanReadType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        protected override bool OnCanWriteType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanWriteTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanWriteType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter, bool>(this, "OnCanWriteType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override object OnReadFromStream(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> sh
               = this.OnReadFromStreamTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter, object>(this, "OnReadFromStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task<object> OnReadFromStreamAsync(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> sh
               = this.OnReadFromStreamAsyncTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                                          mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStreamAsync(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter, global::System.Threading.Tasks.Task<object>>
                         (this, "OnReadFromStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override void OnWriteToStream(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                 global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> sh
               = this.OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                            global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>)null)
              sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter>(this, "OnWriteToStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task OnWriteToStreamAsync(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                return base.OnWriteToStreamAsync(type, value, stream, contentHeaders, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeFormatter, global::System.Threading.Tasks.Task>
                         (this, "OnWriteToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MediaTypeFormatterCollection")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMediaTypeFormatterCollection
      : mash::Microsoft.ApplicationServer.Http.MediaTypeFormatterCollection
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMediaTypeFormatterCollection()
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMediaTypeFormatterCollection(global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMediaTypeFormatterCollection</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.MediaTypeMapping"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.MediaTypeMapping))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = MediaTypeMapping")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SMediaTypeMapping
      : mash::Microsoft.ApplicationServer.Http.MediaTypeMapping
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SMediaTypeMapping(mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType)
        : base(mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SMediaTypeMapping(string mediaType)
        : base(mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SMediaTypeMapping</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        protected override bool OnSupportsMediaType(mnh::System.Net.Http.HttpRequestMessage request)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> sh
               = this.OnSupportsMediaTypeHttpRequestMessage;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool>)null)
              return sh.Invoke(request);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeMapping, bool>(this, "OnSupportsMediaType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        protected override bool OnSupportsMediaType(mnh::System.Net.Http.HttpResponseMessage response)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> sh
               = this.OnSupportsMediaTypeHttpResponseMessage;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool>)null)
              return sh.Invoke(response);
            else 
            {
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SMediaTypeMapping, bool>(this, "OnSupportsMediaType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.OnSupportsMediaType(System.Net.Http.HttpRequestMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpRequestMessage, bool> OnSupportsMediaTypeHttpRequestMessage;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeMapping.OnSupportsMediaType(System.Net.Http.HttpResponseMessage)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<mnh::System.Net.Http.HttpResponseMessage, bool> OnSupportsMediaTypeHttpResponseMessage;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.ObjectContent"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ObjectContent")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SObjectContent
      : mash::Microsoft.ApplicationServer.Http.ObjectContent
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SObjectContent(global::System.Type type, mnh::System.Net.Http.HttpContent content)
        : base(type, content)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(global::System.Type type, object value)
        : base(type, value)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            mnh::System.Net.Http.HttpContent content,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(type, content, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            object value,
            mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType
        )
        : base(type, value, mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            object value,
            string mediaType
        )
        : base(type, value, mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            object value,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(type, value, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            object value,
            mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(type, value, mediaType, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent(
            global::System.Type type,
            object value,
            string mediaType,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(type, value, mediaType, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        protected override global::System.IO.Stream CreateContentReadStream()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> sh = this.CreateContentReadStream01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.CreateContentReadStream();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent, global::System.IO.Stream>
                         (this, "CreateContentReadStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.CreateContentReadStream"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream> CreateContentReadStream01;

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> sh = this.DisposeBoolean;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool>)null)
              sh.Invoke(disposing);
            else 
            {
              if (this.__callBase)
                base.Dispose(disposing);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent>(this, "Dispose");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:System.Net.Http.HttpContent.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean;

        /// <summary>Initializes a new instance of type SObjectContent</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override void SerializeToStream(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> sh
               = this.SerializeToStreamStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext>)null)
              sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                base.SerializeToStream(stream, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent>(this, "SerializeToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        protected override global::System.Threading.Tasks.Task SerializeToStreamAsync(global::System.IO.Stream stream, global::System.Net.TransportContext context)
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.SerializeToStreamAsyncStreamTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(stream, context);
            else 
            {
              if (this.__callBase)
                return base.SerializeToStreamAsync(stream, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent, global::System.Threading.Tasks.Task>
                         (this, "SerializeToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.Stream, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> SerializeToStreamAsyncStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.Stream, global::System.Net.TransportContext> SerializeToStreamStreamTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        protected override bool TryComputeLength(out long length)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> sh = this.TryComputeLengthInt64Out;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool>)null)
              return sh.Invoke(out length);
            else 
            {
              if (this.__callBase)
                return base.TryComputeLength(out length);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent, long>(this, "TryComputeLength.length", out length);
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SObjectContent, bool>(this, "TryComputeLength");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.ObjectContent.TryComputeLength(System.Int64@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<long, bool> TryComputeLengthInt64Out;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.ObjectContent`1"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.ObjectContent<>))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ObjectContent`1")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SObjectContent01<T>
      : mash::Microsoft.ApplicationServer.Http.ObjectContent<T>
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(T value)
        : base(value)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(mnh::System.Net.Http.HttpContent content)
        : base(content)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(T value, mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType)
        : base(value, mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(mnh::System.Net.Http.HttpContent content, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(content, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(T value, string mediaType)
        : base(value, mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(T value, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(value, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(
            T value,
            mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(value, mediaType, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SObjectContent01(
            T value,
            string mediaType,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters
        )
        : base(value, mediaType, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SObjectContent01</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ParsedMediaTypeHeaderValue")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SParsedMediaTypeHeaderValue
      : mash::Microsoft.ApplicationServer.Http.ParsedMediaTypeHeaderValue
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SParsedMediaTypeHeaderValue(mnh::System.Net.Http.Headers.MediaTypeHeaderValue mediaType)
        : base(mediaType)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SParsedMediaTypeHeaderValue</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = QueryCompositionOperationInvoker")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    internal partial class SQueryCompositionOperationInvoker
      : mash::Microsoft.ApplicationServer.Http.QueryCompositionOperationInvoker
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SQueryCompositionOperationInvoker(ssm::System.ServiceModel.Dispatcher.IOperationInvoker invoker, mash::Microsoft.ApplicationServer.Http.IQueryComposer queryComposer)
        : base(invoker, queryComposer)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SQueryCompositionOperationInvoker</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = RequestContentHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SRequestContentHandler
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SRequestContentHandler(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter requestContentParameter, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(requestContentParameter, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SRequestContentHandler</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SRequestContentHandler, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = ResponseContentHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SResponseContentHandler
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SResponseContentHandler(mash::Microsoft.ApplicationServer.Http.Description.HttpParameter responseContentParameter, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.MediaTypeFormatter> formatters)
        : base(responseContentParameter, formatters)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SResponseContentHandler</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SResponseContentHandler, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = UriAndMethodOperationSelector")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUriAndMethodOperationSelector
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUriAndMethodOperationSelector(global::System.Uri baseAddress, global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> operations)
        : base(baseAddress, operations)
        {
            this.InitializeStub();
        }

        /// <summary>Initializes a new instance</summary>
        public SUriAndMethodOperationSelector(
            global::System.Uri baseAddress,
            global::System.Collections.Generic.IEnumerable<mash::Microsoft.ApplicationServer.Http.Description.HttpOperationDescription> operations,
            mash::Microsoft.ApplicationServer.Http.TrailingSlashMode trailingSlashMode
        )
        : base(baseAddress, operations, trailingSlashMode)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SUriAndMethodOperationSelector</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnTrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
        /// </summary>
        protected override bool OnTrySelectOperation(
            mnh::System.Net.Http.HttpRequestMessage request,
            out string operationName,
            out bool matchDifferByTrailingSlash
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> sh
               = this.OnTrySelectOperationHttpRequestMessageStringOutBooleanOut;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mnh::System.Net.Http.HttpRequestMessage, string, bool, bool>)null)
              return sh.Invoke(request, out operationName, out matchDifferByTrailingSlash);
            else 
            {
              if (this.__callBase)
                return base.OnTrySelectOperation(request, out operationName, out matchDifferByTrailingSlash);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              _behavior.ValueAtReturn<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SUriAndMethodOperationSelector, string>
                  (this, "OnTrySelectOperation.operationName", out operationName);
              _behavior.ValueAtReturn<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SUriAndMethodOperationSelector, bool>
                  (this, "OnTrySelectOperation.matchDifferByTrailingSlash", out matchDifferByTrailingSlash);
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SUriAndMethodOperationSelector, bool>
                         (this, "OnTrySelectOperation");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnTrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutFunc<mnh::System.Net.Http.HttpRequestMessage, string, bool, bool> OnTrySelectOperationHttpRequestMessageStringOutBooleanOut;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Dispatcher.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = UriTemplateHandler")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUriTemplateHandler
      : mash::Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUriTemplateHandler(global::System.Uri baseAddress, ssm::System.UriTemplate uriTemplate)
        : base(baseAddress, uriTemplate)
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SUriTemplateHandler</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public override string ToString()
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> sh = this.ToString01;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string>)null)
              return sh.Invoke();
            else 
            {
              if (this.__callBase)
                return base.ToString();
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Dispatcher.Moles.SUriTemplateHandler, string>(this, "ToString");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString01;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.UrlQueryComposer"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.UrlQueryComposer))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = UrlQueryComposer")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SUrlQueryComposer
      : mash::Microsoft.ApplicationServer.Http.UrlQueryComposer
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SUrlQueryComposer()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.UrlQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
        /// </summary>
        public override global::System.Collections.IEnumerable ComposeQuery(global::System.Collections.IEnumerable rootedQuery, string url)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> 
              sh = this.ComposeQueryIEnumerableString;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable>)null)
              return sh.Invoke(rootedQuery, url);
            else 
            {
              if (this.__callBase)
                return base.ComposeQuery(rootedQuery, url);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SUrlQueryComposer, global::System.Collections.IEnumerable>
                         (this, "ComposeQuery");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.UrlQueryComposer.ComposeQuery(System.Collections.IEnumerable,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.IEnumerable, string, global::System.Collections.IEnumerable> ComposeQueryIEnumerableString;

        /// <summary>Initializes a new instance of type SUrlQueryComposer</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
namespace Microsoft.ApplicationServer.Http.Moles
{
    /// <summary>Stub type of <see cref="T:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Stubs.StubClass(typeof(mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter))]
    [global::System.Diagnostics.DebuggerDisplay("Stub = XmlMediaTypeFormatter")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class SXmlMediaTypeFormatter
      : mash::Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter
      , mmf::Microsoft.Moles.Framework.Stubs.IPartialStub
      , mmf::Microsoft.Moles.Framework.Stubs.IStub
    {
        /// <summary>Initializes a new instance</summary>
        public SXmlMediaTypeFormatter()
        {
            this.InitializeStub();
        }

        /// <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        public bool CallBase
        {
            get
            {
                return this.__callBase;
            }
            set
            {
                this.__callBase = value;
            }
        }

        /// <summary>Initializes a new instance of type SXmlMediaTypeFormatter</summary>
        private void InitializeStub()
        {
        }

        /// <summary>Gets or sets the instance behavior.</summary>
        public mmf::Microsoft.Moles.Framework.Behaviors.IBehavior InstanceBehavior
        {
            get
            {
                return mmf::Microsoft.Moles.Framework.BehavedBehaviors.GetValueOrCurrent(this.__instanceBehavior);
            }
            set
            {
                this.__instanceBehavior = value;
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        protected override bool OnCanReadType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanReadTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanReadType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter, bool>(this, "OnCanReadType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanReadType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanReadTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        protected override bool OnCanWriteType(global::System.Type type)
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> sh = this.OnCanWriteTypeType;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool>)null)
              return sh.Invoke(type);
            else 
            {
              if (this.__callBase)
                return base.OnCanWriteType(type);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter, bool>(this, "OnCanWriteType");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnCanWriteType(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, bool> OnCanWriteTypeType;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override object OnReadFromStream(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework
                   .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> sh
               = this.OnReadFromStreamTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStream(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter, object>(this, "OnReadFromStream");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task<object> OnReadFromStreamAsync(
            global::System.Type type,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> sh
               = this.OnReadFromStreamAsyncTypeStreamHttpContentHeaders;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, 
                                                                          mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>>)null)
              return sh.Invoke(type, stream, contentHeaders);
            else 
            {
              if (this.__callBase)
                return base.OnReadFromStreamAsync(type, stream, contentHeaders);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return 
                _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter, global::System.Threading.Tasks.Task<object>>
                    (this, "OnReadFromStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Threading.Tasks.Task<object>> OnReadFromStreamAsyncTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, object> OnReadFromStreamTypeStreamHttpContentHeaders;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override void OnWriteToStream(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                 global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> sh
               = this.OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, 
                                                                            global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext>)null)
              sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                base.OnWriteToStream(type, value, stream, contentHeaders, context);
              else 
              {
                mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior
                   = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
                _behavior.VoidResult<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter>(this, "OnWriteToStream");
              }
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public override global::System.Threading.Tasks.Task OnWriteToStreamAsync(
            global::System.Type type,
            object value,
            global::System.IO.Stream stream,
            mnh::System.Net.Http.Headers.HttpContentHeaders contentHeaders,
            global::System.Net.TransportContext context
        )
        {
            mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, 
                                                               mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> sh
               = this.OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;
            if (sh != (mmf::Microsoft.Moles.Framework
                              .MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, 
                                                                                                          global::System.Net.TransportContext, global::System.Threading.Tasks.Task>)null)
              return sh.Invoke(type, value, stream, contentHeaders, context);
            else 
            {
              if (this.__callBase)
                return base.OnWriteToStreamAsync(type, value, stream, contentHeaders, context);
              mmf::Microsoft.Moles.Framework.Behaviors.IBehavior _behavior = ((mmf::Microsoft.Moles.Framework.Behaviors.IBehaved)this).InstanceBehavior;
              return _behavior.Result<global::Microsoft.ApplicationServer.Http.Moles.SXmlMediaTypeFormatter, global::System.Threading.Tasks.Task>
                         (this, "OnWriteToStreamAsync");
            }
        }

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext, global::System.Threading.Tasks.Task> OnWriteToStreamAsyncTypeObjectStreamHttpContentHeadersTransportContext;

        /// <summary>Sets the stub of <see cref="M:Microsoft.ApplicationServer.Http.XmlMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.TransportContext)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Type, object, global::System.IO.Stream, mnh::System.Net.Http.Headers.HttpContentHeaders, global::System.Net.TransportContext> OnWriteToStreamTypeObjectStreamHttpContentHeadersTransportContext;

        private bool __callBase;

        private mmf::Microsoft.Moles.Framework.Behaviors.IBehavior __instanceBehavior;
    }
}
